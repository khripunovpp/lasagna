#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã –∏ –≤—Ä–µ–º–µ–Ω–∏
 * –§–æ—Ä–º–∞—Ç: YYYY.MM.DD.HHMM
 */
function generateVersion() {
  const now = new Date();
  const year = now.getFullYear();
  const month = String(now.getMonth() + 1).padStart(2, '0');
  const day = String(now.getDate()).padStart(2, '0');
  const hours = String(now.getHours()).padStart(2, '0');
  const minutes = String(now.getMinutes()).padStart(2, '0');
  
  return `${year}.${month}.${day}.${hours}${minutes}`;
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç index.html —Ñ–∞–π–ª, –¥–æ–±–∞–≤–ª—è—è —Å–∫—Ä–∏–ø—Ç —Å –≤–µ—Ä—Å–∏–µ–π
 *
 * @param {string} buildPath - –ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–±–æ—Ä–∫–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'dist/lasagna')
 * @param {string} version - –ù–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏ –¥–ª—è –∏–Ω—ä–µ–∫—Ü–∏–∏
 * @returns {boolean} - true, –µ—Å–ª–∏ —Ñ–∞–π–ª –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω
 */
function injectVersionToIndexHtml(buildPath, version) {
  const indexPath = path.join(buildPath, 'index.html');

  if (!fs.existsSync(indexPath)) {
    console.warn(`‚ö†Ô∏è  Index —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${indexPath}`);
    return false;
  }
  
  let content = fs.readFileSync(indexPath, 'utf8');
  
  // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Å–∫—Ä–∏–ø—Ç –≤–µ—Ä—Å–∏–∏, –µ—Å–ª–∏ –æ–Ω –≤–¥—Ä—É–≥ —Ç–∞–º –æ–∫–∞–∑–∞–ª—Å—è
  content = content.replace(/<script>window\.__VERSION__\s*=\s*['"].*?['"];<\/script>\s*/, '');
  
  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –≤–µ—Ä—Å–∏–∏ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º </head>
  const versionScript = `<script>window.__VERSION__ = '${version}';</script>`;
  
  if (content.includes('</head>')) {
    content = content.replace('</head>', `  ${versionScript}\n</head>`);
  } else {
    // –ï—Å–ª–∏ –Ω–µ—Ç </head>, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ body
    content = content.replace('<body>', `<body>\n  ${versionScript}`);
  }
  
  fs.writeFileSync(indexPath, content);
  return true;
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
function main() {
  const version = generateVersion();
  console.log(`üì¶ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–µ—Ä—Å–∏–∏: ${version}`);

  const buildPath = process.argv[2];
  if (!buildPath) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–∫–∞–∑–∞–Ω –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å–±–æ—Ä–∫–∏.');
    console.error('–ü—Ä–∏–º–µ—Ä: node scripts/version-inject.js dist/lasagna');
    process.exit(1);
  }

  if (injectVersionToIndexHtml(buildPath, version)) {
    console.log(`‚úÖ –í–µ—Ä—Å–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤: ${path.join(buildPath, 'index.html')}`);
    console.log(`üéâ –í–µ—Ä—Å–∏—è ${version} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞.`);
  } else {
    process.exit(1); // –í—ã—Ö–æ–¥ —Å –æ—à–∏–±–∫–æ–π, –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–π–ª
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  main();
}

module.exports = { generateVersion, injectVersionToIndexHtml };