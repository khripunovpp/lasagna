{
  "version": 3,
  "sources": ["src/app/features/controls/form/chips-list.component.ts", "src/app/features/controls/form/autocomplete.component.ts"],
  "sourcesContent": ["import {Component, forwardRef, HostBinding, input, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n\n@Component({\n  selector: 'lg-chips-list',\n  standalone: true,\n  template: `\n      <div class=\"chips-list\">\n          @for (item of items;track item.label;let last = $last) {\n              <span class=\"chip\"\n                    [style.--chip-color]=\"item.color\"\n                    (click)=\"onSelect(item)\"\n                    [class.selected]=\"item.value === value\"\n                    [attr.data-last]=\"last ? true : null\">\n                  {{ item.label }}\n              </span>\n          }\n      </div>\n  `,\n  styles: [\n    `\n      .chips-list {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n      }\n\n      .chip {\n        background-color: var(--chip-color);\n        color: #fff;\n        padding: 4px 8px;\n        border-radius: 16px;\n        font-size: 0.875rem;\n        display: inline-block;\n        cursor: pointer;\n        transition: all 0.2s;\n        transition-timing-function: cubic-bezier(.47, 1.64, .41, .8);\n      }\n\n      .chip.selected {\n        opacity: 0.5;\n      }\n\n      .chip:hover {\n        transform: scale(1.1);\n      }\n    `,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ChipsListComponent),\n      multi: true,\n    }\n  ],\n  imports: []\n})\n\nexport class ChipsListComponent\n  implements ControlValueAccessor {\n  constructor() {\n  }\n\n  @HostBinding('style.--chip-color') chipColor = 'var(--chip-default-bg)';\n  control = input<ControlValueAccessor>()\n  @Input() items: {\n    label: string\n    value: string\n    color?: string\n  }[] = [];\n  onChangeFn?: (value: any) => {};\n  value: any;\n  selectedItem?: any;\n\n  onSelect = (item: any) => {\n    this.applyValue(item.value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  writeValue(obj: any): void {\n    this.applyValue(obj);\n  }\n\n  applyValue(value: any): void {\n    this.value = value;\n    this.onChangeFn?.(value);\n    this.control()?.writeValue(value);\n  }\n\n  ngOnInit() {\n  }\n\n  clearSelected() {\n    this.value = null;\n  }\n\n}\n", "import {\n  Component,\n  forwardRef,\n  Input,\n  input,\n  OnInit,\n  Optional,\n  output,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NgLabelTemplateDirective,\n  NgOptionTemplateDirective,\n  NgSelectComponent,\n  NgTagTemplateDirective\n} from '@ng-select/ng-select';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {SelectResourcesService} from '../../../shared/service/services/select-resources.service';\nimport {debounceTime, of, Subject, switchMap} from 'rxjs';\nimport {MultiselectItem} from './multiselect.component';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n\nexport interface autocompleteItem {\n  value: unknown\n}\n\n@Component({\n  selector: 'lg-autocomplete',\n  standalone: true,\n  template: `\n    <div class=\"autocomplete\">\n      <ng-select (blur)=\"onBlur()\"\n                 (change)=\"onChangeSelect($event)\"\n                 (search)=\"onSearch($event)\"\n                 [addTag]=\"true\"\n                 [bindValue]=\"key()\"\n                 [appendTo]=\"appendTo()\"\n                 [compareWith]=\"compareWith\"\n                 [editableSearchTerm]=\"true\"\n                 [items]=\"loadedList()\"\n                 [multiple]=\"multi()\"\n                 [ngModel]=\"value\"\n                 [placeholder]=\"placeholder\"\n                 [searchFn]=\"searchFn\"\n                 bindLabel=\"name\"\n                 [notFoundText]=\"'search.not-found' | translate\">\n        <ng-template let-item=\"item\" ng-label-tmp>\n          {{ item?.name ?? item?.value ?? item }}\n        </ng-template>\n        <ng-template let-item=\"item\" ng-option-tmp>\n          {{ item?.name ?? item?.value ?? item }}\n        </ng-template>\n        <ng-template let-searchTerm=\"searchTerm\" ng-tag-tmp>\n          {{ searchTerm }}\n        </ng-template>\n      </ng-select>\n    </div>\n  `,\n  imports: [\n    NgSelectComponent,\n    FormsModule,\n    NgOptionTemplateDirective,\n    NgLabelTemplateDirective,\n    NgTagTemplateDirective,\n    TranslatePipe\n  ],\n  styles: [\n    `\n      lg-autocomplete {\n        display: flex;\n        flex: 1;\n        min-width: 150px;\n      }\n\n      .autocomplete {\n        flex: 1;\n        width: 100%;\n\n        .ng-select.ng-select-single .ng-select-container {\n          height: 51px;\n        }\n\n        .ng-select.ng-select-focused .ng-select-container {\n          outline: none;\n          box-shadow: var(--focus-shadow);\n          border-radius: 12px;\n        }\n\n        .ng-select .ng-select-container {\n          border: none;\n          border-radius: 12px;\n          background-color: var(--control-bg);\n\n          .ng-input {\n            top: 16px !important;\n            padding-right: 10px !important;\n\n            & > input {\n              color: var(--text);\n              font-family: inherit;\n              font-size: inherit;\n            }\n          }\n        }\n\n        .ng-dropdown-panel {\n          border: none;\n          box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);\n          border-radius: 12px;\n          overflow: hidden;\n\n          .ng-option {\n            padding: 16px;\n            border-radius: 12px;\n          }\n        }\n\n        .ng-arrow-wrapper {\n          display: none;\n        }\n\n        .ng-clear-wrapper {\n          display: none;\n        }\n      }\n\n    `\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AutocompleteComponent\n  implements ControlValueAccessor, OnInit {\n  constructor(\n    @Optional() private _selectResourcesService: SelectResourcesService,\n  ) {\n  }\n\n  @Input() placeholder = '';\n  noLoad = input<boolean>(false);\n  resource = input<string>('');\n  key = input<string>('');\n  appendTo = input<string>('');\n  strict = input<boolean>(false);\n  multi = input<boolean>(false);\n  loadedList = signal([]);\n  onSelected = output<unknown>();\n  selectComponent = viewChild(NgSelectComponent);\n  value?: unknown = null\n  initialList = signal<unknown[]>([]);\n  private _onSearch$ = new Subject<{\n    term: string\n    items: unknown[]\n  }>();\n  private _currentSearchTerm: string | null = null;\n\n  onChange: (value: unknown) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  searchFn = (term: string, item: MultiselectItem) => {\n    const val = item as any;\n    if (typeof val === 'string') {\n      return val.toLowerCase().includes(term?.toLowerCase() ?? '');\n    }\n    return val.name?.toLowerCase().includes(term?.toLowerCase() ?? '')\n  }\n\n  compareWith = (a: autocompleteItem, b: autocompleteItem) => {\n    const valA = a as any;\n    const valB = b as any;\n\n    if (!a || !b) {\n      return false;\n    }\n\n    if (typeof valA !== 'string' && typeof valB !== 'string') {\n      return valA?.name === valB?.name\n        || valA?.uuid === valB?.uuid;\n    }\n\n    if (typeof valA === 'string' && typeof valB !== 'string') {\n      return valA === valB?.name\n        || valA === valB?.uuid;\n    }\n\n    if (typeof valA !== 'string' && typeof valB === 'string') {\n      return valA?.name === valB\n        || valA?.uuid === valB;\n    }\n\n    return false;\n  }\n\n  writeValue(value: unknown): void {\n    this.change(value);\n    this.selectComponent()!.searchTerm = '';\n  }\n\n  change(value: unknown) {\n    this.value = value;\n    this.onChange(this.value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeInput(value: unknown) {\n    this.change(value);\n  }\n\n  onChangeSelect(value: unknown) {\n    const val = typeof value === 'string' ? value : (value as any)?.[this.key()];\n    this.change(val);\n    this.onSelected.emit(val);\n  }\n\n  onSearch(event: { term: string, items: unknown[] }) {\n    if (!event.term) {\n      this.writeValue('');\n      return;\n    }\n\n    this._currentSearchTerm = event.term;\n\n    if (!this.noLoad()) {\n      this._onSearch$.next(event);\n    }\n\n    // Устанавливаем текущий запрос как тег, если нет найденных элементов\n    if (event.items.length === 0) {\n      this.loadedList.set([{name: event.term, value: event.term}] as any);\n    } else {\n      this.loadedList.set(event.items as any);\n    }\n\n    // Устанавливаем правильный текст в поиске\n    this.selectComponent()!.searchTerm = this._capitalizeFirstLetter(event.term);\n  }\n\n  onBlur() {\n    const select = this.selectComponent();\n    if (select?.searchTerm) {\n      // Принудительно добавить текущий searchTerm как тег\n      const searchValue = select.searchTerm.trim();\n      if (searchValue) {\n        const tag = {name: searchValue, value: searchValue};\n        this.loadedList.set([tag] as any)// заменить список, если нужно\n        this.change(searchValue);   // обновить модель формы\n        this.onSelected.emit(searchValue); // эмитнуть наружу\n      }\n    }\n  }\n\n  ngOnInit() {\n    this._selectResourcesService.register(this.resource());\n\n    this._onSearch$.asObservable().pipe(\n      debounceTime(300),\n    ).subscribe(event => {\n      this._selectResourcesService.autocomplete(this.resource(), this.key(), event.term);\n    });\n    this._selectResourcesService.registryStream.pipe(\n      switchMap((registry) => {\n        const res = registry.get(this.resource());\n        return res?.stream ?? of([]);\n      }),\n    ).subscribe(items => {\n      this.loadedList.set(items as any);\n      if (this.initialList().length) return;\n      this.initialList.set(items as any);\n    });\n  }\n\n  reload() {\n    // return this._selectResourcesService.load([this.resource()]);\n  }\n\n  focus() {\n    const select = this.selectComponent();\n    if (select) {\n      select.focus();\n    }\n  }\n\n  private _capitalizeFirstLetter(string: string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
