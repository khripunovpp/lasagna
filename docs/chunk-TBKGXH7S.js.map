{
  "version": 3,
  "sources": ["src/app/features/documentation/view/article.component.ts"],
  "sourcesContent": ["import {Component, inject} from '@angular/core';\nimport {defer, filter, map, startWith, switchMap} from 'rxjs';\nimport {AsyncPipe} from '@angular/common';\nimport {ActivatedRoute, NavigationEnd, Router} from '@angular/router';\nimport {USER_LANGUAGE} from '../../settings/service/providers/user-language.token';\nimport {DocsService} from '../service/docs.service';\n\n@Component({\n  selector: 'lg-article',\n  template: `\n    <div class=\"lg-article\">\n      @if (content | async; as contentHTML) {\n        <div [innerHTML]=\"contentHTML\"></div>\n      }\n    </div>\n  `,\n  styles: [\n    `\n      .lg-article {\n        display: flex;\n      }\n    `\n  ],\n  imports: [\n    AsyncPipe\n  ]\n})\nexport class ArticleComponent {\n  constructor(\n    private _docsService: DocsService,\n    private route: ActivatedRoute,\n    private router: Router,\n  ) {\n  }\n\n  private _userLang = inject(USER_LANGUAGE);\n  content = defer(() => this.router.events.pipe(\n    filter(event => event instanceof NavigationEnd),\n    startWith(null),\n    switchMap(() => this._docsService.getDocs()),\n    map((data) => ({\n      data,\n      url: this.route.snapshot.url.map(segment => segment.path).join('/'),\n    })),\n    map(({data, url}) => {\n      if (!url) {\n        return '';\n      }\n      const doc = data.filter(doc => doc.path.includes(url));\n      const targetByLang = doc.find(d => d.language === this._userLang());\n      if (!doc.length) {\n        return 'Start'\n      }\n      if (doc.length > 1 && targetByLang) {\n        return targetByLang.html;\n      }\n      return doc[0]?.html || '404 Not Found';\n    }),\n  ));\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYQ,IAAA,uBAAA,GAAA,OAAA,CAAA;;;AAAK,IAAA,wBAAA,aAAA,KAAA,wBAAA;;;AAeP,IAAO,mBAAP,MAAO,kBAAgB;EAEjB;EACA;EACA;EAHV,YACU,cACA,OACA,QAAc;AAFd,SAAA,eAAA;AACA,SAAA,QAAA;AACA,SAAA,SAAA;EAEV;EAEQ,YAAY,OAAO,aAAa;EACxC,UAAU,MAAM,MAAM,KAAK,OAAO,OAAO,KACvC,OAAO,WAAS,iBAAiB,aAAa,GAC9C,UAAU,IAAI,GACd,UAAU,MAAM,KAAK,aAAa,QAAO,CAAE,GAC3C,IAAI,CAAC,UAAU;IACb;IACA,KAAK,KAAK,MAAM,SAAS,IAAI,IAAI,aAAW,QAAQ,IAAI,EAAE,KAAK,GAAG;IAClE,GACF,IAAI,CAAC,EAAC,MAAM,IAAG,MAAK;AAClB,QAAI,CAAC,KAAK;AACR,aAAO;IACT;AACA,UAAM,MAAM,KAAK,OAAO,CAAAA,SAAOA,KAAI,KAAK,SAAS,GAAG,CAAC;AACrD,UAAM,eAAe,IAAI,KAAK,OAAK,EAAE,aAAa,KAAK,UAAS,CAAE;AAClE,QAAI,CAAC,IAAI,QAAQ;AACf,aAAO;IACT;AACA,QAAI,IAAI,SAAS,KAAK,cAAc;AAClC,aAAO,aAAa;IACtB;AACA,WAAO,IAAI,CAAC,GAAG,QAAQ;EACzB,CAAC,CAAC,CACH;;qCA/BU,mBAAgB,4BAAA,WAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,MAAA,CAAA;EAAA;yEAAhB,mBAAgB,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,WAAA,CAAA,GAAA,UAAA,SAAA,0BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAjBzB,MAAA,4BAAA,GAAA,OAAA,CAAA;AACE,MAAA,8BAAA,GAAA,yCAAA,GAAA,GAAA,OAAA,CAAA;;AAGF,MAAA,0BAAA;;;;AAHE,MAAA,oBAAA;AAAA,MAAA,yBAAA,UAAA,sBAAA,GAAA,GAAA,IAAA,OAAA,KAAA,IAAA,IAAA,OAAA;;oBAaF,SAAS,GAAA,QAAA,CAAA,8GAAA,EAAA,CAAA;;;sEAGA,kBAAgB,CAAA;UApB5B;uBACW,cAAY,UACZ;;;;;;KAMT,SAQQ;MACP;OACD,QAAA,CAAA,2SAAA,EAAA,CAAA;;;;6EAEU,kBAAgB,EAAA,WAAA,oBAAA,UAAA,4DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": ["doc"]
}
