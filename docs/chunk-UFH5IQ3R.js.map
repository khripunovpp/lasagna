{
  "version": 3,
  "sources": ["src/app/features/widgets/eggs-widget/eggs-widget.component.ts"],
  "sourcesContent": ["import {Component, computed, model, output, signal, ViewEncapsulation} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {InputComponent} from '../../controls/form/input.component';\nimport {FlexColumnComponent} from '../../../shared/view/ui/layout/flex-column.component';\nimport {TitleComponent} from '../../../shared/view/ui/layout/title/title.component';\nimport {DecimalPipe} from '@angular/common';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-eggs-widget',\n  standalone: true,\n  template: `\n    <lg-flex-column [size]=\"'medium'\">\n      <lg-title>\n        {{ 'widgets.eggs.convert-title' | translate }}\n      </lg-title>\n\n      <lg-input (ngModelChange)=\"changed.emit(calculated())\"\n                [(ngModel)]=\"eggs\"\n                [placeholder]=\"'widgets.eggs.placeholder' | translate\"\n                [theme]=\"'contrast'\"></lg-input>\n      <div class=\"eggs-widget__eggs\">\n        @for (z of sizes; track z; ) {\n          <div (click)=\"onChooseEggSize(z)\"\n               [class.selected]=\"selected() === z\"\n               class=\"eggs-widget__egg\">\n            <img alt=\"Egg\" src=\"img/egg.svg\">\n            <span>{{ labels[z] | translate }}</span>\n            @if (selected() === z && calculated()) {\n              <span> ~ {{ calculated() | number: '1.' }} {{ 'widgets.eggs.grams' | translate }}</span>\n            }\n          </div>\n        }\n      </div>\n    </lg-flex-column>\n  `,\n  imports: [\n    FormsModule,\n    InputComponent,\n    FlexColumnComponent,\n    TitleComponent,\n    DecimalPipe,\n    TranslatePipe\n  ],\n  styles: [`\n    :host {\n\n      --control-bg: #fcfcfc;\n    }\n\n    lg-eggs-widget {\n      display: flex;\n    }\n\n    .eggs-widget {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .eggs-widget__eggs {\n      display: flex;\n      align-items: flex-end;\n      gap: 8px;\n      max-width: 100vw;\n    }\n\n    .eggs-widget__eggs img {\n      width: 40px;\n    }\n\n    .eggs-widget__egg {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex: 1;\n      flex-direction: column;\n      white-space: nowrap;\n      gap: 8px;\n      background-color: var(--control-bg);\n      border-radius: 24px;\n      padding: 16px;\n    }\n\n    .eggs-widget__egg:first-child img {\n      transform: scale(0.8);\n    }\n\n    .eggs-widget__egg:last-child img {\n      transform: scale(1.2);\n    }\n\n    .eggs-widget__egg.selected {\n      background-color: #61b789;\n    }\n\n    .eggs-widget__egg.selected:first-child {\n      background-color: #b4b8f8;\n    }\n\n    .eggs-widget__egg.selected:last-child {\n      background-color: #ff8080;\n    }\n  `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class EggsWidgetComponent {\n  readonly sizes = ['small', 'medium', 'large'] as const;\n  readonly labels = {\n    small: 'widgets.eggs.size.small',\n    medium: 'widgets.eggs.size.medium',\n    large: 'widgets.eggs.size.large'\n  };\n  eggs = model<string | null>(null);\n  selected = signal<string>('small');\n  calculated = computed(() => {\n    const number = parseFloat(this.eggs() ?? '');\n    const eggWeight: Record<string, number> = {\n      small: 46,\n      medium: 50,\n      large: 59\n    };\n    const weight = eggWeight[this.selected()];\n    if (!number || !weight) {\n      return '';\n    }\n    return number! * weight;\n  });\n  changed = output<number | \"\">();\n\n  onChooseEggSize(size: string) {\n    this.selected.set(size);\n    this.changed.emit(this.calculated());\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
