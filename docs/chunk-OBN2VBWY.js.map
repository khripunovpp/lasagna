{
  "version": 3,
  "sources": ["src/app/shared/view/ui/delete-confirmation-popover/delete-confirmation.service.ts", "src/app/shared/view/ui/delete-confirmation-popover/delete-confirmation-popover.component.ts"],
  "sourcesContent": ["import {Injectable, signal} from '@angular/core';\n\n@Injectable()\nexport class DeleteConfirmationService {\n  readonly settings = signal<{\n    onSuccess: () => void\n    onCancel?: () => void\n    message?: string\n    confirmText?: string\n    cancelText?: string\n    withLock?: boolean\n  } | null>(null);\n\n  configure({\n              onSuccess,\n              onCancel,\n              message,\n              confirmText ,\n              cancelText,\n    withLock,\n            }: {\n    onSuccess: () => void | Promise<void>,\n    onCancel?: () => void | Promise<void>,\n    message?: string,\n    confirmText?: string,\n    cancelText?: string,\n    withLock?: boolean\n  }) {\n    this.settings.set({onSuccess, onCancel, message, confirmText, cancelText,withLock});\n  }\n}\n", "import {Component, effect, inject, viewChild} from '@angular/core';\nimport {DeleteConfirmationService} from './delete-confirmation.service';\nimport {DialogComponent} from '../dialogs/dialog.component';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {CheckboxComponent} from '../../../../features/controls/form/chckbox.component';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {timer} from 'rxjs';\nimport {FlexColumnComponent} from '../../layout/flex-column.component';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\n\n@Component({\n  selector: 'lg-delete-confirmation-popover',\n  template: `\n    <lg-dialog (onCancel)=\"onCancel()\"\n               (onConfirm)=\"onConfirm()\"\n               [cancelButtonStyle]=\"'primary'\"\n               [cancelButtonText]=\"settings()?.cancelText ?? ('delete-close-label'|translate)\"\n               [centerButtons]=\"true\"\n               [columnButtons]=\"false\"\n               [confirmButtonStyle]=\"'secondary'\"\n               [confirmButtonText]=\"settings()?.confirmText ?? ('delete-confirm-label'|translate)\">\n      <lg-flex-column [position]=\"'center'\" [size]=\"'small'\">\n        <div>{{ settings()?.message }}</div>\n\n        @if (settings()?.withLock) {\n          <lg-checkbox [formControl]=\"locked\"\n                       [size]=\"'medium'\"\n                       name=\"disable-deletion\">\n            {{ 'delete-lock-label' | translate }}\n          </lg-checkbox>\n        }\n      </lg-flex-column>\n    </lg-dialog>\n  `,\n  imports: [\n    DialogComponent,\n    TranslatePipe,\n    CheckboxComponent,\n    ReactiveFormsModule,\n    FlexColumnComponent\n  ]\n})\nexport class DeleteConfirmationPopoverComponent {\n  readonly _service = inject(DeleteConfirmationService);\n  readonly settings = this._service.settings;\n  readonly dialogRef = viewChild(DialogComponent);\n  readonly locked = new FormControl(false);\n  eff = effect(() => {\n    if (this.settings() && !this.locked.value) {\n      this.dialogRef()?.open();\n    } else {\n      this.dialogRef()?.close();\n    }\n  });\n\n  onConfirm() {\n    this._emit(true);\n\n    if (this.locked.value) {\n      timer(50000).pipe(takeUntilDestroyed()).subscribe(() => {\n        this.locked.setValue(false);\n      })\n    }\n  }\n\n  onCancel() {\n    this._emit(false);\n    this.locked.setValue(false);\n  }\n\n  private _emit(confirmed: boolean) {\n    if (confirmed) {\n      this.settings()?.onSuccess();\n    } else {\n      this.settings()?.onCancel?.();\n    }\n    this.settings.set(null);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
