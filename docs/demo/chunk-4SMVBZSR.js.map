{
  "version": 3,
  "sources": ["src/app/features/invoices/view/list/categorized-invoices-list.token.ts", "src/app/features/invoices/view/list/invoices-list.component.ts"],
  "sourcesContent": ["import {inject, InjectionToken} from '@angular/core';\nimport {from, map, mergeMap, Observable, switchMap} from 'rxjs';\nimport {groupBy} from '../../../../shared/helpers/grouping.helper';\nimport {InvoicesRepository} from '../../service/Invoices.repository';\nimport {Invoice} from '../../service/Inovice/Invoice';\n\nexport const CATEGORIZED_INVOICES_LIST = new InjectionToken<Observable<any>>('CategorizedInvoicesList', {\n  factory: () => {\n    const invoicesRepository = inject(InvoicesRepository);\n    const invoices = from(invoicesRepository.loadToObservable()).pipe(\n      switchMap(() => invoicesRepository.items$),\n    );\n\n    return invoices.pipe(\n      map((invoices: Invoice[]) => invoices.toSorted((a: Invoice, b: Invoice) => a.prefix.localeCompare(b.prefix))),\n      map((invoices: Invoice[]) => groupBy(invoices, 'prefix')),\n      mergeMap(async (grouped: Record<string, Invoice[]>) => {\n          const list = [];\n\n          for (const groupedKey in grouped) {\n            list.push({\n              group_key: groupedKey,\n              items: grouped[groupedKey]?.toSorted((a, b) => a.createdAt > b.createdAt ? -1 : 1) || [],\n            });\n          }\n\n          if (!list.length) return [];\n\n          const [first, ...sortedList] = list.toSorted((a, b) => a.group_key > b.group_key ? 1 : -1);\n\n          // без категории всегда внизу\n          if (first?.group_key) {\n            return [first].concat(sortedList);\n          }\n\n          return sortedList.concat([first]);\n        }\n      ),\n    );\n  }\n})\n", "import {Component, inject, OnInit, Signal} from '@angular/core';\nimport {GapRowComponent} from '../../../../shared/view/ui/layout/gap-row.component';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {MatIcon} from '@angular/material/icon';\nimport {ContainerComponent} from '../../../../shared/view/ui/layout/container/container.component';\nimport {TitleComponent} from '../../../../shared/view/ui/layout/title/title.component';\nimport {CurrencyPipe, DatePipe, DecimalPipe} from '@angular/common';\nimport {CardListComponent} from '../../../../shared/view/ui/card/card-list.component';\nimport {CardListItemDirective} from '../../../../shared/view/ui/card/card-list-item.directive';\nimport {Stores} from '../../../../shared/service/db/const/stores';\nimport {Router, RouterLink} from '@angular/router';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {ControlsBarComponent} from '../../../../shared/view/ui/controls-bar/controls-bar.component';\nimport {SelectionZoneService} from '../../../../shared/service/services/selection-zone.service';\nimport {SelectionToolsComponent} from '../../../../shared/view/ui/form/selection-tools.component';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {CATEGORIZED_INVOICES_LIST} from './categorized-invoices-list.token';\nimport {InvoicesRepository} from '../../service/Invoices.repository';\nimport {GapColumnComponent} from '../../../../shared/view/ui/layout/gap-column.component';\nimport {Invoice} from '../../service/Inovice/Invoice';\n\n@Component({\n  selector: 'lg-invoices-list',\n  standalone: true,\n  template: `\n    <lg-controls-bar>\n      <lg-button [icon]=\"true\"\n                 (click)=\"onAddInvoice()\"\n                 [size]=\"'medium'\"\n                 [style]=\"'success'\">\n        <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n      </lg-button>\n    </lg-controls-bar>\n\n    <lg-fade-in>\n      <lg-container>\n        <lg-title>\n          <!--          {{ 'products.list-title'|translate }}-->\n          Invoices\n        </lg-title>\n\n        <lg-selection-tools [selectionTypes]=\"['product']\"></lg-selection-tools>\n\n        @for (category of invoices(); track $index; let i = $index) {\n          <lg-title [level]=\"3\">\n            {{ category?.group_key || ('without-category-label'|translate) }}\n          </lg-title>\n\n          <lg-card-list [mode]=\"selectionZoneService.selectionMode()\"\n                        (onSelected)=\"selectionZoneService.putSelected($event)\"\n                        (onDeleteOne)=\"deleteOne($event)\"\n                        [selectAll]=\"selectionZoneService.selectAll()\"\n                        [deselectAll]=\"selectionZoneService.deselectAll()\">\n            @for (invoice of category.items; track (invoice.uuid ?? '') + $index; let i = $index) {\n              <ng-template lgCardListItem [uuid]=\"invoice.uuid\" type=\"product\">\n                <lg-gap-column [size]=\"'medium'\">\n                  <lg-gap-row [center]=\"true\">\n                    <lg-gap-row [center]=\"true\" lgExpand>\n                      <a [routerLink]=\"'/invoices/edit/' + invoice.uuid\">\n                        #{{ invoice.prefix }}/{{ invoice.invoice_number }} - {{ invoice.name }}\n                      </a>\n\n                      <div>\n                        <!--                        {{ $any(invoice).pricePerUnit | userCurrency:'1.0-5' }}-->\n                        <!--                        {{ $any(invoice).perUnitLabel }}-->\n                      </div>\n                    </lg-gap-row>\n\n                    <small class=\"text-muted text-cursive\"\n                           [attr.title]=\"(invoice?.updatedAt || invoice?.createdAt) | date:'short'\">\n                      {{ 'edited-at-label'|translate }} {{ (invoice?.updatedAt || invoice?.createdAt) | timeAgo }}\n                    </small>\n                  </lg-gap-row>\n\n                  <lg-gap-row [center]=\"true\">\n                    <div>\n                      Date due: {{ invoice.date_due | date:'shortDate' }}\n                    </div>\n\n                    <div>\n                      Days left: {{ (invoice.date_due - nowDate) / (1000 * 60 * 60 * 24) | number:'1.0-0' }}\n                    </div>\n                  </lg-gap-row>\n                </lg-gap-column>\n              </ng-template>\n            }\n          </lg-card-list>\n        } @empty {\n          <lg-gap-row [center]=\"true\">\n            <lg-title [level]=\"5\">\n              {{ 'no-products'|translate }}\n            </lg-title>\n          </lg-gap-row>\n        }\n      </lg-container>\n    </lg-fade-in>\n  `,\n  imports: [\n    GapRowComponent,\n    ButtonComponent,\n    MatIcon,\n    ContainerComponent,\n    TitleComponent,\n    CardListComponent,\n    CardListItemDirective,\n    RouterLink,\n    FadeInComponent,\n    ControlsBarComponent,\n    SelectionToolsComponent,\n    TimeAgoPipe,\n    ExpandDirective,\n    TranslatePipe,\n    GapColumnComponent,\n    DatePipe,\n    DecimalPipe\n  ],\n  providers: [\n    SelectionZoneService,\n    CurrencyPipe,\n  ],\n  styles: [\n    `:host {\n      display: block;\n    }\n    `\n  ]\n})\nexport class InvoicesListComponent\n  implements OnInit {\n  constructor(\n    private _notificationsService: NotificationsService,\n    public selectionZoneService: SelectionZoneService,\n    private _invoicesRepository: InvoicesRepository,\n    private _router: Router,\n  ) {\n  }\n\n  nowDate = Date.now();\n  invoices: Signal<{\n    group_key: string\n    items: Invoice[]\n  }[]> = toSignal(inject(CATEGORIZED_INVOICES_LIST));\n  protected readonly Stores = Stores;\n\n  deleteOne(\n    event?: {\n      uuid: string\n      type: string\n    }\n  ) {\n    if (!event?.uuid) {\n      return;\n    }\n    this._invoicesRepository.deleteOne(event!.uuid).then(() => {\n      this._notificationsService.success('invoice.deleted');\n      this.loadItems();\n    });\n  }\n\n  ngOnInit() {\n    this.loadItems();\n  }\n\n  loadItems() {\n    this._invoicesRepository.loadToObservable();\n  }\n\n  onAddInvoice() {\n    this._invoicesRepository.createEmpty().then((resp) => {\n      this._router.navigate(['/invoices/edit', resp]);\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": ["invoices"]
}
