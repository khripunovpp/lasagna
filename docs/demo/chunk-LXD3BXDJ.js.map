{
  "version": 3,
  "sources": ["src/app/shared/view/ui/form/radio.component.ts", "src/app/features/settings/view/localisation/localisation-settings.component.ts", "src/app/features/settings/view/backup/backup-settings.component.ts", "src/app/shared/view/ui/form/file-input.component.ts", "src/app/features/settings/view/finance-settings/invoices-settings/invoices-settings.component.ts", "src/app/features/settings/view/finance-settings/credentials/create-credential.component.ts", "src/app/features/settings/view/finance-settings/credentials/credential-settings.component.ts", "src/app/features/settings/view/settings.component.ts", "src/app/features/settings/view/settings.component.html"],
  "sourcesContent": ["import {Component, forwardRef, HostListener, input, output, ViewEncapsulation} from '@angular/core';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgClass} from '@angular/common';\n\n@Component({\n  selector: 'lg-radio',\n  standalone: true,\n  template: `\n      <label [attr.for]=\"name()+'-'+value()\"\n             [ngClass]=\"size()\"\n             class=\"lg-radio\"\n             tabindex=\"0\">\n          <input (ngModelChange)=\"onChangeCheckbox($event)\"\n                 [attr.id]=\"name()+'-'+value()\"\n                 [attr.name]=\"name()\"\n                 [attr.value]=\"radio() ? value() : modelValue\"\n                 [checked]=\"modelValue\"\n                 [ngModel]=\"modelValue\"\n                 [type]=\"radio() ? 'radio' : 'checkbox'\"\n                 class=\"checkbox\">\n          <span [class.lg-radio__hoverOnly]=\"markOnHover()\"\n                class=\"lg-radio__mark\">\n              <span class=\"lg-radio__mark-inner\">\n                  @if (!noMark()) {\n                      @if (customMark()) {\n                          <span [innerHTML]=\"customMark()\"></span>\n                      } @else {\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n                               viewBox=\"0 0 24 24\">\n                      <path fill=\"currentColor\"\n                            d=\"M9.5 16.5l-4.25-4.25 1.4-1.4L9.5 13.7l7.35-7.35 1.4 1.4z\"/>\n                  </svg>\n                      }\n                  }\n              </span>\n          </span>\n\n          <ng-content></ng-content>\n      </label>\n  `,\n  styles: [\n    `\n      .lg-radio {\n        display: flex;\n        border-radius: 12px;\n        gap: 8px;\n      }\n\n      .lg-radio:focus-within {\n        outline-color: var(--active-color);\n      }\n\n      .lg-radio__mark {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 51px;\n        height: 51px;\n        border-radius: 12px;\n        background-color: var(--control-bg);\n        opacity: 0.2;\n        cursor: pointer;\n        transition: all 0.2s ease-in-out;\n        border: 1px solid transparent;\n      }\n\n      .lg-radio__hoverOnly {\n        background-color: transparent;\n        border-color: var(--text-color);\n      }\n\n      .lg-radio__hoverOnly .lg-radio__mark-inner {\n        opacity: 0;\n        transition: all 0.2s ease-in-out;\n      }\n\n      @media (hover: hover) {\n        .lg-radio__mark:hover {\n          opacity: 1;\n        }\n\n        .lg-radio__hoverOnly:hover .lg-radio__mark-inner {\n          opacity: 1;\n        }\n      }\n\n      .checkbox {\n        display: none;\n      }\n\n      .checkbox:checked + .lg-radio__mark {\n        background-color: var(--control-bg-selected);\n        opacity: 1;\n        font-weight: 700;\n      }\n\n      .checkbox:checked + .lg-radio__hoverOnly {\n\n        border-color: var(--control-bg-selected);\n      }\n\n      .checkbox:checked + .lg-radio__hoverOnly .lg-radio__mark-inner {\n        opacity: 1;\n\n      }\n\n      .lg-radio.small .lg-radio__mark {\n        width: 16px;\n        height: 16px;\n        border-radius: 6px;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RadioComponent),\n      multi: true,\n    }\n  ],\n  imports: [\n    FormsModule,\n    NgClass\n]\n})\nexport class RadioComponent\n  implements ControlValueAccessor {\n  constructor() {\n  }\n\n  modelValue: boolean | string = false;\n  customMark = input<string>('');\n  name = input<string>('');\n  value = input<string>('');\n  // value = input<string>('');\n  size = input<\n    'small' | 'default' | 'large'\n  >('default');\n  markOnHover = input<boolean>(false);\n  radio = input<boolean>(false);\n  noMark = input<boolean>(false);\n  onCheckboxChanged = output<boolean | string>();\n\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  onKeydown(event: KeyboardEvent) {\n    event.preventDefault();\n    this.onChangeCheckbox(!this.modelValue);\n  }\n\n  onChange: (value: boolean | string) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  writeValue(value: boolean): void {\n    this._change(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeCheckbox(\n    value: boolean\n  ) {\n    this._change(value);\n  }\n\n\n  private _change(value: boolean | string) {\n    if (typeof value === 'boolean') {\n      this.modelValue = value;\n    } else {\n      this.modelValue = ['true', 'false'].includes(value) ? value === 'true' : value;\n    }\n    this.onChange(this.modelValue);\n    this.onCheckboxChanged.emit(this.modelValue);\n  }\n}\n", "import {Component, computed, model, Signal} from '@angular/core';\nimport {SettingsService} from '../../service/services/settings.service';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {GapColumnComponent} from '../../../../shared/view/ui/layout/gap-column.component';\nimport {GapRowComponent} from '../../../../shared/view/ui/layout/gap-row.component';\nimport {FormsModule} from '@angular/forms';\nimport {RadioComponent} from '../../../../shared/view/ui/form/radio.component';\nimport {InputComponent} from '../../../../shared/view/ui/form/input.component';\nimport {TitleComponent} from '../../../../shared/view/ui/layout/title/title.component';\n\n\n@Component({\n  selector: 'lg-language-settings',\n  standalone: true,\n  template: `\n      <lg-gap-column size=\"medium\">\n          <lg-title [level]=\"6\">{{ 'language.settings.language-title'|translate }}</lg-title>\n\n          <section class=\"language-settings\">\n              <lg-gap-column [size]=\"'medium'\">\n\n                  <lg-gap-column [size]=\"'small'\">\n                      @for (lang of languages();track lang.code;let i = $index) {\n                          <lg-gap-row [center]=\"true\" [mobileMode]=\"true\" [size]=\"'small'\">\n                              <lg-radio [markOnHover]=\"true\"\n                                        [radio]=\"true\"\n                                        [name]=\"'lang'\"\n                                        [value]=\"lang.code\"\n                                        [ngModel]=\"selectedLangModel()[i]\"\n                                        (change)=\"changeLang(lang.code)\"\n                                        [size]=\"'small'\"\n                                        [noMark]=\"true\">\n                                  {{ lang.name }}\n                              </lg-radio>\n                          </lg-gap-row>\n                      }\n                  </lg-gap-column>\n              </lg-gap-column>\n          </section>\n\n          <lg-title [level]=\"6\">\n              {{ 'language.settings.currency-title'|translate }}\n              (<a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\">ISO 4217</a>)\n          </lg-title>\n\n          <lg-input (ngModelChange)=\"changeCurrency($event)\"\n                    [(ngModel)]=\"currency\"></lg-input>\n      </lg-gap-column>\n  `,\n  styles: [``],\n  imports: [\n    GapRowComponent,\n    GapColumnComponent,\n    FormsModule,\n    RadioComponent,\n    InputComponent,\n    TitleComponent,\n    TranslatePipe,\n    GapColumnComponent\n  ]\n})\nexport class LocalisationSettingsComponent {\n  constructor(\n    private _settingsService: SettingsService,\n  ) {\n    this.selectedLang = this._settingsService.lang;\n\n    this.selectedLangModel.update(oldValue => {\n      return this._settingsService.languages.map((value => this.selectedLang() === value));\n    });\n\n    this.currency.set(this._settingsService.settingsSignal()?.getSetting<string>('currency')?.data || 'USD');\n  }\n\n  currency = model('EUR');\n  langsMap: Record<string, string> = {\n    'en': 'English',\n    'pt': 'Português',\n    'ru': 'Русский',\n  };\n  selectedLang: Signal<string>;\n  selectedLangModel = model<boolean[]>([]);\n  languages = computed(() => {\n    return this._settingsService.languages\n      .map((lang: string) => ({\n        code: lang,\n        name: this.langsMap[lang] || lang,\n      }));\n  });\n\n  changeLang(lang: string): void {\n    this._settingsService.changeLang(lang);\n  }\n\n  changeCurrency(currency: string): void {\n    this._settingsService.changeCurrency(String(currency).toUpperCase());\n  }\n}\n", "import {Component, inject} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {GapRowComponent} from '../../../../shared/view/ui/layout/gap-row.component';\nimport {GapColumnComponent} from '../../../../shared/view/ui/layout/gap-column.component';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {UploadComponent} from '../../../../shared/view/ui/form/upload.component';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {injectQueryParams} from '../../../../shared/helpers';\nimport {NotificationsService, TransferDataService} from '../../../../shared/service/services';\n\n@Component({\n  selector: 'lg-backup-settings',\n  standalone: true,\n  template: `\n      <lg-gap-column>\n          <lg-gap-row [center]=\"true\" [mobileMode]=\"true\">\n              <lg-button (click)=\"onBackup()\"\n                         [style]=\"'success'\">\n                  {{ 'backup.make-btn'|translate }}\n              </lg-button>\n\n              @if (transferDataService.currenBackupDate) {\n                  {{ 'backup.last-label'|translate }} {{ transferDataService.currenBackupDate | timeAgo }}\n              }\n          </lg-gap-row>\n\n\n          <lg-upload (filesSelected)=\"onRestore($event)\" [accept]=\"'.json'\">\n              <lg-card style=\"--card-bg:#e78888\">\n                  <lg-gap-column [position]=\"'center'\">\n                      <div class=\"text-center text-inverse\">\n                          {{ 'backup.restore-informer'|translate }}\n                      </div>\n\n                      <lg-button [style]=\"'danger'\">\n                          {{ 'backup.restore-btn'|translate }}\n                      </lg-button>\n                  </lg-gap-column>\n              </lg-card>\n          </lg-upload>\n      </lg-gap-column>\n  `,\n  styles: [``],\n  imports: [\n    CardComponent,\n    GapRowComponent,\n    GapColumnComponent,\n    FormsModule,\n    TimeAgoPipe,\n    ButtonComponent,\n    UploadComponent,\n    TranslatePipe\n  ]\n})\nexport class BackupSettingsComponent {\n  constructor() {\n  }\n\n  downloadBackupParam = injectQueryParams('download_backup');\n  transferDataService = inject(TransferDataService);\n  notificationsService = inject(NotificationsService);\n\n  ngAfterViewInit() {\n    if (this.downloadBackupParam()) {\n      this.onBackup();\n    }\n  }\n\n  async onBackup() {\n    const loader = this.notificationsService.loading('Creating backup');\n    try {\n      await this.transferDataService.exportAll('json');\n      this.notificationsService.success('Backup created successfully');\n      localStorage.setItem('lastBackupDate', Date.now().toString());\n    } catch (e) {\n      this.notificationsService.showJsonErrors([JSON.stringify(e)], 'Backup failed');\n      console.error(e);\n    } finally {\n      loader.close();\n    }\n  }\n\n  async onRestore(event: File[]) {\n    const loader = this.notificationsService.loading('Restoring backup');\n    try {\n      await this.transferDataService.restoreAllData(event);\n      this.notificationsService.success('Restore completed successfully');\n    } catch (e) {\n      this.notificationsService.showJsonErrors([JSON.stringify(e)], 'Restore failed');\n      console.error(e);\n    } finally {\n      loader.close();\n    }\n  }\n}\n", "import {Component, ElementRef, forwardRef, input, signal, ViewChild} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {ButtonComponent, ButtonStyle} from '../layout/button.component';\n\n@Component({\n  selector: 'lg-file-input',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `\n      <div [class.contrast]=\"theme() === 'contrast'\" class=\"lg-file-input\">\n          <input #fileInput\n                 (change)=\"onFileChange($event)\"\n                 [attr.accept]=\"accept()\"\n                 [attr.multiple]=\"multiple() ? '' : null\"\n                 [disabled]=\"disable()\"\n                 class=\"hidden-input\"\n                 type=\"file\">\n\n          <lg-button (onClick)=\"fileInput.click()\"\n                     [disabled]=\"disable()\"\n                     [style]=\"buttonStyle()\"\n                     size=\"small\">\n              {{ buttonText() }}\n          </lg-button>\n\n          <div [style.display]=\"noAfter() && !errorMessage() ? 'none' : 'flex'\" class=\"lg-file-input__after\">\n              <ng-content select=\"after\"></ng-content>\n              <span *ngIf=\"errorMessage()\" class=\"error-message\">{{ errorMessage() }}</span>\n          </div>\n      </div>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex: 1;\n    }\n\n    .lg-file-input {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 16px;\n      flex: 1;\n    }\n\n    .lg-file-input__after {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n      padding: 0 16px;\n      white-space: nowrap;\n      flex: 0 0 auto;\n    }\n\n    .hidden-input {\n      display: none;\n    }\n\n    .error-message {\n      color: #d32f2f;\n      font-size: 13px;\n      white-space: nowrap;\n    }\n  `],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FileInputComponent),\n    multi: true\n  }]\n})\nexport class FileInputComponent implements ControlValueAccessor {\n  @ViewChild('fileInput', {static: true}) fileInput!: ElementRef<HTMLInputElement>;\n\n  accept = input<string>(''); // image/*, .pdf и т.п.\n  multiple = input<boolean>(false);\n  disable = input<boolean>(false);\n  theme = input<'default' | 'contrast'>('default');\n  base64Mode = input<boolean>(false);\n  buttonStyle = input<ButtonStyle>('default'); // стиль lg-button\n  buttonText = input<string>('Загрузить файл'); // текст на кнопке\n  fileSizeLimitMb = input<number>(2); // Лимит по умолчанию: 2MB\n  noAfter = signal(false);\n  errorMessage = signal<string | null>(null);\n\n  writeValue(value: any): void {\n    // Ничего не делаем\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  async onFileChange(event: Event) {\n    const inputEl = event.target as HTMLInputElement;\n    const files = inputEl.files;\n    if (!files || files.length === 0) {\n      this.onChange(null);\n      return;\n    }\n\n    const overLimitFiles = Array.from(files).filter(file => file.size > this.fileSizeLimitMb() * 1024 * 1024);\n    if (overLimitFiles.length > 0) {\n      this.errorMessage.set(`Файл превышает ${this.fileSizeLimitMb()}MB`);\n      this.onChange(null);\n      return;\n    } else {\n      this.errorMessage.set(null); // очищаем сообщение, если всё ок\n    }\n\n    let result: any;\n\n    if (this.base64Mode()) {\n      const base64List = await Promise.all(\n        Array.from(files).map(file => this.readFileAsBase64(file))\n      );\n      result = this.multiple() ? base64List : base64List[0];\n    } else {\n      result = this.multiple() ? Array.from(files) : files[0];\n    }\n\n    this.onChange(result);\n    this.onTouched();\n  }\n\n  ngAfterViewInit() {\n    const after = this.fileInput?.nativeElement.nextElementSibling?.nextElementSibling;\n    if (after?.childElementCount === 0) {\n      this.noAfter.set(true);\n    }\n  }\n\n  focus() {\n    this.fileInput?.nativeElement.focus();\n  }\n\n  private onChange: (value: string | File | string[] | File[] | null) => void = () => {\n  };\n\n  private onTouched: () => void = () => {\n  };\n\n  private readFileAsBase64(file: File): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = () => reject(reader.error);\n      reader.readAsDataURL(file);\n    });\n  }\n}\n", "import {AfterViewInit, Component, DestroyRef, inject, signal} from '@angular/core';\nimport {GapColumnComponent} from '../../../../../shared/view/ui/layout/gap-column.component';\nimport {InputComponent} from '../../../../../shared/view/ui/form/input.component';\nimport {TitleComponent} from '../../../../../shared/view/ui/layout/title/title.component';\n\nimport {FormControl, FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {GapRowComponent} from '../../../../../shared/view/ui/layout/gap-row.component';\nimport {SettingsService} from '../../../service/services/settings.service';\n\nimport {NumberInputComponent} from '../../../../../shared/view/ui/form/number-input.component';\nimport {FileInputComponent} from '../../../../../shared/view/ui/form/file-input.component';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {debounceTime} from 'rxjs';\n\n@Component({\n  selector: 'lg-invoices-settings',\n  standalone: true,\n  template: `\n      <lg-gap-column [formGroup]=\"form\">\n          <lg-gap-column size=\"medium\">\n              <lg-title [level]=\"5\">\n                  Logo\n              </lg-title>\n\n              @if (logoBase64()) {\n                  <div class=\"lg-invoices-settings__logo\">\n                      <img [src]=\"logoBase64()\"\n                           alt=\"Logo\">\n                  </div>\n              }\n\n              <lg-file-input [buttonStyle]=\"logoBase64() ? 'danger' : 'default'\"\n                             [buttonText]=\"logoBase64() ? 'Replace with new one' : 'Upload logo'\"\n                             formControlName=\"logo\"></lg-file-input>\n          </lg-gap-column>\n\n          <lg-gap-column size=\"medium\">\n              <lg-title [level]=\"5\">\n                  Prefix for invoices\n              </lg-title>\n\n              <lg-input formControlName=\"prefix\"></lg-input>\n          </lg-gap-column>\n\n          <lg-gap-column size=\"medium\">\n              <lg-title [level]=\"5\">\n                  Precision\n              </lg-title>\n\n              <lg-gap-row>\n                  <lg-gap-column size=\"small\">\n                      <lg-title [flat]=\"true\" [level]=\"6\">\n                          For rows\n                      </lg-title>\n                      <lg-number-input formControlName=\"precisionRows\"></lg-number-input>\n                  </lg-gap-column>\n\n                  <lg-gap-column size=\"small\">\n                      <lg-title [flat]=\"true\" [level]=\"6\">\n                          For totals\n                      </lg-title>\n                      <lg-number-input formControlName=\"precisionTotals\"></lg-number-input>\n                  </lg-gap-column>\n              </lg-gap-row>\n          </lg-gap-column>\n      </lg-gap-column>\n  `,\n  styles: [`\n    .lg-invoices-settings__logo {\n      width: 100%;\n      max-width: 200px;\n      height: auto;\n      border-radius: 12px;\n      object-fit: cover;\n      background-color: var(--control-bg);\n      padding: 15px;\n\n      img {\n        width: 100%;\n        height: auto;\n      }\n    }\n  `],\n  imports: [\n    GapColumnComponent,\n    InputComponent,\n    TitleComponent,\n    ReactiveFormsModule,\n    GapRowComponent,\n    NumberInputComponent,\n    FileInputComponent\n  ]\n})\nexport class InvoicesSettingsComponent\n  implements AfterViewInit {\n  constructor(\n    private _settingsService: SettingsService,\n  ) {\n  }\n\n  prefix?: string;\n\n  form = new FormGroup({\n    prefix: new FormControl<string | null>(null),\n    precisionRows: new FormControl<number | null>(null),\n    precisionTotals: new FormControl<number | null>(null),\n    logo: new FormControl<File | null>(null)\n  })\n  logoBase64 = signal<string | null>(null);\n  destroyRef = inject(DestroyRef);\n\n  ngAfterViewInit() {\n    const precisions = this._settingsService.getInvoicePrecision();\n    this.form.patchValue({\n      prefix: this._settingsService.getInvoicePrefix(),\n      precisionRows: precisions[0] ?? 2,\n      precisionTotals: precisions[1] ?? 2,\n    });\n\n    this.logoBase64.set(this._settingsService.getInvoiceLogo() ?? null);\n\n    this.form.valueChanges.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      debounceTime(500),\n    ).subscribe(async value => {\n      if (value.logo) {\n        this.logoBase64.set(await this.resizeAndCropImageToBase64(value.logo));\n      }\n\n      this._settingsService.setInvoiceLogo(this.logoBase64());\n      this._settingsService.setInvoicePrefix(value.prefix ?? '');\n      this._settingsService.setInvoicePrecisions(\n        value.precisionRows ?? 2, value.precisionTotals ?? 2\n      );\n      await this._settingsService.saveSettings();\n    });\n  }\n\n  resizeAndCropImageToBase64(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d')!;\n          canvas.width = 200;\n          canvas.height = 200;\n\n          const imgWidth = img.width;\n          const imgHeight = img.height;\n\n          const x = (canvas.width - imgWidth) / 2;\n          const y = (canvas.height - imgHeight) / 2;\n\n          ctx.drawImage(img, x, y);\n          const base64 = canvas.toDataURL('image/png');\n          document.body.appendChild(canvas)\n          resolve(base64);\n        };\n        img.onerror = reject;\n        img.src = reader.result as string;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  }\n}\n", "import {Component, effect, input, signal} from '@angular/core';\nimport {GapColumnComponent} from '../../../../../shared/view/ui/layout/gap-column.component';\n\nimport {FormArray, FormControl, FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {GapRowComponent} from '../../../../../shared/view/ui/layout/gap-row.component';\n\nimport {InputComponent} from '../../../../../shared/view/ui/form/input.component';\n\n\n\nimport {ButtonComponent} from '../../../../../shared/view/ui/layout/button.component';\nimport {SelfCenterDirective} from '../../../../../shared/view/directives/self-center.directive';\nimport {ShrinkDirective} from '../../../../../shared/view/directives/shrink.directive';\n\nimport {MatIcon} from '@angular/material/icon';\n\n\nimport {NotificationsService} from '../../../../../shared/service/services';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {errorHandler} from '../../../../../shared/helpers';\nimport {ExpandDirective} from '../../../../../shared/view/directives/expand.directive';\nimport {CredentialsRepository} from '../../../service/repositories/credentials.repository';\nimport {Credential} from '../../../service/models/Credential';\nimport {CredentialsType} from '../../../service/types/credentials.types';\n\n@Component({\n  selector: 'lg-create-credential',\n  standalone: true,\n  template: `\n      <lg-gap-column>\n          <ng-container [formGroup]=\"form\">\n              <ng-container formArrayName=\"rows\">\n                  @for (row of credentials();track (row.name + row.uuid);let i = $index, odd = $odd,last=$last) {\n                      @let tacControl = form.controls.rows.controls[i];\n                      <section class=\"credentials\" [formGroupName]=\"i\">\n                          <div class=\"credentials__row\"\n                               [class.credentials__row--odd]=\"odd\">\n                              <lg-gap-column size=\"small\">\n                                  <lg-input formControlName=\"privateName\"\n                                            [placeholder]=\"'Private Name'\"></lg-input>\n\n                                  <lg-gap-row [top]=\"true\" [fit]=\"true\">\n\n                                      <lg-gap-column size=\"small\">\n                                          <lg-input formControlName=\"taxId\"\n                                                    [placeholder]=\"'Tax ID'\"></lg-input>\n\n                                          <lg-input formControlName=\"name\"\n                                                    [placeholder]=\"'Name'\"></lg-input>\n\n                                      </lg-gap-column>\n\n                                      <lg-gap-column size=\"small\">\n                                          <lg-input formControlName=\"country\"\n                                                    [placeholder]=\"'Country'\"></lg-input>\n\n                                          <lg-input formControlName=\"address\"\n                                                    [placeholder]=\"'Address'\"></lg-input>\n                                      </lg-gap-column>\n\n                                      <lg-gap-column size=\"small\">\n                                          <lg-input formControlName=\"phone\"\n                                                    [placeholder]=\"'Phone'\"></lg-input>\n\n                                          <lg-input formControlName=\"email\"\n                                                    [placeholder]=\"'Email'\"></lg-input>\n                                      </lg-gap-column>\n\n                                      <lg-button [style]=\"'danger'\"\n                                                 lgShrink\n                                                 [size]=\"'tiny'\"\n                                                 [icon]=\"true\"\n                                                 (click)=\"deleteRow(i)\">\n                                          <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\"\n                                                    fontIcon=\"close\"></mat-icon>\n                                      </lg-button>\n                                  </lg-gap-row>\n                              </lg-gap-column>\n                          </div>\n                      </section>\n\n                      @if (!last) {\n                          <hr color=\"#fafafa\" lgExpand size=\"2\"/>\n                      }\n                  }\n              </ng-container>\n          </ng-container>\n\n          <lg-gap-row>\n              <lg-button (click)=\"save()\"\n                         [disabled]=\"!form.dirty\"\n                         [style]=\"'success'\"\n                         lgSelfCenter\n                         lgShrink>\n                  @if (form.dirty) {\n                      Save changes\n                  } @else {\n                      No changes\n                  }\n              </lg-button>\n\n              <lg-button (click)=\"addRow()\"\n                         [style]=\"'warning'\"\n                         lgSelfCenter\n                         lgShrink>\n                  Add row\n              </lg-button>\n          </lg-gap-row>\n      </lg-gap-column>\n  `,\n  styles: [``],\n  imports: [\n    GapRowComponent,\n    FormsModule,\n    ButtonComponent,\n    InputComponent,\n    MatIcon,\n    ReactiveFormsModule,\n    SelfCenterDirective,\n    ShrinkDirective,\n    GapColumnComponent,\n    GapColumnComponent,\n    ReactiveFormsModule,\n    GapRowComponent,\n    InputComponent,\n    ButtonComponent,\n    MatIcon,\n    SelfCenterDirective,\n    ShrinkDirective,\n    ExpandDirective\n  ]\n})\nexport class CreateCredentialComponent {\n  constructor(\n    private _credentialsRepository: CredentialsRepository,\n    private _notificationService: NotificationsService,\n  ) {\n  }\n\n  type = input(CredentialsType.system);\n  credentials = signal<Credential[]>([]);\n  form = new FormGroup({\n    rows: new FormArray([\n      this._getRowGroup(),\n    ]),\n  });\n  rowsEffect = effect(() => {\n    this._rowsFormArray.clear();\n    this.credentials().forEach((row, index) => {\n      this._rowsFormArray.push(this._getRowGroup(row));\n    });\n    this.form.updateValueAndValidity();\n    this.form.markAsPristine();\n  });\n  typeEffect = effect(() => {\n    this._credentialsRepository.getAllByType(this.type())\n      .then((credentials) => {\n        this.credentials.set(credentials);\n      });\n  });\n\n\n  formValues = this.form.valueChanges.pipe(\n    takeUntilDestroyed(),\n  );\n\n  private get _rowsFormArray(): FormArray {\n    return this.form.get('rows') as FormArray;\n  }\n\n  deleteRow(index: number) {\n    const credential = this.form.value.rows?.[index]?.uuid;\n    this._rowsFormArray.removeAt(index);\n    this.credentials.update(current => {\n      return current.filter((_, i) => i !== index);\n    });\n    this.form.markAsDirty();\n    if (credential) {\n      this._credentialsRepository.deleteOne(credential);\n    }\n  }\n\n  addRow() {\n    this._rowsFormArray.push(this._getRowGroup());\n    const newCredential = new Credential({\n      type: this.type()\n    });\n    this.credentials.update(current => [...current, newCredential]);\n    this.form.markAsDirty();\n  }\n\n  async save() {\n    try {\n      await this._credentialsRepository\n        .updateMany(this._formValueToCredentials());\n      this._notificationService.success('Credentials saved successfully');\n      this.form.markAsPristine();\n    } catch (e) {\n      this._notificationService.error(errorHandler(e));\n    }\n  }\n\n  private _formValueToCredentials(): Credential[] {\n    return this._rowsFormArray.controls.map((control) => {\n      const value = control.value;\n      return new Credential({\n        name: value.name,\n        privateName: value.privateName,\n        country: value.country,\n        address: value.address,\n        taxId: value.taxId,\n        phone: value.phone,\n        email: value.email,\n        type: this.type(),\n        uuid: value.uuid,\n      });\n    });\n  }\n\n  private _getRowGroup(\n    value?: Credential,\n  ): FormGroup {\n    return new FormGroup({\n      name: new FormControl(value?.name || ''),\n      privateName: new FormControl(value?.privateName || ''),\n      country: new FormControl(value?.country || ''),\n      address: new FormControl(value?.address || ''),\n      taxId: new FormControl(value?.taxId || ''),\n      phone: new FormControl(value?.phone || ''),\n      email: new FormControl(value?.email || ''),\n      uuid: new FormControl(value?.uuid || ''),\n    });\n  }\n}\n", "import {Component} from '@angular/core';\nimport {NotificationsService} from '../../../../../shared/service/services';\nimport {CredentialsRepository} from '../../../service/repositories/credentials.repository';\nimport {CredentialsType} from '../../../service/types/credentials.types';\nimport {TabsComponent} from '../../../../../shared/view/ui/tabs/tabs.component';\nimport {CreateCredentialComponent} from './create-credential.component';\nimport {TabDirective} from '../../../../../shared/view/ui/tabs/tab.directive';\n\n@Component({\n  selector: 'lg-credentials-settings',\n  standalone: true,\n  template: `\n      <lg-tabs [flat]=\"true\" [silent]=\"true\">\n          <ng-template alias=\"system\" label=\"System\" lgTab>\n              <lg-create-credential [type]=\"CredentialsType.system\"></lg-create-credential>\n          </ng-template>\n\n          <ng-template alias=\"customers\" label=\"Customer\" lgTab>\n              <lg-create-credential [type]=\"CredentialsType.customer\"></lg-create-credential>\n          </ng-template>\n      </lg-tabs>\n\n  `,\n  styles: [``],\n  imports: [\n    TabsComponent,\n    CreateCredentialComponent,\n    TabDirective\n  ]\n})\nexport class CredentialSettingsComponent {\n  constructor(\n    private _credentialsRepository: CredentialsRepository,\n    private _notificationService: NotificationsService,\n  ) {\n  }\n\n  protected readonly CredentialsType = CredentialsType;\n}\n", "import {Component} from '@angular/core';\nimport {ContainerComponent} from '../../../shared/view/ui/layout/container/container.component';\nimport {GapRowComponent} from '../../../shared/view/ui/layout/gap-row.component';\nimport {TitleComponent} from '../../../shared/view/ui/layout/title/title.component';\nimport {RouterLink, RouterLinkActive} from '@angular/router';\nimport {FadeInComponent} from '../../../shared/view/ui/fade-in.component';\nimport {ExpandDirective} from '../../../shared/view/directives/expand.directive';\nimport {LocalisationSettingsComponent} from './localisation/localisation-settings.component';\nimport {BackupSettingsComponent} from './backup/backup-settings.component';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {TabDirective} from '../../../shared/view/ui/tabs/tab.directive';\nimport {TabsComponent} from '../../../shared/view/ui/tabs/tabs.component';\n\nimport {SettingsService} from '../service/services/settings.service';\nimport {InvoicesSettingsComponent} from \"./finance-settings/invoices-settings/invoices-settings.component\";\nimport {CredentialSettingsComponent} from './finance-settings/credentials/credential-settings.component';\nimport {TaxesSettingsComponent} from './finance-settings/taxes/taxes-settings.component';\n\n\n@Component({\n  selector: 'lg-settings',\n  standalone: true,\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n  imports: [\n    ContainerComponent,\n    GapRowComponent,\n    TitleComponent,\n    RouterLink,\n    RouterLinkActive,\n    FadeInComponent,\n    ExpandDirective,\n    LocalisationSettingsComponent,\n    BackupSettingsComponent,\n    TranslatePipe,\n    TabDirective,\n    TabsComponent,\n    InvoicesSettingsComponent,\n    CredentialSettingsComponent,\n    TaxesSettingsComponent\n  ]\n})\nexport class SettingsComponent {\n  constructor(\n    public settingsService: SettingsService,\n  ) {\n  }\n}\n", "<lg-fade-in>\n  <lg-container>\n    <lg-title>{{ 'settings.title'|translate }}</lg-title>\n\n    <lg-tabs>\n      <ng-template alias=\"language\" label=\"{{ 'language.settings-title'|translate }}\" lgTab>\n        <lg-language-settings></lg-language-settings>\n      </ng-template>\n\n      <ng-template alias=\"categoires\" label=\"{{ 'categories.settings-title'|translate }}\" lgTab>\n        <lg-gap-row [mobileMode]=\"true\" [top]=\"true\">\n          <a lgExpand routerLink=\"/settings/categories/products\" routerLinkActive=\"active\">\n            {{ 'categories.products.link-label'|translate }}\n          </a>\n\n          <a lgExpand routerLink=\"/settings/categories/recipes\" routerLinkActive=\"active\">\n            {{ 'categories.recipes.link-label'|translate }}\n          </a>\n        </lg-gap-row>\n      </ng-template>\n\n      <ng-template alias=\"invoice\" label=\"Invoice settings\" lgTab>\n        <lg-invoices-settings></lg-invoices-settings>\n      </ng-template>\n\n      <ng-template alias=\"credentials\" label=\"Credentials\" lgTab>\n        <lg-credentials-settings></lg-credentials-settings>\n      </ng-template>\n\n      <ng-template alias=\"taxes\" label=\"Taxes\" lgTab>\n        <lg-taxes-settings></lg-taxes-settings>\n      </ng-template>\n\n      <ng-template alias=\"backup\" label=\"{{ 'backup.settings-title'|translate }}\" lgTab>\n        <lg-backup-settings></lg-backup-settings>\n      </ng-template>\n    </lg-tabs>\n  </lg-container>\n</lg-fade-in>\n\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyB0B,IAAA,oBAAA,GAAA,QAAA,CAAA;;;;AAAM,IAAA,qBAAA,aAAA,OAAA,WAAA,GAAA,wBAAA;;;;;;AAEN,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEJ,IAAA,oBAAA,GAAA,QAAA,CAAA;AAEJ,IAAA,uBAAA;;;;;AAPI,IAAA,8BAAA,GAAA,qDAAA,GAAA,GAAA,QAAA,CAAA,EAAoB,GAAA,qDAAA,GAAA,GAAA,YAAA,CAAA;;;;AAApB,IAAA,wBAAA,OAAA,WAAA,IAAA,IAAA,CAAA;;;AAsGhB,IAAO,iBAAP,MAAO,gBAAc;EAEzB,cAAA;EACA;EAEA,aAA+B;EAC/B,aAAa,MAAc,EAAE;EAC7B,OAAO,MAAc,EAAE;EACvB,QAAQ,MAAc,EAAE;;EAExB,OAAO,MAEL,SAAS;EACX,cAAc,MAAe,KAAK;EAClC,QAAQ,MAAe,KAAK;EAC5B,SAAS,MAAe,KAAK;EAC7B,oBAAoB,OAAM;EAI1B,UAAU,OAAoB;AAC5B,UAAM,eAAc;AACpB,SAAK,iBAAiB,CAAC,KAAK,UAAU;EACxC;EAEA,WAA8C,MAAK;EACnD;EAEA,YAAwB,MAAK;EAC7B;EAEA,WAAW,OAAc;AACvB,SAAK,QAAQ,KAAK;EACpB;EAEA,iBAAiB,IAAO;AACtB,SAAK,WAAW;EAClB;EAEA,kBAAkB,IAAO;AACvB,SAAK,YAAY;EACnB;EAEA,iBACE,OAAc;AAEd,SAAK,QAAQ,KAAK;EACpB;EAGQ,QAAQ,OAAuB;AACrC,QAAI,OAAO,UAAU,WAAW;AAC9B,WAAK,aAAa;IACpB,OAAO;AACL,WAAK,aAAa,CAAC,QAAQ,OAAO,EAAE,SAAS,KAAK,IAAI,UAAU,SAAS;IAC3E;AACA,SAAK,SAAS,KAAK,UAAU;AAC7B,SAAK,kBAAkB,KAAK,KAAK,UAAU;EAC7C;;qCA1DW,iBAAc;EAAA;yEAAd,iBAAc,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,cAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAAd,MAAA,qBAAA,iBAAA,SAAA,gDAAA,QAAA;AAAA,eAAA,IAAA,UAAA,MAAA;MACX,CAAA,EADyB,iBAAA,SAAA,gDAAA,QAAA;AAAA,eAAd,IAAA,UAAA,MAAA;MACX,CAAA;;qRAbW;IACT;MACE,SAAS;MACT,aAAa,WAAW,MAAM,eAAc;MAC5C,OAAO;;GAEV,CAAA,GAAA,oBAAA,KAAA,OAAA,GAAA,MAAA,IAAA,QAAA,CAAA,CAAA,YAAA,KAAA,GAAA,YAAA,GAAA,SAAA,GAAA,CAAA,GAAA,YAAA,GAAA,iBAAA,WAAA,WAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,sBAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,SAAA,8BAAA,SAAA,MAAA,UAAA,MAAA,WAAA,WAAA,GAAA,CAAA,QAAA,gBAAA,KAAA,0DAAA,CAAA,GAAA,UAAA,SAAA,wBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AAhHG,MAAA,yBAAA,GAAA,SAAA,CAAA,EAGoB,GAAA,SAAA,CAAA;AACT,MAAA,qBAAA,iBAAA,SAAA,uDAAA,QAAA;AAAA,eAAiB,IAAA,iBAAA,MAAA;MAAwB,CAAA;AAAhD,MAAA,uBAAA;AAQA,MAAA,yBAAA,GAAA,QAAA,CAAA,EAC6B,GAAA,QAAA,CAAA;AAErB,MAAA,8BAAA,GAAA,uCAAA,GAAA,CAAA;AAWJ,MAAA,uBAAA,EAAO;AAGX,MAAA,uBAAA,CAAA;AACJ,MAAA,uBAAA;;;AA7BO,MAAA,qBAAA,WAAA,IAAA,KAAA,CAAA;;AAOI,MAAA,oBAAA;AAAA,MAAA,qBAAA,WAAA,IAAA,UAAA,EAAsB,WAAA,IAAA,UAAA,EACA,QAAA,IAAA,MAAA,IAAA,UAAA,UAAA;;AAGvB,MAAA,oBAAA;AAAA,MAAA,sBAAA,uBAAA,IAAA,YAAA,CAAA;AAGE,MAAA,oBAAA,CAAA;AAAA,MAAA,wBAAA,CAAA,IAAA,OAAA,IAAA,IAAA,EAAA;;oBAmGd,aAAW,sBAAA,iBAAA,SACX,OAAO,GAAA,QAAA,CAAA,67CAAA,GAAA,eAAA,EAAA,CAAA;;;sEAGE,gBAAc,CAAA;UA1H1B;uBACW,YAAU,YACR,MAAI,UACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAgCT,eA0Ec,kBAAkB,MAAI,WAC1B;MACT;QACE,SAAS;QACT,aAAa,WAAW,MAAK,cAAe;QAC5C,OAAO;;OAEV,SACQ;MACP;MACA;OACH,QAAA,CAAA,67CAAA,EAAA,CAAA;kBAsBC,WAAS,CAAA;UAFR;WAAa,iBAAiB,CAAC,QAAQ,CAAC;;UACxC;WAAa,iBAAiB,CAAC,QAAQ,CAAC;;;;6EAnB9B,gBAAc,EAAA,WAAA,kBAAA,UAAA,kDAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;;;ACvGD,IAAA,yBAAA,GAAA,cAAA,CAAA,EAAiE,GAAA,YAAA,CAAA;AAMnD,IAAA,qBAAA,UAAA,SAAA,0EAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,WAAA,QAAA,IAAA,CAAqB;IAAA,CAAA;AAGrC,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA,EAAW;;;;;;AAVH,IAAA,qBAAA,UAAA,IAAA,EAAe,cAAA,IAAA,EAAoB,QAAA,OAAA;AACjC,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,IAAA,EAAoB,SAAA,IAAA,EACN,QAAA,MAAA,EACC,SAAA,QAAA,IAAA,EACI,WAAA,OAAA,kBAAA,EAAA,kBAAA,CAAA,EACe,QAAA,OAAA,EAElB,UAAA,IAAA;AAEtB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,MAAA,GAAA;;;AA6B5B,IAAO,gCAAP,MAAO,+BAA6B;EAE9B;EADV,YACU,kBAAiC;AAAjC,SAAA,mBAAA;AAER,SAAK,eAAe,KAAK,iBAAiB;AAE1C,SAAK,kBAAkB,OAAO,cAAW;AACvC,aAAO,KAAK,iBAAiB,UAAU,IAAK,WAAS,KAAK,aAAY,MAAO,KAAM;IACrF,CAAC;AAED,SAAK,SAAS,IAAI,KAAK,iBAAiB,eAAc,GAAI,WAAmB,UAAU,GAAG,QAAQ,KAAK;EACzG;EAEA,WAAW,MAAM,KAAK;EACtB,WAAmC;IACjC,MAAM;IACN,MAAM;IACN,MAAM;;EAER;EACA,oBAAoB,MAAiB,CAAA,CAAE;EACvC,YAAY,SAAS,MAAK;AACxB,WAAO,KAAK,iBAAiB,UAC1B,IAAI,CAAC,UAAkB;MACtB,MAAM;MACN,MAAM,KAAK,SAAS,IAAI,KAAK;MAC7B;EACN,CAAC;EAED,WAAW,MAAY;AACrB,SAAK,iBAAiB,WAAW,IAAI;EACvC;EAEA,eAAe,UAAgB;AAC7B,SAAK,iBAAiB,eAAe,OAAO,QAAQ,EAAE,YAAW,CAAE;EACrE;;qCAnCW,gCAA6B,4BAAA,eAAA,CAAA;EAAA;yEAA7B,gCAA6B,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,QAAA,EAAA,UAAA,CAAA,GAAA,UAAA,GAAA,mBAAA,CAAA,GAAA,mBAAA,EAAA,GAAA,SAAA,EAAA,UAAA,kBAAA,mBAAA,0BAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,QAAA,QAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,cAAA,MAAA,GAAA,CAAA,QAAA,0CAAA,UAAA,QAAA,GAAA,CAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,GAAA,UAAA,eAAA,SAAA,QAAA,SAAA,WAAA,QAAA,QAAA,CAAA,GAAA,UAAA,SAAA,uCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AA9CpC,MAAA,yBAAA,GAAA,iBAAA,CAAA,EAA6B,GAAA,YAAA,CAAA;AACH,MAAA,iBAAA,CAAA;;AAAkD,MAAA,uBAAA;AAExE,MAAA,yBAAA,GAAA,WAAA,CAAA,EAAmC,GAAA,iBAAA,CAAA,EACE,GAAA,iBAAA,CAAA;AAGzB,MAAA,2BAAA,GAAA,8CAAA,GAAA,IAAA,cAAA,GAAA,UAAA;AAcJ,MAAA,uBAAA,EAAgB,EACJ;AAGpB,MAAA,yBAAA,GAAA,YAAA,CAAA;AACI,MAAA,iBAAA,EAAA;;AACC,MAAA,yBAAA,IAAA,KAAA,CAAA;AAAiE,MAAA,iBAAA,IAAA,UAAA;AAAQ,MAAA,uBAAA;AAAI,MAAA,iBAAA,IAAA,IAAA;AAClF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,YAAA,CAAA;AAAU,MAAA,qBAAA,iBAAA,SAAA,0EAAA,QAAA;AAAA,eAAiB,IAAA,eAAA,MAAA;MAAsB,CAAA;AACvC,MAAA,2BAAA,iBAAA,SAAA,0EAAA,QAAA;AAAA,QAAA,6BAAA,IAAA,UAAA,MAAA,MAAA,IAAA,WAAA;AAAA,eAAA;MAAA,CAAA;AAAuB,MAAA,uBAAA,EAAW;;;AA9BlC,MAAA,oBAAA;AAAA,MAAA,qBAAA,SAAA,CAAA;AAAY,MAAA,oBAAA;AAAA,MAAA,4BAAA,sBAAA,GAAA,GAAA,kCAAA,CAAA;AAGH,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,QAAA;AAEI,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,OAAA;AACX,MAAA,oBAAA;AAAA,MAAA,qBAAA,IAAA,UAAA,CAAW;AAkBb,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,CAAA;AACN,MAAA,oBAAA;AAAA,MAAA,6BAAA,KAAA,sBAAA,IAAA,GAAA,kCAAA,GAAA,IAAA;AAKM,MAAA,oBAAA,CAAA;AAAA,MAAA,2BAAA,WAAA,IAAA,QAAA;;;IAKhB;IACA;IACA;IAAW;IAAA;IACX;IACA;IACA;IACA;EAAa,GAAA,eAAA,EAAA,CAAA;;;sEAIJ,+BAA6B,CAAA;UAlDzC;uBACW,wBAAsB,YACpB,MAAI,UACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAkCT,SAEQ;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACD,CAAA;;;;6EAEU,+BAA6B,EAAA,WAAA,iCAAA,UAAA,kFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;ACrCxB,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,mBAAA,GAAA,KAAA,sBAAA,GAAA,GAAA,OAAA,oBAAA,gBAAA,GAAA,GAAA;;;AAgCZ,IAAO,0BAAP,MAAO,yBAAuB;EAClC,cAAA;EACA;EAEA,sBAAsB,kBAAkB,iBAAiB;EACzD,sBAAsB,OAAO,mBAAmB;EAChD,uBAAuB,OAAO,oBAAoB;EAElD,kBAAe;AACb,QAAI,KAAK,oBAAmB,GAAI;AAC9B,WAAK,SAAQ;IACf;EACF;EAEA,MAAM,WAAQ;AACZ,UAAM,SAAS,KAAK,qBAAqB,QAAQ,iBAAiB;AAClE,QAAI;AACF,YAAM,KAAK,oBAAoB,UAAU,MAAM;AAC/C,WAAK,qBAAqB,QAAQ,6BAA6B;AAC/D,mBAAa,QAAQ,kBAAkB,KAAK,IAAG,EAAG,SAAQ,CAAE;IAC9D,SAAS,GAAG;AACV,WAAK,qBAAqB,eAAe,CAAC,KAAK,UAAU,CAAC,CAAC,GAAG,eAAe;AAC7E,cAAQ,MAAM,CAAC;IACjB;AACE,aAAO,MAAK;IACd;EACF;EAEA,MAAM,UAAU,OAAa;AAC3B,UAAM,SAAS,KAAK,qBAAqB,QAAQ,kBAAkB;AACnE,QAAI;AACF,YAAM,KAAK,oBAAoB,eAAe,KAAK;AACnD,WAAK,qBAAqB,QAAQ,gCAAgC;IACpE,SAAS,GAAG;AACV,WAAK,qBAAqB,eAAe,CAAC,KAAK,UAAU,CAAC,CAAC,GAAG,gBAAgB;AAC9E,cAAQ,MAAM,CAAC;IACjB;AACE,aAAO,MAAK;IACd;EACF;;qCAvCW,0BAAuB;EAAA;yEAAvB,0BAAuB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,UAAA,YAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,iBAAA,QAAA,GAAA,CAAA,GAAA,aAAA,SAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,eAAA,cAAA,CAAA,GAAA,UAAA,SAAA,iCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAxC9B,MAAA,yBAAA,GAAA,eAAA,EAAe,GAAA,cAAA,CAAA,EACqC,GAAA,aAAA,CAAA;AACjC,MAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,eAAS,IAAA,SAAA;MAAU,CAAA;AAE1B,MAAA,iBAAA,CAAA;;AACJ,MAAA,uBAAA;AAEA,MAAA,8BAAA,GAAA,gDAAA,GAAA,CAAA;AAGJ,MAAA,uBAAA;AAGA,MAAA,yBAAA,GAAA,aAAA,CAAA;AAAW,MAAA,qBAAA,iBAAA,SAAA,oEAAA,QAAA;AAAA,eAAiB,IAAA,UAAA,MAAA;MAAiB,CAAA;AACzC,MAAA,yBAAA,GAAA,WAAA,CAAA,EAAmC,GAAA,iBAAA,CAAA,EACM,GAAA,OAAA,CAAA;AAE7B,MAAA,iBAAA,EAAA;;AACJ,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,WAAA;AACI,MAAA,iBAAA,EAAA;;AACJ,MAAA,uBAAA,EAAY,EACA,EACV,EACF;;;AAxBA,MAAA,oBAAA;AAAA,MAAA,qBAAA,UAAA,IAAA,EAAe,cAAA,IAAA;AAEZ,MAAA,oBAAA;AAAA,MAAA,qBAAA,SAAA;AACP,MAAA,oBAAA;AAAA,MAAA,6BAAA,KAAA,sBAAA,GAAA,IAAA,iBAAA,GAAA,GAAA;AAGJ,MAAA,oBAAA,CAAA;AAAA,MAAA,wBAAA,IAAA,oBAAA,mBAAA,IAAA,EAAA;AAM2C,MAAA,oBAAA;AAAA,MAAA,qBAAA,UAAA,OAAA;AAExB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,QAAA;AAEP,MAAA,oBAAA,CAAA;AAAA,MAAA,6BAAA,KAAA,sBAAA,IAAA,IAAA,yBAAA,GAAA,GAAA;AAGO,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA;AACP,MAAA,oBAAA;AAAA,MAAA,6BAAA,KAAA,sBAAA,IAAA,IAAA,oBAAA,GAAA,GAAA;;;IAStB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAa,GAAA,eAAA,EAAA,CAAA;;;sEAGJ,yBAAuB,CAAA;UA5CnC;uBACW,sBAAoB,YAClB,MAAI,UACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;KA4BT,SAEQ;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACD,CAAA;;;;6EAEU,yBAAuB,EAAA,WAAA,2BAAA,UAAA,sEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;;AC5BtB,IAAA,yBAAA,GAAA,QAAA,CAAA;AAAmD,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA;;;;AAApB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,CAAA;;;AA2C3D,IAAO,qBAAP,MAAO,oBAAkB;EACW;EAExC,SAAS,MAAc,EAAE;;EACzB,WAAW,MAAe,KAAK;EAC/B,UAAU,MAAe,KAAK;EAC9B,QAAQ,MAA8B,SAAS;EAC/C,aAAa,MAAe,KAAK;EACjC,cAAc,MAAmB,SAAS;;EAC1C,aAAa,MAAc,iFAAgB;;EAC3C,kBAAkB,MAAc,CAAC;;EACjC,UAAU,OAAO,KAAK;EACtB,eAAe,OAAsB,IAAI;EAEzC,WAAW,OAAU;EAErB;EAEA,iBAAiB,IAAwB;AACvC,SAAK,WAAW;EAClB;EAEA,kBAAkB,IAAc;AAC9B,SAAK,YAAY;EACnB;EAEA,MAAM,aAAa,OAAY;AAC7B,UAAM,UAAU,MAAM;AACtB,UAAM,QAAQ,QAAQ;AACtB,QAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAChC,WAAK,SAAS,IAAI;AAClB;IACF;AAEA,UAAM,iBAAiB,MAAM,KAAK,KAAK,EAAE,OAAO,UAAQ,KAAK,OAAO,KAAK,gBAAe,IAAK,OAAO,IAAI;AACxG,QAAI,eAAe,SAAS,GAAG;AAC7B,WAAK,aAAa,IAAI,mFAAkB,KAAK,gBAAe,CAAE,IAAI;AAClE,WAAK,SAAS,IAAI;AAClB;IACF,OAAO;AACL,WAAK,aAAa,IAAI,IAAI;IAC5B;AAEA,QAAI;AAEJ,QAAI,KAAK,WAAU,GAAI;AACrB,YAAM,aAAa,MAAM,QAAQ,IAC/B,MAAM,KAAK,KAAK,EAAE,IAAI,UAAQ,KAAK,iBAAiB,IAAI,CAAC,CAAC;AAE5D,eAAS,KAAK,SAAQ,IAAK,aAAa,WAAW,CAAC;IACtD,OAAO;AACL,eAAS,KAAK,SAAQ,IAAK,MAAM,KAAK,KAAK,IAAI,MAAM,CAAC;IACxD;AAEA,SAAK,SAAS,MAAM;AACpB,SAAK,UAAS;EAChB;EAEA,kBAAe;AACb,UAAM,QAAQ,KAAK,WAAW,cAAc,oBAAoB;AAChE,QAAI,OAAO,sBAAsB,GAAG;AAClC,WAAK,QAAQ,IAAI,IAAI;IACvB;EACF;EAEA,QAAK;AACH,SAAK,WAAW,cAAc,MAAK;EACrC;EAEQ,WAAsE,MAAK;EACnF;EAEQ,YAAwB,MAAK;EACrC;EAEQ,iBAAiB,MAAU;AACjC,WAAO,IAAI,QAAgB,CAAC,SAAS,WAAU;AAC7C,YAAM,SAAS,IAAI,WAAU;AAC7B,aAAO,SAAS,MAAM,QAAQ,OAAO,MAAgB;AACrD,aAAO,UAAU,MAAM,OAAO,OAAO,KAAK;AAC1C,aAAO,cAAc,IAAI;IAC3B,CAAC;EACH;;qCAlFW,qBAAkB;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,WAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;;;;;;iSANlB,CAAC;IACV,SAAS;IACT,aAAa,WAAW,MAAM,mBAAkB;IAChD,OAAO;GACR,CAAC,CAAA,GAAA,oBAAA,KAAA,OAAA,GAAA,MAAA,IAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,QAAA,GAAA,gBAAA,GAAA,UAAA,UAAA,GAAA,CAAA,QAAA,SAAA,GAAA,WAAA,UAAA,GAAA,CAAA,GAAA,sBAAA,GAAA,CAAA,SAAA,iBAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;;AA3DE,MAAA,yBAAA,GAAA,OAAA,CAAA,EAAqE,GAAA,SAAA,GAAA,CAAA;AAE1D,MAAA,qBAAA,UAAA,SAAA,oDAAA,QAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAU,IAAA,aAAA,MAAA,CAAoB;MAAA,CAAA;AADrC,MAAA,uBAAA;AAQA,MAAA,yBAAA,GAAA,aAAA,CAAA;AAAW,MAAA,qBAAA,WAAA,SAAA,2DAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,cAAA,eAAA,sBAAA,CAAA;AAAA,eAAA,sBAAW,aAAA,MAAA,CAAiB;MAAA,CAAA;AAInC,MAAA,iBAAA,CAAA;AACJ,MAAA,uBAAA;AAEA,MAAA,yBAAA,GAAA,OAAA,CAAA;AACI,MAAA,uBAAA,CAAA;AACA,MAAA,qBAAA,GAAA,oCAAA,GAAA,GAAA,QAAA,CAAA;AACJ,MAAA,uBAAA,EAAM;;;AAnBL,MAAA,sBAAA,YAAA,IAAA,MAAA,MAAA,UAAA;AAKM,MAAA,oBAAA;AAAA,MAAA,qBAAA,YAAA,IAAA,QAAA,CAAA;;AAMI,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,IAAA,YAAA,CAAA;AADA,MAAA,qBAAA,YAAA,IAAA,QAAA,CAAA;AAGP,MAAA,oBAAA;AAAA,MAAA,6BAAA,KAAA,IAAA,WAAA,GAAA,GAAA;AAGC,MAAA,oBAAA;AAAA,MAAA,sBAAA,WAAA,IAAA,QAAA,KAAA,CAAA,IAAA,aAAA,IAAA,SAAA,MAAA;AAEM,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,aAAA,CAAA;;oBApBT,cAAY,MAAE,eAAe,GAAA,QAAA,CAAA,yjBAAA,EAAA,CAAA;;;sEA+D5B,oBAAkB,CAAA;UAlE9B;uBACW,iBAAe,YACb,MAAI,SACP,CAAC,cAAc,eAAe,GAAC,UAC9B;;;;;;;;;;;;;;;;;;;;;;KAsBT,WAkCU,CAAC;MACV,SAAS;MACT,aAAa,WAAW,MAAK,kBAAmB;MAChD,OAAO;KACR,GAAC,QAAA,CAAA,6qBAAA,EAAA,CAAA;cAGsC,WAAS,CAAA;UAAhD;WAAU,aAAa,EAAC,QAAQ,KAAI,CAAC;;;;6EAD3B,oBAAkB,EAAA,WAAA,sBAAA,UAAA,uDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AC9Cb,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,oBAAA,GAAA,OAAA,EAAA;AAEJ,IAAA,uBAAA;;;;AAFS,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,OAAA,WAAA,GAAA,uBAAA;;;AAmErB,IAAO,4BAAP,MAAO,2BAAyB;EAG1B;EADV,YACU,kBAAiC;AAAjC,SAAA,mBAAA;EAEV;EAEA;EAEA,OAAO,IAAI,UAAU;IACnB,QAAQ,IAAI,YAA2B,IAAI;IAC3C,eAAe,IAAI,YAA2B,IAAI;IAClD,iBAAiB,IAAI,YAA2B,IAAI;IACpD,MAAM,IAAI,YAAyB,IAAI;GACxC;EACD,aAAa,OAAsB,IAAI;EACvC,aAAa,OAAO,UAAU;EAE9B,kBAAe;AACb,UAAM,aAAa,KAAK,iBAAiB,oBAAmB;AAC5D,SAAK,KAAK,WAAW;MACnB,QAAQ,KAAK,iBAAiB,iBAAgB;MAC9C,eAAe,WAAW,CAAC,KAAK;MAChC,iBAAiB,WAAW,CAAC,KAAK;KACnC;AAED,SAAK,WAAW,IAAI,KAAK,iBAAiB,eAAc,KAAM,IAAI;AAElE,SAAK,KAAK,aAAa,KACrB,mBAAmB,KAAK,UAAU,GAClC,aAAa,GAAG,CAAC,EACjB,UAAU,OAAM,UAAQ;AACxB,UAAI,MAAM,MAAM;AACd,aAAK,WAAW,IAAI,MAAM,KAAK,2BAA2B,MAAM,IAAI,CAAC;MACvE;AAEA,WAAK,iBAAiB,eAAe,KAAK,WAAU,CAAE;AACtD,WAAK,iBAAiB,iBAAiB,MAAM,UAAU,EAAE;AACzD,WAAK,iBAAiB,qBACpB,MAAM,iBAAiB,GAAG,MAAM,mBAAmB,CAAC;AAEtD,YAAM,KAAK,iBAAiB,aAAY;IAC1C,CAAC;EACH;EAEA,2BAA2B,MAAU;AACnC,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAU;AACrC,YAAM,SAAS,IAAI,WAAU;AAE7B,aAAO,SAAS,MAAK;AACnB,cAAM,MAAM,IAAI,MAAK;AACrB,YAAI,SAAS,MAAK;AAChB,gBAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,gBAAM,MAAM,OAAO,WAAW,IAAI;AAClC,iBAAO,QAAQ;AACf,iBAAO,SAAS;AAEhB,gBAAM,WAAW,IAAI;AACrB,gBAAM,YAAY,IAAI;AAEtB,gBAAM,KAAK,OAAO,QAAQ,YAAY;AACtC,gBAAM,KAAK,OAAO,SAAS,aAAa;AAExC,cAAI,UAAU,KAAK,GAAG,CAAC;AACvB,gBAAM,SAAS,OAAO,UAAU,WAAW;AAC3C,mBAAS,KAAK,YAAY,MAAM;AAChC,kBAAQ,MAAM;QAChB;AACA,YAAI,UAAU;AACd,YAAI,MAAM,OAAO;MACnB;AAEA,aAAO,UAAU;AACjB,aAAO,cAAc,IAAI;IAC3B,CAAC;EACH;;qCA3EW,4BAAyB,4BAAA,eAAA,CAAA;EAAA;yEAAzB,4BAAyB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,QAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,4BAAA,GAAA,CAAA,mBAAA,QAAA,GAAA,eAAA,YAAA,GAAA,CAAA,mBAAA,QAAA,GAAA,CAAA,QAAA,OAAA,GAAA,CAAA,GAAA,QAAA,OAAA,GAAA,CAAA,mBAAA,eAAA,GAAA,CAAA,mBAAA,iBAAA,GAAA,CAAA,OAAA,QAAA,GAAA,KAAA,CAAA,GAAA,UAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AA3EhC,MAAA,yBAAA,GAAA,iBAAA,CAAA,EAAkC,GAAA,iBAAA,CAAA,EACD,GAAA,YAAA,CAAA;AAErB,MAAA,iBAAA,GAAA,QAAA;AACJ,MAAA,uBAAA;AAEA,MAAA,8BAAA,GAAA,kDAAA,GAAA,GAAA,OAAA,CAAA;AAOA,MAAA,oBAAA,GAAA,iBAAA,CAAA;AAGJ,MAAA,uBAAA;AAEA,MAAA,yBAAA,GAAA,iBAAA,CAAA,EAA6B,GAAA,YAAA,CAAA;AAErB,MAAA,iBAAA,GAAA,uBAAA;AACJ,MAAA,uBAAA;AAEA,MAAA,oBAAA,GAAA,YAAA,CAAA;AACJ,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,iBAAA,CAAA,EAA6B,IAAA,YAAA,CAAA;AAErB,MAAA,iBAAA,IAAA,aAAA;AACJ,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,YAAA,EAAY,IAAA,iBAAA,CAAA,EACoB,IAAA,YAAA,CAAA;AAEpB,MAAA,iBAAA,IAAA,YAAA;AACJ,MAAA,uBAAA;AACA,MAAA,oBAAA,IAAA,mBAAA,CAAA;AACJ,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,iBAAA,CAAA,EAA4B,IAAA,YAAA,CAAA;AAEpB,MAAA,iBAAA,IAAA,cAAA;AACJ,MAAA,uBAAA;AACA,MAAA,oBAAA,IAAA,mBAAA,CAAA;AACJ,MAAA,uBAAA,EAAgB,EACP,EACD;;;AA9CL,MAAA,qBAAA,aAAA,IAAA,IAAA;AAEG,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,CAAA;AAIV,MAAA,oBAAA,CAAA;AAAA,MAAA,wBAAA,IAAA,WAAA,IAAA,IAAA,EAAA;AAOe,MAAA,oBAAA;AAAA,MAAA,qBAAA,eAAA,IAAA,WAAA,IAAA,WAAA,SAAA,EAAmD,cAAA,IAAA,WAAA,IAAA,yBAAA,aAAA;AAMxD,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,CAAA;AAQA,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,CAAA;AAMQ,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,EAAa,SAAA,CAAA;AAOb,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,QAAA,IAAA,EAAa,SAAA,CAAA;;;IA0BzC;IACA;IACA;IACA;IAAmB;IAAA;IAAA;IAAA;IACnB;IACA;IACA;EAAkB,GAAA,QAAA,CAAA,mYAAA,EAAA,CAAA;;;sEAGT,2BAAyB,CAAA;UA/ErC;uBACW,wBAAsB,YACpB,MAAI,UACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiDT,SAiBQ;MACP;MACA;MACA;MACA;MACA;MACA;MACA;OACD,QAAA,CAAA,gkBAAA,EAAA,CAAA;;;;6EAEU,2BAAyB,EAAA,WAAA,6BAAA,UAAA,oGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;ACVZ,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;;AAhDJ,IAAA,yBAAA,GAAA,WAAA,CAAA,EAAiD,GAAA,OAAA,CAAA,EAEJ,GAAA,iBAAA,CAAA;AAEjC,IAAA,oBAAA,GAAA,YAAA,CAAA;AAGA,IAAA,yBAAA,GAAA,cAAA,CAAA,EAAsC,GAAA,iBAAA,CAAA;AAG9B,IAAA,oBAAA,GAAA,YAAA,CAAA,EAC8C,GAAA,YAAA,EAAA;AAKlD,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,iBAAA,CAAA;AACI,IAAA,oBAAA,GAAA,YAAA,EAAA,EAC+C,IAAA,YAAA,EAAA;AAInD,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,iBAAA,CAAA;AACI,IAAA,oBAAA,IAAA,YAAA,EAAA,EAC6C,IAAA,YAAA,EAAA;AAIjD,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,aAAA,EAAA;AAIW,IAAA,qBAAA,SAAA,SAAA,uEAAA;AAAA,YAAA,oBAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,UAAA,iBAAA,CAAY;IAAA,CAAA;AAC5B,IAAA,oBAAA,IAAA,YAAA,EAAA;AAEJ,IAAA,uBAAA,EAAY,EACH,EACD,EACd;AAGV,IAAA,8BAAA,IAAA,yDAAA,GAAA,GAAA,MAAA,EAAA;;;;;;;AA/C6B,IAAA,qBAAA,iBAAA,iBAAA;AAEpB,IAAA,oBAAA;AAAA,IAAA,sBAAA,yBAAA,oBAAA,MAAA,CAAA;AAGa,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,cAAA;AAEE,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,IAAA,EAAY,OAAA,IAAA;AAIN,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,QAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,MAAA;AAMA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,SAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,SAAA;AAKA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,OAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA;AAGH,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA;AAEA,IAAA,qBAAA,QAAA,MAAA,EAAe,QAAA,IAAA;AAW1C,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,EAAA,sBAAA,oBAAA,KAAA,KAAA,EAAA;;;;;AAcA,IAAA,iBAAA,GAAA,gBAAA;;;;;AAEA,IAAA,iBAAA,GAAA,cAAA;;;AAmChB,IAAO,4BAAP,MAAO,2BAAyB;EAE1B;EACA;EAFV,YACU,wBACA,sBAA0C;AAD1C,SAAA,yBAAA;AACA,SAAA,uBAAA;EAEV;EAEA,OAAO,MAAM,gBAAgB,MAAM;EACnC,cAAc,OAAqB,CAAA,CAAE;EACrC,OAAO,IAAI,UAAU;IACnB,MAAM,IAAI,UAAU;MAClB,KAAK,aAAY;KAClB;GACF;EACD,aAAa,OAAO,MAAK;AACvB,SAAK,eAAe,MAAK;AACzB,SAAK,YAAW,EAAG,QAAQ,CAAC,KAAK,UAAS;AACxC,WAAK,eAAe,KAAK,KAAK,aAAa,GAAG,CAAC;IACjD,CAAC;AACD,SAAK,KAAK,uBAAsB;AAChC,SAAK,KAAK,eAAc;EAC1B,CAAC;EACD,aAAa,OAAO,MAAK;AACvB,SAAK,uBAAuB,aAAa,KAAK,KAAI,CAAE,EACjD,KAAK,CAAC,gBAAe;AACpB,WAAK,YAAY,IAAI,WAAW;IAClC,CAAC;EACL,CAAC;EAGD,aAAa,KAAK,KAAK,aAAa,KAClC,mBAAkB,CAAE;EAGtB,IAAY,iBAAc;AACxB,WAAO,KAAK,KAAK,IAAI,MAAM;EAC7B;EAEA,UAAU,OAAa;AACrB,UAAM,aAAa,KAAK,KAAK,MAAM,OAAO,KAAK,GAAG;AAClD,SAAK,eAAe,SAAS,KAAK;AAClC,SAAK,YAAY,OAAO,aAAU;AAChC,aAAO,QAAQ,OAAO,CAAC,GAAG,MAAM,MAAM,KAAK;IAC7C,CAAC;AACD,SAAK,KAAK,YAAW;AACrB,QAAI,YAAY;AACd,WAAK,uBAAuB,UAAU,UAAU;IAClD;EACF;EAEA,SAAM;AACJ,SAAK,eAAe,KAAK,KAAK,aAAY,CAAE;AAC5C,UAAM,gBAAgB,IAAI,WAAW;MACnC,MAAM,KAAK,KAAI;KAChB;AACD,SAAK,YAAY,OAAO,aAAW,CAAC,GAAG,SAAS,aAAa,CAAC;AAC9D,SAAK,KAAK,YAAW;EACvB;EAEA,MAAM,OAAI;AACR,QAAI;AACF,YAAM,KAAK,uBACR,WAAW,KAAK,wBAAuB,CAAE;AAC5C,WAAK,qBAAqB,QAAQ,gCAAgC;AAClE,WAAK,KAAK,eAAc;IAC1B,SAAS,GAAG;AACV,WAAK,qBAAqB,MAAM,aAAa,CAAC,CAAC;IACjD;EACF;EAEQ,0BAAuB;AAC7B,WAAO,KAAK,eAAe,SAAS,IAAI,CAAC,YAAW;AAClD,YAAM,QAAQ,QAAQ;AACtB,aAAO,IAAI,WAAW;QACpB,MAAM,MAAM;QACZ,aAAa,MAAM;QACnB,SAAS,MAAM;QACf,SAAS,MAAM;QACf,OAAO,MAAM;QACb,OAAO,MAAM;QACb,OAAO,MAAM;QACb,MAAM,KAAK,KAAI;QACf,MAAM,MAAM;OACb;IACH,CAAC;EACH;EAEQ,aACN,OAAkB;AAElB,WAAO,IAAI,UAAU;MACnB,MAAM,IAAI,YAAY,OAAO,QAAQ,EAAE;MACvC,aAAa,IAAI,YAAY,OAAO,eAAe,EAAE;MACrD,SAAS,IAAI,YAAY,OAAO,WAAW,EAAE;MAC7C,SAAS,IAAI,YAAY,OAAO,WAAW,EAAE;MAC7C,OAAO,IAAI,YAAY,OAAO,SAAS,EAAE;MACzC,OAAO,IAAI,YAAY,OAAO,SAAS,EAAE;MACzC,OAAO,IAAI,YAAY,OAAO,SAAS,EAAE;MACzC,MAAM,IAAI,YAAY,OAAO,QAAQ,EAAE;KACxC;EACH;;qCApGW,4BAAyB,4BAAA,qBAAA,GAAA,4BAAA,oBAAA,CAAA;EAAA;yEAAzB,4BAAyB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,QAAA,EAAA,MAAA,CAAA,GAAA,MAAA,EAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,CAAA,iBAAA,MAAA,GAAA,CAAA,gBAAA,IAAA,YAAA,IAAA,GAAA,SAAA,UAAA,GAAA,CAAA,gBAAA,IAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,eAAA,GAAA,eAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,QAAA,OAAA,GAAA,CAAA,mBAAA,eAAA,GAAA,aAAA,GAAA,CAAA,GAAA,OAAA,KAAA,GAAA,CAAA,mBAAA,SAAA,GAAA,aAAA,GAAA,CAAA,mBAAA,QAAA,GAAA,aAAA,GAAA,CAAA,mBAAA,WAAA,GAAA,aAAA,GAAA,CAAA,mBAAA,WAAA,GAAA,aAAA,GAAA,CAAA,mBAAA,SAAA,GAAA,aAAA,GAAA,CAAA,mBAAA,SAAA,GAAA,aAAA,GAAA,CAAA,YAAA,IAAA,GAAA,SAAA,QAAA,MAAA,GAAA,CAAA,eAAA,SAAA,cAAA,qBAAA,YAAA,OAAA,GAAA,CAAA,SAAA,WAAA,YAAA,IAAA,QAAA,GAAA,CAAA,GAAA,UAAA,SAAA,mCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAvGhC,MAAA,yBAAA,GAAA,eAAA;AACI,MAAA,kCAAA,GAAA,CAAA,EAAiC,GAAA,CAAA;AAEzB,MAAA,2BAAA,GAAA,0CAAA,IAAA,IAAA,MAAA,MAAAA,WAAA;;AAwDR,MAAA,yBAAA,GAAA,YAAA,EAAY,GAAA,aAAA,CAAA;AACG,MAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,eAAS,IAAA,KAAA;MAAM,CAAA;AAKtB,MAAA,8BAAA,GAAA,kDAAA,GAAA,CAAA,EAAkB,GAAA,kDAAA,GAAA,CAAA;AAKtB,MAAA,uBAAA;AAEA,MAAA,yBAAA,GAAA,aAAA,CAAA;AAAW,MAAA,qBAAA,SAAA,SAAA,gEAAA;AAAA,eAAS,IAAA,OAAA;MAAQ,CAAA;AAIxB,MAAA,iBAAA,IAAA,WAAA;AACJ,MAAA,uBAAA,EAAY,EACH;;;AA7EC,MAAA,oBAAA;AAAA,MAAA,qBAAA,aAAA,IAAA,IAAA;AAEN,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,IAAA,YAAA,CAAa;AA2DN,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA;AADA,MAAA,qBAAA,YAAA,CAAA,IAAA,KAAA,KAAA;AAIP,MAAA,oBAAA;AAAA,MAAA,wBAAA,IAAA,KAAA,QAAA,IAAA,CAAA;AAQO,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA;;;IAUrB;IACA;IAAW;IAAA;IACX;IACA;IACA;IACA;IAAmB;IAAA;IAAA;IAAA;IACnB;IACA;IACA;IASA;EAAe,GAAA,eAAA,EAAA,CAAA;;;sEAGN,2BAAyB,CAAA;UA3GrC;uBACW,wBAAsB,YACpB,MAAI,UACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiFT,SAEQ;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACD,CAAA;;;;6EAEU,2BAAyB,EAAA,WAAA,6BAAA,UAAA,8FAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;ACvHxB,IAAA,oBAAA,GAAA,wBAAA,CAAA;;;;AAAsB,IAAA,qBAAA,QAAA,OAAA,gBAAA,MAAA;;;;;AAItB,IAAA,oBAAA,GAAA,wBAAA,CAAA;;;;AAAsB,IAAA,qBAAA,QAAA,OAAA,gBAAA,QAAA;;;AAY9B,IAAO,8BAAP,MAAO,6BAA2B;EAE5B;EACA;EAFV,YACU,wBACA,sBAA0C;AAD1C,SAAA,yBAAA;AACA,SAAA,uBAAA;EAEV;EAEmB,kBAAkB;;qCAP1B,8BAA2B,4BAAA,qBAAA,GAAA,4BAAA,oBAAA,CAAA;EAAA;yEAA3B,8BAA2B,WAAA,CAAA,CAAA,yBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,QAAA,QAAA,GAAA,CAAA,SAAA,UAAA,SAAA,UAAA,SAAA,EAAA,GAAA,CAAA,SAAA,aAAA,SAAA,YAAA,SAAA,EAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,UAAA,SAAA,qCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAlBlC,MAAA,yBAAA,GAAA,WAAA,CAAA;AACI,MAAA,qBAAA,GAAA,oDAAA,GAAA,GAAA,eAAA,CAAA,EAAiD,GAAA,oDAAA,GAAA,GAAA,eAAA,CAAA;AAOrD,MAAA,uBAAA;;;AARS,MAAA,qBAAA,QAAA,IAAA,EAAa,UAAA,IAAA;;;IAaxB;IACA;IACA;EAAY,GAAA,eAAA,EAAA,CAAA;;;sEAGH,6BAA2B,CAAA;UAtBvC;uBACW,2BAAyB,YACvB,MAAI,UACN;;;;;;;;;;;KAWT,SAEQ;MACP;MACA;MACA;MACD,CAAA;;;;6EAEU,6BAA2B,EAAA,WAAA,+BAAA,UAAA,gGAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AExBhC,IAAA,oBAAA,GAAA,sBAAA;;;;;AAIA,IAAA,yBAAA,GAAA,cAAA,CAAA,EAA6C,GAAA,KAAA,CAAA;AAEzC,IAAA,iBAAA,CAAA;;AACF,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,KAAA,CAAA;AACE,IAAA,iBAAA,CAAA;;AACF,IAAA,uBAAA,EAAI;;;AAPM,IAAA,qBAAA,cAAA,IAAA,EAAmB,OAAA,IAAA;AAE3B,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,gCAAA,GAAA,GAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,+BAAA,GAAA,GAAA;;;;;AAMJ,IAAA,oBAAA,GAAA,sBAAA;;;;;AAIA,IAAA,oBAAA,GAAA,yBAAA;;;;;AAIA,IAAA,oBAAA,GAAA,mBAAA;;;;;AAIA,IAAA,oBAAA,GAAA,oBAAA;;;ADQF,IAAO,oBAAP,MAAO,mBAAiB;EAEnB;EADT,YACS,iBAAgC;AAAhC,SAAA,kBAAA;EAET;;qCAJW,oBAAiB,4BAAA,eAAA,CAAA;EAAA;yEAAjB,oBAAiB,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,SAAA,YAAA,SAAA,IAAA,GAAA,OAAA,GAAA,CAAA,SAAA,cAAA,SAAA,IAAA,GAAA,OAAA,GAAA,CAAA,SAAA,WAAA,SAAA,oBAAA,SAAA,EAAA,GAAA,CAAA,SAAA,eAAA,SAAA,eAAA,SAAA,EAAA,GAAA,CAAA,SAAA,SAAA,SAAA,SAAA,SAAA,EAAA,GAAA,CAAA,SAAA,UAAA,SAAA,IAAA,GAAA,OAAA,GAAA,CAAA,GAAA,cAAA,KAAA,GAAA,CAAA,YAAA,IAAA,cAAA,iCAAA,oBAAA,QAAA,GAAA,CAAA,YAAA,IAAA,cAAA,gCAAA,oBAAA,QAAA,CAAA,GAAA,UAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AC1C9B,MAAA,yBAAA,GAAA,YAAA,EAAY,GAAA,cAAA,EACI,GAAA,UAAA;AACF,MAAA,iBAAA,CAAA;;AAAgC,MAAA,uBAAA;AAE1C,MAAA,yBAAA,GAAA,SAAA;AACE,MAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,eAAA,CAAA;;AAIA,MAAA,qBAAA,GAAA,0CAAA,GAAA,GAAA,eAAA,CAAA;;AAYA,MAAA,qBAAA,IAAA,2CAAA,GAAA,GAAA,eAAA,CAAA,EAA4D,IAAA,2CAAA,GAAA,GAAA,eAAA,CAAA,EAID,IAAA,2CAAA,GAAA,GAAA,eAAA,CAAA,EAIZ,IAAA,2CAAA,GAAA,GAAA,eAAA,CAAA;;AAOjD,MAAA,uBAAA,EAAU,EACG;;;AAnCH,MAAA,oBAAA,CAAA;AAAA,MAAA,4BAAA,sBAAA,GAAA,GAAA,gBAAA,CAAA;AAGsB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,wBAAA,sBAAA,GAAA,GAAA,yBAAA,CAAA,CAAiD;AAI/C,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,wBAAA,sBAAA,GAAA,IAAA,2BAAA,CAAA,CAAmD;AAwBvD,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,wBAAA,sBAAA,IAAA,IAAA,uBAAA,CAAA,CAA+C;;;IDR7E;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAsB,GAAA,eAAA,EAAA,CAAA;;;sEAGb,mBAAiB,CAAA;UAvB7B;uBACW,eAAa,YACX,MAAI,SAGP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,CAAA;;;;6EAEU,mBAAiB,EAAA,WAAA,qBAAA,UAAA,wDAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": ["_forTrack0"]
}
