{
  "version": 3,
  "sources": ["src/app/shared/view/widgets/eggs-widget/eggs-widget.component.ts"],
  "sourcesContent": ["import {Component, computed, model, output, signal, ViewEncapsulation} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {InputComponent} from '../../ui/form/input.component';\nimport {GapColumnComponent} from '../../ui/layout/gap-column.component';\nimport {TitleComponent} from '../../ui/layout/title/title.component';\nimport {DecimalPipe} from '@angular/common';\n\n@Component({\n  selector: 'lg-eggs-widget',\n  standalone: true,\n  template: `\n      <lg-gap-column [size]=\"'medium'\">\n          <lg-title>\n              Convert eggs to grams\n          </lg-title>\n\n          <lg-input [(ngModel)]=\"eggs\"\n                    (ngModelChange)=\"changed.emit(calculated())\"\n                    [placeholder]=\"'How many eggs do you have?'\"\n                    [theme]=\"'contrast'\"></lg-input>\n          <div class=\"eggs-widget__eggs\">\n              <div (click)=\"onChooseEggSize('small')\"\n                   [class.selected]=\"selected() === 'small'\"\n                   class=\"eggs-widget__egg\">\n                  <img alt=\"Egg\" src=\"img/egg.svg\">\n                  Small\n                  @if (selected() === 'small' && calculated()) {\n                      ~ {{ calculated() | number: '1.' }} grams\n                  }\n              </div>\n              <div (click)=\"onChooseEggSize('medium')\"\n                   [class.selected]=\"selected() === 'medium'\"\n                   class=\"eggs-widget__egg\">\n                  <img alt=\"Egg\" src=\"img/egg.svg\">\n                  Medium\n\n                  @if (selected() === 'medium' && calculated()) {\n                      ~ {{ calculated() | number: '1.' }} grams\n                  }\n              </div>\n              <div (click)=\"onChooseEggSize('large')\"\n                   [class.selected]=\"selected() === 'large'\"\n                   class=\"eggs-widget__egg\">\n                  <img alt=\"Egg\" src=\"img/egg.svg\">\n                  Large\n\n                  @if (selected() === 'large' && calculated()) {\n                      ~ {{ calculated() | number: '1.' }} grams\n                  }\n              </div>\n          </div>\n      </lg-gap-column>\n  `,\n  imports: [\n    FormsModule,\n    InputComponent,\n    GapColumnComponent,\n    TitleComponent,\n    DecimalPipe\n  ],\n  styles: [`\n    :host {\n\n      --control-bg: #fcfcfc;\n    }\n\n    lg-eggs-widget {\n      display: flex;\n    }\n\n    .eggs-widget {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .eggs-widget__eggs {\n      display: flex;\n      align-items: flex-end;\n      gap: 8px;\n    }\n\n    .eggs-widget__eggs img {\n      width: 40px;\n    }\n\n    .eggs-widget__egg {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex: 1;\n      flex-direction: column;\n      white-space: nowrap;\n      gap: 8px;\n      background-color: var(--control-bg);\n      border-radius: 24px;\n      padding: 16px;\n    }\n\n    .eggs-widget__egg:first-child img {\n      transform: scale(0.8);\n    }\n\n    .eggs-widget__egg:last-child img {\n      transform: scale(1.2);\n    }\n\n    .eggs-widget__egg.selected {\n      background-color: #61b789;\n    }\n\n    .eggs-widget__egg.selected:first-child {\n      background-color: #b4b8f8;\n    }\n\n    .eggs-widget__egg.selected:last-child {\n      background-color: #ff8080;\n    }\n  `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class EggsWidgetComponent {\n  eggs = model<string | null>(null);\n  selected = signal<string>('small');\n  calculated = computed(() => {\n    const number = parseFloat(this.eggs() ?? '');\n    const eggWeight: Record<string, number> = {\n      small: 46,\n      medium: 50,\n      large: 59\n    };\n    const weight = eggWeight[this.selected()];\n    if (!number || !weight) {\n      return '';\n    }\n    return number! * weight;\n  });\n  changed = output<number | \"\">();\n\n  onChooseEggSize(size: string) {\n    this.selected.set(size);\n    this.changed.emit(this.calculated());\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
