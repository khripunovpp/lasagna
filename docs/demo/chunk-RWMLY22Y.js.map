{
  "version": 3,
  "sources": ["src/app/shared/view/ui/layout/gap-row.component.ts"],
  "sourcesContent": ["import {Component, Input, input, ViewEncapsulation} from '@angular/core';\nimport {NgClass, NgStyle} from '@angular/common';\n\n@Component({\n  selector: 'lg-gap-row',\n  standalone: true,\n  template: `\n    <div [class.gap-row__bottom]=\"bottom()\"\n         [class.gap-row__center]=\"center()\"\n         [class.gap-row__right]=\"right()\"\n         [class.gap-row__left]=\"left()\"\n         [class.gap-row__strict-center]=\"strictCenter()\"\n         [class.gap-row__fit]=\"fit()\"\n         [class.gap-row__mobile]=\"mobileMode()\"\n         [class.gap-row__relaxed]=\"relaxed()\"\n         [class.gap-row__top]=\"top()\"\n         [class.gap-row__equal]=\"equal\"\n         [class.gap-row__wrap]=\"wrap()\"\n         [ngClass]=\"size()\"\n         [style]=\"'--cols: ' + cols()\"\n         [ngStyle]=\"styles()\"\n         class=\"gap-row\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  imports: [\n    NgClass,\n    NgStyle\n  ],\n  styles: [\n    `:host {\n      flex: 1;\n      --lg-gap-row-pad-left: 0;\n      --lg-gap-row-pad-right: 0;\n    }\n\n    .gap-row {\n      display: flex;\n      --gap: 32px;\n      gap: var(--gap);\n      padding-left: var(--lg-gap-row-pad-left);\n      padding-right: var(--lg-gap-row-pad-right);\n    }\n\n\n    .gap-row__center {\n      align-items: center;\n    }\n\n    .gap-row__strict-center {\n      align-items: center;\n      justify-content: center;\n    }\n\n    .gap-row__bottom {\n      align-items: flex-end;\n    }\n\n    .gap-row__top {\n      align-items: flex-start;\n    }\n\n    .gap-row__right {\n      justify-content: flex-end;\n    }\n\n    .gap-row__left {\n      justify-content: flex-start;\n    }\n\n    .gap-row.small {\n      --gap: 8px;\n    }\n\n    .gap-row.medium {\n      --gap: 16px;\n    }\n\n    .gap-row.tiny {\n      --gap: 4px;\n    }\n\n    .gap-row__fit > * {\n      flex: auto;\n\n    }\n\n    .gap-row__equal > * {\n      flex: 1;\n    }\n\n    .gap-row__relaxed {\n      justify-content: space-between;\n    }\n\n    .gap-row__wrap {\n      flex-wrap: wrap;\n\n      & > * {\n        flex: 0 0 calc((100% / var(--cols)) - (var(--gap) / var(--cols)));\n      }\n    }\n\n    @media (max-width: 600px) {\n\n      .gap-row__mobile {\n        flex-direction: column;\n        align-items: flex-start;\n        --gap: 16px;\n      }\n\n      .gap-row__mobile.small {\n        --gap: 4px;\n      }\n\n      .gap-row__mobile.medium {\n        --gap: 8px;\n      }\n\n      .gap-row__mobile.tiny {\n        --gap: 2px;\n      }\n    }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class GapRowComponent {\n  constructor() {\n  }\n\n  @Input() equal = false;\n  center = input<boolean>(false);\n  right = input<boolean>(false);\n  left = input<boolean>(false);\n  strictCenter = input<boolean>(false);\n  bottom = input<boolean>(false);\n  top = input<boolean>(false);\n  fit = input<boolean>(false);\n  mobileMode = input<boolean>(false);\n  relaxed = input<boolean>(false);\n  wrap = input<boolean>(false);\n  cols = input<string|number>(1);\n  size = input<\n    'default' |\n    'small' |\n    'medium' |\n    'tiny'\n  >('default');\n  styles = input<NgStyle['ngStyle']>({});\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AA+HM,IAAO,kBAAP,MAAO,iBAAe;EAC1B,cAAA;EACA;EAES,QAAQ;EACjB,SAAS,MAAe,KAAK;EAC7B,QAAQ,MAAe,KAAK;EAC5B,OAAO,MAAe,KAAK;EAC3B,eAAe,MAAe,KAAK;EACnC,SAAS,MAAe,KAAK;EAC7B,MAAM,MAAe,KAAK;EAC1B,MAAM,MAAe,KAAK;EAC1B,aAAa,MAAe,KAAK;EACjC,UAAU,MAAe,KAAK;EAC9B,OAAO,MAAe,KAAK;EAC3B,OAAO,MAAqB,CAAC;EAC7B,OAAO,MAKL,SAAS;EACX,SAAS,MAA0B,CAAA,CAAE;;qCAtB1B,kBAAe;EAAA;yEAAf,kBAAe,WAAA,CAAA,CAAA,YAAA,CAAA,GAAA,QAAA,EAAA,OAAA,SAAA,QAAA,CAAA,GAAA,QAAA,GAAA,OAAA,CAAA,GAAA,OAAA,GAAA,MAAA,CAAA,GAAA,MAAA,GAAA,cAAA,CAAA,GAAA,cAAA,GAAA,QAAA,CAAA,GAAA,QAAA,GAAA,KAAA,CAAA,GAAA,KAAA,GAAA,KAAA,CAAA,GAAA,KAAA,GAAA,YAAA,CAAA,GAAA,YAAA,GAAA,SAAA,CAAA,GAAA,SAAA,GAAA,MAAA,CAAA,GAAA,MAAA,GAAA,MAAA,CAAA,GAAA,MAAA,GAAA,MAAA,CAAA,GAAA,MAAA,GAAA,QAAA,CAAA,GAAA,QAAA,EAAA,GAAA,oBAAA,KAAA,OAAA,GAAA,MAAA,IAAA,QAAA,CAAA,CAAA,GAAA,WAAA,GAAA,WAAA,SAAA,CAAA,GAAA,UAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AAxHxB,MAAA,yBAAA,GAAA,OAAA,CAAA;AAeE,MAAA,uBAAA,CAAA;AACF,MAAA,uBAAA;;;AAJK,MAAA,qBAAA,aAAA,IAAA,KAAA,CAAA;AAZA,MAAA,sBAAA,mBAAA,IAAA,OAAA,CAAA,EAAkC,mBAAA,IAAA,OAAA,CAAA,EACA,kBAAA,IAAA,MAAA,CAAA,EACF,iBAAA,IAAA,KAAA,CAAA,EACF,0BAAA,IAAA,aAAA,CAAA,EACiB,gBAAA,IAAA,IAAA,CAAA,EACnB,mBAAA,IAAA,WAAA,CAAA,EACU,oBAAA,IAAA,QAAA,CAAA,EACF,gBAAA,IAAA,IAAA,CAAA,EACR,kBAAA,IAAA,KAAA,EACE,iBAAA,IAAA,KAAA,CAAA;AAE9B,MAAA,qBAAA,WAAA,IAAA,KAAA,CAAA,EAAkB,WAAA,IAAA,OAAA,CAAA;;;IAQvB;IACA;EAAO,GAAA,QAAA,CAAA,u9CAAA,GAAA,eAAA,EAAA,CAAA;;;sEAoGE,iBAAe,CAAA;UA5H3B;uBACW,cAAY,YACV,MAAI,UACN;;;;;;;;;;;;;;;;;;KAkBT,SACQ;MACP;MACA;OACD,eAiGc,kBAAkB,MAAI,QAAA,CAAA,u9CAAA,EAAA,CAAA;kBAM5B,OAAK,CAAA;UAAb;;;;6EAJU,iBAAe,EAAA,WAAA,mBAAA,UAAA,sDAAA,YAAA,IAAA,CAAA;AAAA,GAAA;",
  "names": []
}
