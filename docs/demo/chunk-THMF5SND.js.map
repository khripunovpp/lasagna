{
  "version": 3,
  "sources": ["src/app/shared/view/ui/tooltip.component.ts", "src/app/shared/view/widgets/amount-widgets.component.ts", "src/app/features/products/view/add-product/add-product-form.component.ts", "src/app/features/products/view/add-product/add-product-form.component.html", "src/app/features/products/view/add-product/add-product.component.ts"],
  "sourcesContent": ["import {\n  Component,\n  effect,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  output,\n  Renderer2,\n  signal,\n  viewChild, ViewEncapsulation\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {PortalComponent} from './layout/portal.component';\n\n@Component({\n  selector: 'lg-tooltip',\n  standalone: true,\n  template: `\n      <div [class.fullscreen]=\"full()\"\n           [ngClass]=\"position()\"\n           [style.--gap.px]=\"gap()\"\n           class=\"tooltip\">\n          <div class=\"tooltip__anchor\">\n              <div (click)=\"toggle($event)\">\n                  <ng-content></ng-content>\n              </div>\n              @if (displayed()) {\n                  <div class=\"tooltip__content\" #element>\n                      <ng-content select=\"content\"></ng-content>\n                  </div>\n                  <lg-portal [appendTarget]=\"'body'\"\n                             [targetElement]=\"element\"\n                             [wrapClass]=\"'tooltip tooltip--ejected'\">\n                  </lg-portal>\n              }\n\n          </div>\n      </div>\n  `,\n  imports: [\n    NgClass,\n    PortalComponent\n  ],\n  styles: [\n\n    `\n      lg-tooltip {\n        flex: 1;\n        display: flex;\n      }\n      .tooltip {\n        display: inline-block;\n      }\n\n      .tooltip--ejected {\n        position: fixed;\n        z-index: 6;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n\n        .tooltip__content {\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          position: fixed;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          padding-top: calc(var(--header-height) + 12px + 16px + 16px);\n        }\n      }\n\n      .tooltip__anchor {\n        position: relative;\n      }\n\n      .tooltip__content {\n        position: absolute;\n        background-color: #ffffff;\n        border-radius: 16px;\n        padding: 16px;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n        z-index: 100;\n      }\n\n      .tooltip.top .tooltip__content {\n        bottom: calc(100% + var(--gap));\n        right: 50%;\n        transform: translateX(50%);\n      }\n\n      .tooltip.bottom .tooltip__content {\n        bottom: calc(100% + var(--gap));\n        right: 50%;\n        transform: translateX(50%);\n      }\n\n      .tooltip.left .tooltip__content {\n        bottom: 50%;\n        right: calc(100% + var(--gap));\n        transform: translateY(50%);\n      }\n\n      .tooltip.right .tooltip__content {\n        bottom: 50%;\n        left: calc(100% + var(--gap));\n        transform: translateY(-50%);\n      }\n\n\n      .tooltip.fullscreen .tooltip__content {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ffffff;\n        border-radius: 0;\n        padding: 32px;\n        transform: none;\n        overflow-y: auto;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class TooltipComponent {\n  constructor() {\n  }\n\n  renderer = inject(Renderer2);\n  gap = input<number>(16);\n  displayed = signal<boolean>(false);\n  full = input<boolean>(false);\n  position = input<\n    'top' | 'bottom' | 'left' | 'right'\n  >('top');\n  element = viewChild<ElementRef>('element');\n  onClose = output<void>();\n  coordinates = signal<{ x: number, y: number }>({x: 0, y: 0});\n  coordinatesEffect = effect(() => {\n\n    // [style.--tooltip-x]=\"coordinates().x\"\n    // [style.--tooltip-y]=\"coordinates().y\"\n\n    this.renderer.setProperty(document.body, 'style', `--tooltip-x: ${this.coordinates().x}px;--tooltip-y: ${this.coordinates().y}px;`);\n  });\n\n  toggle(\n    event?: MouseEvent,\n  ) {\n    this.displayed.set(!this.displayed());\n    if (!this.displayed()) {\n      this.onClose.emit();\n    }\n\n    if (event) {\n      event.stopPropagation();\n      const [x, y] = [event.clientX, event.clientY];\n\n      console.log('x', x, 'y', y);\n      setTimeout(() => {\n        const tooltip = this.element()?.nativeElement;\n        const tooltipRect = tooltip?.getBoundingClientRect();\n        const tooltipWidth = tooltipRect?.width;\n        const tooltipHeight = tooltipRect?.height;\n        const screenWidth = window.innerWidth;\n        const screenHeight = window.innerHeight;\n        const offset = 16;\n        let newX = x;\n        let newY = y;\n        if (x + tooltipWidth + offset > screenWidth) {\n          newX = screenWidth - tooltipWidth - offset;\n        }\n        if (y + tooltipHeight + offset > screenHeight) {\n          newY = screenHeight - tooltipHeight - offset;\n        }\n        if (x - tooltipWidth - offset < 0) {\n          newX = offset;\n        }\n        if (y - tooltipHeight - offset < 0) {\n          newY = offset;\n        }\n        this.coordinates.set({x: newX, y: newY});\n      })\n    }\n  }\n\n  close() {\n    this.displayed.set(false);\n    this.onClose.emit();\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    if (event.target instanceof HTMLElement) {\n      if (!event.target.closest('.tooltip')) {\n        this.displayed.set(false);\n        this.onClose.emit();\n      }\n    }\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  onKeydown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.displayed.set(false);\n      this.onClose.emit();\n    }\n  }\n\n  // hide on scroll\n  @HostListener('window:scroll', ['$event'])\n  onScroll(event: Event) {\n    this.displayed.set(false);\n    this.onClose.emit();\n  }\n}\n", "import {Component, output, signal} from '@angular/core';\nimport {EggsWidgetComponent} from './eggs-widget/eggs-widget.component';\n\n@Component({\n  selector: 'lg-amount-widgets',\n  standalone: true,\n  template: `\n      <div [class.selected]=\"selectedWidget() != null\"\n           class=\"amount-widgets\">\n          <div class=\"amount-widgets__buttons\">\n              <button (click)=\"onWidgetSelect('eggs')\"\n                      class=\"amount-widgets__button\">Eggs\n              </button>\n          </div>\n          @if (selectedWidget() === 'eggs') {\n              <div class=\"amount-widgets__wrapper\">\n                  <lg-eggs-widget (changed)=\"onEggsChanged($event)\"></lg-eggs-widget>\n              </div>\n          }\n      </div>\n  `,\n  imports: [\n    EggsWidgetComponent\n  ],\n  styles: [\n    `\n      .amount-widgets {\n        display: flex;\n        gap: 16px;\n        flex-direction: column;\n      }\n\n      .amount-widgets__input {\n        flex: 1;\n      }\n\n      .amount-widgets__buttons {\n        display: flex;\n        gap: 16px;\n        flex-wrap: wrap;\n        padding: 16px;\n        background-color: #fafafa;\n        border-radius: 12px;\n        margin: -16px;\n      }\n\n      .amount-widgets.selected .amount-widgets__buttons {\n        margin-bottom: 0;\n      }\n\n      .amount-widgets__button {\n        display: flex;\n        padding: 8px 16px;\n        border-radius: 16px;\n        background-color: #e5de38;\n        appearance: none;\n        border: none;\n        font-family: inherit;\n        font-size: inherit;\n      }\n    `\n  ]\n})\n\nexport class AmountWidgetsComponent {\n  constructor() {\n  }\n\n  eggsChanged = output<number | null>();\n  selectedWidget = signal<string | null>(null);\n  onWidgetSelect(event: any) {\n    this.selectedWidget.set(event);\n  }\n\n\n  onEggsChanged(event: any) {\n    if (!event) return;\n    this.eggsChanged.emit(event);\n  }\n}\n", "import {\n  AfterViewInit,\n  Component,\n  effect,\n  inject,\n  input,\n  OnInit,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {ControlComponent} from '../../../../shared/view/ui/form/control.component';\nimport {GapColumnComponent} from '../../../../shared/view/ui/layout/gap-column.component';\nimport {ProductsRepository} from '../../service/products.repository';\nimport {SelectResourcesService} from '../../../../shared/service/services/select-resources.service';\nimport {Router} from '@angular/router';\nimport {MultiselectComponent} from '../../../../shared/view/ui/form/multiselect.component';\nimport {NumberInputComponent} from '../../../../shared/view/ui/form/number-input.component';\nimport {TooltipComponent} from '../../../../shared/view/ui/tooltip.component';\nimport {AmountWidgetsComponent} from '../../../../shared/view/widgets/amount-widgets.component';\nimport {ParseMathDirective} from '../../../../shared/view/directives/parse-math.directive';\nimport {GapRowComponent} from '../../../../shared/view/ui/layout/gap-row.component';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {ChipsListComponent} from '../../../../shared/view/ui/form/chips-list.component';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {AutocompleteComponent} from '../../../../shared/view/ui/form/autocomplete.component';\nimport {Product} from '../../service/Product';\nimport {productToFormValue} from '../../../../shared/helpers/product.helpers';\nimport {debounceTime, tap} from 'rxjs';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {MatIcon} from '@angular/material/icon';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {WidthDirective} from '../../../../shared/view/directives/width.directive';\nimport {UnitSwitcherComponent} from '../../../../shared/view/ui/unit-switcher.component';\nimport {USER_CURRENCY} from '../../../settings/service/providers/user-currency.token';\nimport {SETTINGS} from '../../../settings/service/providers/settings.token';\nimport {CurrencySymbolPipe} from '../../../../shared/view/pipes/currency-symbol.pipe';\nimport {smaller} from 'mathjs';\nimport {JsonPipe} from '@angular/common';\nimport {TextareaComponent} from '../../../../shared/view/ui/form/textarea.component';\nimport {InputComponent} from '../../../../shared/view/ui/form/input.component';\nimport {ControlExtraTemplateDirective} from \"../../../../shared/view/ui/form/control-extra-template.directive\";\n\n\n@Component({\n  selector: 'lg-add-product-form',\n  standalone: true,\n  templateUrl: './add-product-form.component.html',\n  imports: [\n    ReactiveFormsModule,\n    ControlComponent,\n    GapColumnComponent,\n    MultiselectComponent,\n    NumberInputComponent,\n    TooltipComponent,\n    AmountWidgetsComponent,\n    ParseMathDirective,\n    GapRowComponent,\n    ExpandDirective,\n    ChipsListComponent,\n    AutocompleteComponent,\n    TranslatePipe,\n    CardComponent,\n    MatIcon,\n    ButtonComponent,\n    WidthDirective,\n    UnitSwitcherComponent,\n    CurrencySymbolPipe,\n    JsonPipe,\n    TextareaComponent,\n    InputComponent,\n    ControlExtraTemplateDirective\n  ],\n  styles: [\n    `\n      lg-eggs-widget {\n        min-width: 300px;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n\n})\nexport class AddProductFormComponent\n  implements OnInit,\n    AfterViewInit {\n  constructor(\n    public _productsRepository: ProductsRepository,\n    public _selectResourcesService: SelectResourcesService,\n    private _router: Router,\n    private _notificationsService: NotificationsService,\n  ) {\n  }\n\n  form = new FormGroup({\n    name: new FormControl<string | null>(null, Validators.required),\n    amount: new FormControl<number | null>(null, Validators.required),\n    price: new FormControl<number | null>(null, Validators.required),\n    unit: new FormControl('gram'),\n    source: new FormControl<string | null>(null),\n    category_id: new FormControl<any>(null),\n  });\n  userSettings = inject(SETTINGS)\n  product = input<Product | null>(null);\n  topCategories = signal<{\n    label: string\n    value: string\n    color: string\n  }[]>([]);\n  topSources = signal<any[]>([]);\n  nameField = viewChild<AutocompleteComponent>('nameField');\n\n  private productEffect = effect(() => {\n    if (!this.product() || this.form.dirty) {\n      return;\n    }\n    this.form.reset(productToFormValue(this.product()!));\n    this.form.markAsPristine();\n  });\n\n  private get _defFormValue() {\n    return {\n      name: null,\n      amount: null,\n      price: null,\n      source: null,\n      category_id: null,\n      unit: 'gram',\n    };\n  }\n\n  private get _formValid() {\n    return this.form.valid;\n  }\n\n  eggsChanged(event: any) {\n    this.form.patchValue({\n      amount: event\n    });\n  }\n\n  ngOnInit() {\n    this._loadUsingHistory();\n    this.form.valueChanges.pipe(\n      debounceTime(100),\n    ).subscribe(values => {\n      if (!this.form.dirty) {\n        return\n      }\n      this.product()?.update(values);\n    })\n  }\n\n  resetForm(\n    value?: Product\n  ) {\n    this.form.reset(value ? productToFormValue(value) : this._defFormValue);\n    this.form.markAsPristine();\n    this._loadUsingHistory();\n  }\n\n  validateForm() {\n    if (!this._formValid) {\n      this._notificationsService.error(this._notificationsService.parseFormErrors(this.form).join(', '));\n      return false;\n    }\n    return true\n  }\n\n  ngAfterViewInit() {\n    this._selectResourcesService.load().then(resources => {\n    });\n\n    if (!this.product()?.uuid) {\n      this.nameField()!.focus();\n    }\n    this.form.markAsPristine()\n  }\n\n  private _loadUsingHistory() {\n    this._productsRepository.getTopCategories().then(categories => {\n      this.topCategories.set(categories.map(category => ({\n        label: category.name,\n        value: category.uuid ?? '',\n        color: category.ownColor,\n      })));\n    });\n\n    this._productsRepository.getTopSources().then(sources => {\n      this.topSources.set(sources.map(source => ({\n        label: source,\n        value: source,\n      })));\n    });\n  }\n\n  protected readonly smaller = smaller;\n}\n", "<form [formGroup]=\"form\">\n  <lg-gap-column>\n    <lg-card>\n      <lg-gap-column>\n        <lg-control>\n          <lg-input #nameField\n                    [placeholder]=\"'product.form.name.placeholder'|translate\"\n                    formControlName=\"name\"></lg-input>\n        </lg-control>\n\n        <lg-gap-row [center]=\"true\" [mobileMode]=\"true\">\n          <lg-gap-row [center]=\"true\" [mobileMode]=\"true\" [size]=\"'small'\" lgExpand>\n            <lg-control lgExpand>\n              <lg-number-input (onInputChange)=\"priceInput.focus()\"\n                               [placeholder]=\"'product.form.amount.placeholder'|translate:{unit:form.value.unit}\"\n                               formControlName=\"amount\"\n                               lgParseMath>\n                <ng-template lgExtraTpl place=\"after\">\n                  <lg-gap-row [center]=\"true\" [size]=\"'small'\">\n                    <lg-tooltip [position]=\"'left'\">\n                      <lg-button [flat]=\"true\"\n                                 [icon]=\"true\"\n                                 [style]=\"'success'\">\n                        <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n                      </lg-button>\n\n                      <div ngProjectAs=\"content\">\n                        <lg-amount-widgets (eggsChanged)=\"eggsChanged($event)\"></lg-amount-widgets>\n                      </div>\n                    </lg-tooltip>\n                    <lg-unit-switcher formControlName=\"unit\">\n                    </lg-unit-switcher>\n                  </lg-gap-row>\n                </ng-template>\n              </lg-number-input>\n            </lg-control>\n          </lg-gap-row>\n\n          <lg-control lgWidth=\"40%\">\n            <lg-number-input #priceInput\n                             [placeholder]=\"'product.form.price.placeholder'|translate:{currency:'EUR'}\"\n                             formControlName=\"price\"\n                             lgParseMath>\n              <ng-template lgExtraTpl place=\"after\">\n                <span>{{ userSettings()['currency']|currencySymbol }}</span>\n              </ng-template>\n            </lg-number-input>\n          </lg-control>\n        </lg-gap-row>\n      </lg-gap-column>\n    </lg-card>\n\n    <lg-gap-row [equal]=\"true\" [mobileMode]=\"true\" [top]=\"true\" style=\"--control-bg: #ffffff\">\n      <lg-gap-column>\n        <lg-control>\n          <lg-autocomplete #sourceInput\n                           (onSelected)=\"sourceChips.clearSelected()\"\n                           [noLoad]=\"true\"\n                           [placeholder]=\"'product.form.source.placeholder'|translate\"\n                           [resource]=\"'sources'\"\n                           appendTo=\"body\"\n                           formControlName=\"source\"></lg-autocomplete>\n        </lg-control>\n\n        <div [hidden]=\"!topSources().length\">\n          <lg-chips-list #sourceChips [control]=\"sourceInput\" [items]=\"topSources()\"></lg-chips-list>\n        </div>\n      </lg-gap-column>\n\n      <lg-gap-column>\n        <lg-control>\n          <lg-multiselect #categorySelect\n                          [placeholder]=\"'product.form.category_id.placeholder'|translate\"\n                          [resource]=\"'categories'\"\n                          appendTo=\"body\"\n                          formControlName=\"category_id\"></lg-multiselect>\n        </lg-control>\n\n        @if (topCategories().length) {\n          <lg-chips-list [control]=\"categorySelect\" [items]=\"topCategories()\"></lg-chips-list>\n        }\n      </lg-gap-column>\n    </lg-gap-row>\n  </lg-gap-column>\n</form>\n", "import {AfterViewInit, Component, computed, inject, OnInit, signal, viewChild} from '@angular/core';\n\nimport {TitleComponent} from '../../../../shared/view/ui/layout/title/title.component';\nimport {AddProductFormComponent} from './add-product-form.component';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {GapRowComponent} from '../../../../shared/view/ui/layout/gap-row.component';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {DraftForm} from '../../../../shared/service/services/draft-forms.service';\nimport {ProductsRepository} from '../../service/products.repository';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {combineLatest, debounceTime, take} from 'rxjs';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {ShrinkDirective} from '../../../../shared/view/directives/shrink.directive';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {CurrencyPipe} from '@angular/common';\nimport {Product} from '../../service/Product';\nimport {ProductDTO} from '../../service/Product.scheme';\nimport {ContainerComponent} from '../../../../shared/view/ui/layout/container/container.component';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {GapColumnComponent} from '../../../../shared/view/ui/layout/gap-column.component';\nimport {UserCurrencyPipe} from '../../../../shared/view/pipes/userCurrency.pipe';\nimport {\n  InlineSeparatedGroupComponent,\n  InlineSeparatedGroupDirective\n} from '../../../../shared/view/ui/inline-separated-group.component';\nimport {ROUTER_MANAGER} from '../../../../shared/service/providers/router-manager.provider';\n\n@Component({\n  selector: 'app-add-recipe',\n  standalone: true,\n  imports: [\n    ContainerComponent,\n    TitleComponent,\n    AddProductFormComponent,\n    GapRowComponent,\n    FadeInComponent,\n    ButtonComponent,\n    ShrinkDirective,\n    TimeAgoPipe,\n    TranslatePipe,\n    GapColumnComponent,\n    UserCurrencyPipe,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective\n  ],\n  template: `\n      <lg-fade-in>\n          <lg-container>\n              <lg-gap-column size=\"medium\">\n                  <lg-gap-row [center]=\"true\" [mobileMode]=\"true\">\n                      @if ((product()?.uuid && !draftRef()) || (draftRef() && draftByExistingProduct())) {\n                          <lg-title>\n                              {{ product()?.name }}\n                          </lg-title>\n                      } @else {\n                          <lg-title>\n                              {{ 'product.form.title'|translate }}\n                          </lg-title>\n                      }\n\n                      @if (product()?.pricePerUnit) {\n                          ({{ product()?.perUnitLabel }} {{ product()?.pricePerUnit | userCurrency:'1.0-5' }})\n                      }\n                  </lg-gap-row>\n\n                  <lg-inline-separated-group>\n                      @if (draftRef() && formComponent()?.form?.dirty) {\n                          <ng-template lgInlineSeparatedGroup>\n                              <span>{{ 'saved-draft-label'|translate }}</span>\n                          </ng-template>\n                      }\n\n                      <ng-template lgInlineSeparatedGroup>\n                          @if (isDraftRoute()) {\n                              <lg-button lgShrink [style]=\"'danger'\"\n                                         [flat]=\"true\"\n                                         (click)=\"onRemoveDraft()\">\n                                  {{ 'product.form.delete-draft-btn'|translate }}\n                              </lg-button>\n                          } @else if (product()?.uuid) {\n                              <lg-button lgShrink [style]=\"'danger'\"\n                                         [flat]=\"true\"\n                                         (click)=\"onDeleteProduct()\">\n                                  {{ 'product.form.delete-btn'|translate }}\n                              </lg-button>\n                          }\n                      </ng-template>\n                  </lg-inline-separated-group>\n\n                  @if (product()?.updatedAt) {\n                      <small class=\"text-muted text-cursive\">\n                          {{ 'edited-at-label'|translate }} {{ product()?.updatedAt | timeAgo }}\n                      </small>\n                  }\n\n              </lg-gap-column>\n\n              <lg-add-product-form [product]=\"product()\"></lg-add-product-form>\n\n              <lg-gap-row [mobileMode]=\"true\" [relaxed]=\"true\">\n                  @if ((product() && !draftRef()) || (draftRef() && draftByExistingProduct())) {\n                      <lg-button [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                                 lgShrink\n                                 (click)=\"onEditProduct()\">\n                          @if (formComponent()?.form?.dirty || draftRef()) {\n                              {{ 'product.form.save-btn.edit.active'|translate }}\n                          } @else {\n                              {{ 'product.form.save-btn.edit.disabled'|translate }}\n                          }\n                      </lg-button>\n                  } @else {\n                      <lg-button lgShrink\n                                 [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                                 (click)=\"onAddProduct()\">\n                          @if (formComponent()?.form?.dirty || draftRef()) {\n                              {{ 'product.form.save-btn.add.active'|translate }}\n                          } @else {\n                              {{ 'product.form.save-btn.add.disabled'|translate }}\n                          }\n                      </lg-button>\n                  }\n\n              </lg-gap-row>\n          </lg-container>\n      </lg-fade-in>\n  `,\n  styles: [\n    `\n    `\n  ],\n  providers: [\n    CurrencyPipe,\n  ]\n})\nexport class AddProductComponent\n  implements OnInit, AfterViewInit {\n  constructor(\n    public _router: Router,\n    private _aRoute: ActivatedRoute,\n    private _productsRepository: ProductsRepository,\n    private _notificationsService: NotificationsService,\n  ) {\n  }\n\n  draftOrProductUUID = signal<string | undefined>(undefined);\n  product = signal<Product | null>(null);\n  formComponent = viewChild<AddProductFormComponent | null>(AddProductFormComponent);\n  draftRef = signal<DraftForm<ProductDTO> | null>(null);\n  draftByExistingProduct = computed(() => {\n    return this.draftRef()!.meta?.['uuid'];\n  });\n  isDraftRoute = signal(false);\n  private _routerManager = inject(ROUTER_MANAGER);\n\n  ngOnDestroy() {\n  }\n\n  ngOnInit() {\n    combineLatest([\n      this._aRoute.params,\n      this._aRoute.data,\n    ]).pipe(take(1)).subscribe(([params, data]) => {\n      this.draftOrProductUUID.set(params['uuid']);\n      if (data['draft']) {\n        this.draftRef.set(data['draft']);\n        this.product.set(Product.fromRaw(data['draft'].data));\n      } else if (this.draftOrProductUUID()) {\n        this._loadProduct(this.draftOrProductUUID());\n      } else {\n        this.product.set(Product.empty());\n      }\n      this.isDraftRoute.set(!!data['draftRoute']);\n    });\n  }\n\n  ngAfterViewInit() {\n\n    this.formComponent()?.form.valueChanges.pipe(\n      debounceTime(500),\n    ).subscribe((value) => {\n      if (!this.formComponent()!.form.dirty || !this.product()) {\n        return\n      }\n\n      if (this.draftRef()?.uuid) {\n        this._productsRepository.updateDraftProduct(\n          this.draftRef()!.uuid,\n          this.product()!,\n          this.draftRef()!.meta?.['uuid']\n        );\n      } else if (this.product()) {\n        this.draftRef.set(this._productsRepository.saveDraftProduct(\n          this.product()!,\n          this.draftOrProductUUID() ?? ''));\n\n        if (!this.isDraftRoute()) {\n          this._routerManager.replace(['products/draft/' + this.draftRef()!.uuid]);\n        }\n      }\n    });\n  }\n\n  onAddProduct() {\n    if (!this.formComponent()?.validateForm()\n      || !this.product()) {\n      return;\n    }\n    this._addProduct(this.product()!);\n  }\n\n  onEditProduct() {\n    if (!this.formComponent()?.validateForm()\n      || !this.product()) {\n      return;\n    }\n    this._editProduct(this.product()!);\n  }\n\n  onRemoveDraft() {\n    this._removeDraft();\n    this._routerManager.navigate(['products']);\n  }\n\n  onDeleteProduct() {\n    if (!this.product()?.uuid) {\n      return;\n    }\n    this._productsRepository.deleteProduct(this.product()!.uuid!).then(() => {\n      this._notificationsService.success('Product deleted');\n      this._routerManager.navigate(['products']);\n    });\n  }\n\n  private _addProduct(product: Product) {\n    this._productsRepository.addOne(product).then((newUUID) => {\n\n      this.formComponent()?.resetForm();\n      this._notificationsService.success('Product added');\n      this.product.set(null);\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.navigateWithReset(['products/edit/' + newUUID]);\n    });\n  }\n\n  private _editProduct(product: Product) {\n    if (!this.draftOrProductUUID()) {\n      return;\n    }\n    let productUUID = this.draftRef()?.meta?.['uuid'] ?? this.draftOrProductUUID();\n    this._productsRepository.updateOne(productUUID as string, product).then(() => {\n      this.formComponent()?.resetForm(product);\n      this._notificationsService.success('Product edited');\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.navigateWithReset(['products', 'edit', productUUID]);\n    });\n  }\n\n  private _removeDraft() {\n    if (!this.draftRef()) {\n      return;\n    }\n    this._productsRepository.removeDraftProduct(this.draftRef()!.uuid)\n    this.draftRef.set(null);\n  }\n\n  private _loadProduct(uuid?: string) {\n    if (!uuid) {\n      return;\n    }\n    this._productsRepository.getOne(uuid, true).then(product => {\n      if (!product) {\n        return;\n      }\n      this.product.set(product);\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": ["_c1", "_c2"]
}
