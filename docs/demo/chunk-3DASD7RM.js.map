{
  "version": 3,
  "sources": ["src/app/shared/view/ui/card/table-card.component.ts", "src/app/features/recipes/view/calculate/calculate-recipe.component.ts", "src/app/features/recipes/view/calculate/calculate-recipe.component.html"],
  "sourcesContent": ["import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CardComponent} from './card.component';\n\n@Component({\n  selector: 'lg-table-card',\n  standalone: true,\n  imports: [\n    CardComponent,\n  ],\n  template: `\n      <lg-card [flat]=\"true\">\n          <div class=\"table\">\n              <div class=\"table__scroll\">\n                  <ng-content></ng-content>\n              </div>\n          </div>\n      </lg-card>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        width: 100%;\n      }\n\n      .table__scroll {\n        overflow-x: auto;\n      }\n\n      table {\n        width: 100%;\n        border-collapse: collapse;\n        --border-color: #efefef;\n      }\n\n      table thead tr {\n        border-bottom: 1px solid var(--border-color);\n      }\n\n      table thead th {\n        text-align: left;\n        padding: 16px 24px;\n        opacity: 0.4;\n        font-size: 0.8em;\n      }\n\n      table tbody tr {\n        border-bottom: 1px solid var(--border-color);\n      }\n\n      table tbody tr:last-child {\n        border-bottom: none;\n      }\n\n      td {\n        padding: 16px 24px;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TableCardComponent  {\n  constructor() {\n  }\n\n}\n", "import {\n  Component,\n  computed,\n  inject,\n  Injector,\n  model,\n  OnInit,\n  Provider,\n  signal,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ActivatedRoute, Router, RouterLink} from '@angular/router';\nimport {ContainerComponent} from '../../../../shared/view/ui/layout/container/container.component';\nimport {TitleComponent} from '../../../../shared/view/ui/layout/title/title.component';\nimport {CalculateRecipeService, Calculation} from '../../service/calulate-recipe.service';\nimport {TableCardComponent} from '../../../../shared/view/ui/card/table-card.component';\nimport {CurrencyPipe, DecimalPipe, NgClass, NgTemplateOutlet} from '@angular/common';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {GapRowComponent} from '../../../../shared/view/ui/layout/gap-row.component';\n\nimport {FormControl, FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {ChartData, ChartEvent, ChartOptions, ChartType} from 'chart.js';\n\n\nimport {GapColumnComponent} from '../../../../shared/view/ui/layout/gap-column.component';\nimport {FormTemplateService} from '../../../../shared/service/services/form-templates.service';\n\n\nimport {takeUntilDestroyed, toSignal} from '@angular/core/rxjs-interop';\nimport {injectParams} from '../../../../shared/helpers/route.helpers';\n\nimport {SelectResourcesService} from '../../../../shared/service/services/select-resources.service';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {BaseChartDirective} from 'ng2-charts';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {WidthDirective} from '../../../../shared/view/directives/width.directive';\n\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {randomRGB} from '../../../../shared/helpers/color.helper';\nimport {Ingredient} from '../../service/models/Ingredient';\nimport {UserCurrencyPipe} from '../../../../shared/view/pipes/userCurrency.pipe';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {InputComponent} from '../../../../shared/view/ui/form/input.component';\nimport {UnitGroupItem, UnitSwitcherComponent} from '../../../../shared/view/ui/unit-switcher.component';\nimport {ParseMathDirective} from '../../../../shared/view/directives/parse-math.directive';\nimport {debounceTime} from 'rxjs';\nimport {NotificationsService} from '../../../../shared/service/services';\nimport {errorHandler} from '../../../../shared/helpers';\nimport {ControlExtraTemplateDirective} from '../../../../shared/view/ui/form/control-extra-template.directive';\nimport {SETTINGS} from '../../../settings/service/providers/settings.token';\nimport {CurrencySymbolPipe} from '../../../../shared/view/pipes/currency-symbol.pipe';\nimport {NumberInputComponent} from '../../../../shared/view/ui/form/number-input.component';\nimport {difference} from 'lodash';\n\n@Component({\n  selector: 'lg-calculate-recipe',\n  standalone: true,\n  imports: [\n    ContainerComponent,\n    TitleComponent,\n    TableCardComponent,\n    NgClass,\n    ButtonComponent,\n    GapRowComponent,\n    DecimalPipe,\n    FormsModule,\n    RouterLink,\n    GapColumnComponent,\n    NgTemplateOutlet,\n    FadeInComponent,\n    BaseChartDirective,\n    CardComponent,\n    WidthDirective,\n    ExpandDirective,\n    UserCurrencyPipe,\n    TranslatePipe,\n    InputComponent,\n    ReactiveFormsModule,\n    UnitSwitcherComponent,\n    ParseMathDirective,\n    ControlExtraTemplateDirective,\n    CurrencySymbolPipe,\n    NumberInputComponent,\n  ],\n  templateUrl: './calculate-recipe.component.html',\n  styles: [`\n    lg-number-input .lg-number-input {\n      width: 100px;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    SelectResourcesService as Provider,\n    CurrencyPipe as Provider,\n  ]\n})\nexport class CalculateRecipeComponent\n  implements OnInit {\n  constructor(\n    private _aRoute: ActivatedRoute,\n    private _calculateRecipeService: CalculateRecipeService,\n    private _formTemplateService: FormTemplateService,\n    private _injector: Injector,\n    private _router: Router,\n    private _notificationService: NotificationsService,\n  ) {\n    this._aRoute.data.pipe(\n      takeUntilDestroyed(),\n    ).subscribe((data) => {\n      this.result.set(data['result']);\n\n      this.recipePriceAdditionsForm.patchValue({\n        action: this.result()?.calculation?.perUnitPriceModifier?.action || 'add',\n        value: this.result()?.calculation?.perUnitPriceModifier?.value || 0,\n        unit: this.result()?.calculation?.perUnitPriceModifier?.unit || 'currency',\n      } as any);\n    });\n  }\n\n  userSettings = inject(SETTINGS);\n  additionalPriceUnit: UnitGroupItem[] = [\n    {\n      label: '$',\n      value: 'currency',\n      style: 'secondary',\n    },\n    {\n      label: '%',\n      value: 'percent',\n      style: 'secondary',\n    },\n  ];\n  additionalPriceAction: UnitGroupItem[] = [\n    {\n      label: 'Add',\n      value: 'add',\n      style: 'secondary',\n    },\n    {\n      label: 'Round to',\n      value: 'round',\n      style: 'secondary',\n    },\n  ];\n  public doughnutChartType: ChartType = 'pie';\n  uuid = injectParams<string>('uuid');\n  result = signal<Calculation | null>(null);\n  doughnutChartData = computed(() => {\n    const result = this.result();\n\n    const {\n      prices,\n      weight,\n      labels,\n      colors,\n    } = result?.calculation?.ingredients?.reduce((acc, item: Ingredient) => {\n      acc.prices.push(item.totalPrice);\n      acc.weight.push(item.totalWeightGram);\n      acc.labels.push(item.generalName);\n      acc.colors.push(item.product_id?.ownColor ?? item.recipe_id?.ownColor ?? randomRGB());\n      return acc;\n    }, {\n      prices: [],\n      weight: [],\n      labels: [],\n      colors: [],\n    } as {\n      prices: number[],\n      weight: number[],\n      labels: string[],\n      colors: string[],\n    }) || {\n      prices: [],\n      weight: [],\n      labels: [],\n      colors: [],\n    };\n\n    return {\n      prices: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Cost',\n            data: prices,\n            backgroundColor: colors,\n            // hoverBackgroundColor: colors,\n            borderWidth: 0,\n          }\n        ],\n      } as ChartData,\n      weight: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Amount',\n            data: weight,\n            backgroundColor: colors,\n            // hoverBackgroundColor: colors,\n            borderWidth: 0,\n          }\n        ],\n      } as ChartData,\n      ingredients: result?.calculation?.ingredients || [],\n    }\n  });\n  public doughnutChartOptions: ChartOptions = {\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    onClick: (event, elements, chart) => {\n\n    }\n  };\n  @ViewChild('priceChart', {read: BaseChartDirective}) chartPrices: BaseChartDirective | undefined;\n  @ViewChild('weightChart', {read: BaseChartDirective}) chartWeight: BaseChartDirective | undefined;\n  recalculateTotalsModel = model(0);\n  notInGrams = computed(() => {\n    return this.result()?.calculation?.outcomeUnit && this.result()?.calculation?.outcomeUnit !== 'gram'\n  });\n  recipePriceAdditionsForm = new FormGroup({\n    action: new FormControl<'add' | 'round'>('add'),\n    value: new FormControl<number | string>(0),\n    unit: new FormControl<'currency' | 'percent'>('currency'),\n  });\n  values = toSignal(this.recipePriceAdditionsForm.valueChanges);\n  roundActionSelected = computed(() => {\n    return this.values()?.action === 'round';\n  });\n  showPriceAdditionUnits = computed(() => {\n    const action = this.result()?.calculation?.perUnitPriceModifier?.action;\n    return action === 'add' || !action;\n  });\n\n  totalScaleFactor = computed(() => {\n    if (!this.recalculateTotalsModel()) return 1;\n    return this.recalculateTotalsModel() / (this.result()?.calculation?.outcomeAmount || 1);\n  })\n\n  totalPrice = computed(() => {\n    return (this.result()?.calculation?.totalPrice || 0) * this.totalScaleFactor();\n  });\n\n  totalPriceDifference = computed(() => {\n    return (this.result()?.calculation?.totalPriceDifference || 0) * this.totalScaleFactor();\n  });\n\n  totalPriceWithAdditions = computed(() => {\n    return (this.result()?.calculation?.totalPriceWithAdditions || 0) * this.totalScaleFactor();\n  });\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    (window as any)['chartPrices'] = this.chartPrices;\n    (window as any)['chartWeight'] = this.chartWeight;\n\n    this.recipePriceAdditionsForm.valueChanges\n      .pipe(\n        debounceTime(300),\n      )\n      .subscribe((value) => {\n        this.updatePriceAdditions(value);\n      });\n  }\n\n  onChartHover(sourceChart: 'price' | 'weight', event: ChartEvent, activeElements: any[]) {\n    if (!activeElements?.length) return;\n\n    const targetChart = sourceChart === 'price' ? this.chartWeight : this.chartPrices;\n    const index = activeElements[0].index;\n    targetChart?.chart?.update();\n  }\n\n  async updatePriceAdditions(\n    formValue: any,\n  ) {\n    try {\n      await this._calculateRecipeService.updateRecipe({\n        perUnitPriceModifier: {\n          action: formValue.action,\n          value: parseFloat(formValue.value) || 0,\n          unit: formValue.unit,\n        }\n      } as any);\n\n      const result = await this._calculateRecipeService.calculateRecipe(this.uuid());\n      this.result.set(result);\n    } catch (error) {\n      this._notificationService.error(errorHandler(error));\n    }\n  }\n\n  protected readonly difference = difference;\n}\n", "<lg-fade-in>\n  <lg-container>\n    <lg-gap-column>\n      <lg-gap-row [center]=\"true\" [mobileMode]=\"true\">\n        <lg-title>\n          {{ result()?.calculation?.recipeName }} {{ 'recipe.calculation.title.after-text'  | translate }}\n        </lg-title>\n\n        <lg-button [flat]=\"true\"\n                   [link]=\"'/recipes/edit/' + result()?.calculation?.recipeUuid\"\n                   [size]=\"'small'\"\n                   [style]=\"'primary'\">\n          {{ 'edit-label' | translate }}\n        </lg-button>\n      </lg-gap-row>\n\n      @if (result()?.calculation?.totalPrice) {\n        <lg-gap-row [center]=\"true\" [mobileMode]=\"true\" style=\"max-width: 1200px\" lgExpand>\n          <lg-gap-column [position]=\"'stretch'\">\n\n            <lg-card size=\"small\">\n              <lg-gap-row [size]=\"'small'\" [relaxed]=\"true\">\n                <div>{{ 'recipe.calculation.outcome.label' | translate }}</div>\n\n                <b>\n                  {{ result()?.calculation?.outcomeAmount | number: '1.0-2' }}\n                  {{ result()?.calculation?.outcomeUnit }}\n                </b>\n              </lg-gap-row>\n\n            </lg-card>\n\n\n            <lg-gap-column [position]=\"'stretch'\" size=\"small\">\n              <lg-card size=\"small\">\n                <lg-gap-row [size]=\"'small'\" [relaxed]=\"true\">\n                  <div>\n                    {{ 'recipe.calculation.one-unit.label' | translate }} <b>\n                    {{ result()?.calculation?.outcomeUnit }}\n                  </b>\n                  </div>\n\n                  <b>\n                    @if (notInGrams()) {\n                      <ng-container *ngTemplateOutlet=\"totalAmount\"></ng-container>\n                    } @else {\n                      {{ result()?.calculation?.pricePerUnit | userCurrency:'1.2-5' }}\n                    }\n                  </b>\n                </lg-gap-row>\n              </lg-card>\n\n\n              <lg-gap-row [formGroup]=\"recipePriceAdditionsForm\"\n                          [size]=\"'small'\"\n                          [relaxed]=\"true\" style=\"--control-bg: #fff;padding: 0 16px\">\n                <lg-number-input lgParseMath\n                                 placeholder=\"extra price\"\n                                 formControlName=\"value\">\n                  <ng-template lgExtraTpl place=\"before\">\n                    <lg-unit-switcher formControlName=\"action\"\n                                      [items]=\"additionalPriceAction\">\n                    </lg-unit-switcher>\n                  </ng-template>\n\n                  @if (showPriceAdditionUnits()) {\n                    <ng-template lgExtraTpl place=\"after\">\n                      <lg-unit-switcher formControlName=\"unit\"\n                                        [items]=\"additionalPriceUnit\">\n                      </lg-unit-switcher>\n                    </ng-template>\n                  }\n\n                  @if (roundActionSelected()) {\n                    <ng-template lgExtraTpl place=\"after\">\n                      <b>{{ userSettings()['currency']|currencySymbol }}\n                        /\n                        {{ result()?.calculation?.outcomeUnit }}\n                      </b>\n                    </ng-template>\n                  }\n                </lg-number-input>\n              </lg-gap-row>\n            </lg-gap-column>\n\n            <lg-gap-column [position]=\"'stretch'\" size=\"small\">\n              <lg-card size=\"small\">\n                <lg-gap-row [size]=\"'small'\" [relaxed]=\"true\">\n                  <div>{{ 'recipe.calculation.total-price.label' | translate }}</div>\n\n                  <b>\n                    {{ totalPrice() | userCurrency: '1.2-2' }}\n\n                    @if (totalPriceDifference()) {\n                      @let diff = totalPriceDifference();\n                      >\n                      <span class=\"text-underlined\">\n                      {{ totalPriceWithAdditions() |  userCurrency: '1.2-2' }}\n                    </span>\n\n                     <span [ngClass]=\"diff > 0 ? 'text-success' : 'text-danger'\">\n                      ({{diff > 0 ? '+' : ''}} {{ diff |  userCurrency: '1.2-2' }})\n                    </span>\n                    }\n                  </b>\n                </lg-gap-row>\n              </lg-card>\n\n              <lg-gap-row [size]=\"'small'\"\n                          [relaxed]=\"true\" style=\"--control-bg: #fff;padding: 0 16px\">\n                <lg-number-input lgParseMath\n                                 placeholder=\"amount\"\n                                 [(ngModel)]=\"recalculateTotalsModel\">\n                  <ng-template lgExtraTpl place=\"before\">\n                    Recalculate for\n                  </ng-template>\n\n                  @if (roundActionSelected()) {\n                    <ng-template lgExtraTpl place=\"after\">\n                      <b>\n                        {{ result()?.calculation?.outcomeUnit }}\n                      </b>\n                    </ng-template>\n                  }\n                </lg-number-input>\n              </lg-gap-row>\n            </lg-gap-column>\n          </lg-gap-column>\n\n          <lg-card lgWidth=\"270px\" size=\"small\">\n            <lg-gap-column [size]=\"'small'\">\n              <lg-title [level]=\"5\">\n                <div>{{ 'recipe.calculation.price-chart' | translate }}</div>\n              </lg-title>\n\n              <canvas [data]=\"doughnutChartData().prices\"\n                      [options]=\"doughnutChartOptions\"\n                      [type]=\"doughnutChartType\"\n                      (chartHover)=\"onChartHover('price', $event.event, $event.active)\"\n                      #priceChart\n                      baseChart>\n              </canvas>\n            </lg-gap-column>\n          </lg-card>\n\n          <lg-card lgWidth=\"270px\" size=\"small\">\n            <lg-gap-column [size]=\"'small'\">\n              <lg-title [level]=\"5\">\n                <div>{{ 'recipe.calculation.weight-chart' | translate }}</div>\n              </lg-title>\n\n              <canvas [data]=\"doughnutChartData().weight\"\n                      [options]=\"doughnutChartOptions\"\n                      (chartHover)=\"onChartHover('weight', $event.event, $event.active)\"\n                      [type]=\"doughnutChartType\"\n                      #weightChart\n                      baseChart>\n              </canvas>\n            </lg-gap-column>\n          </lg-card>\n        </lg-gap-row>\n      }\n\n      <ng-template #totalAmount>\n        @if (notInGrams()) {\n          {{ result()?.calculation?.pricePerOutcomeUnit |  userCurrency: '1.2-2' }}\n\n          @if (result()?.calculation?.totalPriceDifference) {\n            @let diff = result()?.calculation?.pricePerUnitDifference ?? 0;\n            >\n            <span class=\"text-underlined\">\n              {{ result()?.calculation?.pricePerUnitModified |  userCurrency: '1.2-2' }}\n            </span>\n\n            <span [ngClass]=\"diff > 0 ? 'text-success' : 'text-danger'\">\n              ({{diff > 0 ? '+' : ''}} {{ diff |  userCurrency: '1.2-2' }})\n            </span>\n          }\n          /\n          {{ result()?.calculation?.weightForUnit |  number: '1.0-2' }} gram\n        } @else {\n          {{ result()?.calculation?.totalPrice | userCurrency: '1.2-2' }}\n        }\n      </ng-template>\n\n      <lg-table-card>\n        @if (result()) {\n          <table>\n            <colgroup>\n              <col span=\"1\" style=\"width: 1%;\">\n              <col span=\"1\" style=\"width: 20%;\">\n              <col span=\"1\" style=\"width: 5%;\">\n              <col span=\"1\" style=\"width: 3%;\">\n              <col span=\"1\" style=\"width: 5%;\">\n              <col span=\"1\" style=\"width: 7%;\">\n            </colgroup>\n            <thead>\n\n            <tr>\n              <th>#</th>\n              <th>{{ 'recipe.calculation.table.name.title' | translate }}</th>\n              <th>{{ 'recipe.calculation.table.amount.title' | translate }}</th>\n              <th>{{ 'recipe.calculation.table.unit.title' | translate }}</th>\n              <th>{{ 'recipe.calculation.table.price.title' | translate }}</th>\n              <th>{{ 'recipe.calculation.table.total.title' | translate }}</th>\n            </tr>\n            </thead>\n\n            <tbody>\n              @for (row of result()?.table;track $index;let i = $index) {\n                <tr [ngClass]=\"row.type\">\n                  <td>{{ i + 1 }}</td>\n\n                  <td>\n                    <div [ngClass]=\"'indent-' + row.indent\">\n                      @if (row.type !== 'total') {\n                        <a [routerLink]=\"[row.type === 'recipe-row' ? '/recipes/edit/' : '/products/edit/', row.uuid]\">\n                          {{ row.name }}\n                        </a>\n                      } @else {\n                        {{ row.name | translate }}\n                      }\n                    </div>\n                  </td>\n\n                  <td>{{ row.amount | number: '1.0-2' }}</td>\n\n                  <td>{{ row.unit }}</td>\n\n                  <td>{{ row.price_per_gram | userCurrency: '1.2-5' }}</td>\n\n                  <td>{{ row.total | userCurrency: '1.0-2' }}</td>\n                </tr>\n              }\n            </tbody>\n          </table>\n        } @else {\n        }\n      </lg-table-card>\n    </lg-gap-column>\n  </lg-container>\n</lg-fade-in>\n"],
  "mappings": "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",
  "names": []
}
