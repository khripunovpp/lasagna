{
  "version": 3,
  "sources": ["src/app/shared/view/documentation/documentation-tree.component.ts"],
  "sourcesContent": ["import {Component} from '@angular/core';\nimport {DocsService} from '../../service/services/docs.service';\nimport {AsyncPipe, NgTemplateOutlet} from '@angular/common';\nimport {ActivatedRoute, RouterLink, RouterOutlet} from '@angular/router';\n\n@Component({\n  selector: 'lg-documentation-tree',\n  template: `\n      <div class=\"lg-documentation-tree\">\n          @for (item of docsService.getTree() | async;track item) {\n              <!--              <div class=\"lg-documentation-tree__item\">-->\n                      <!--                  <a [routerLink]=\"['/docs', item.path]\">-->\n                      <!--                      {{ item.title }}-->\n                      <!--                  </a>-->\n                      <!--              </div>-->\n\n                      <!--              <pre>{{item|json}}</pre>-->\n\n              <ng-container [ngTemplateOutlet]=\"itemTpl\"\n                            [ngTemplateOutletContext]=\"{ $implicit: item,level:0 }\"></ng-container>\n          }\n      </div>\n\n      <ng-template #itemTpl let-item let-level=\"level\">\n          <div [style.padding-left.px]=\"level*5\">\n              @if (item.path) {\n                  <a [routerLink]=\"getPath(item.path)\">\n                      {{ nameToTitleMap[item.name] ?? item.name }}\n                  </a>\n              } @else {\n\n                  {{ nameToTitleMap[item.name] ?? item.name }}\n              }\n          </div>\n\n\n          @if (item.children) {\n              @for (child of item.children;track child) {\n                  <ng-container [ngTemplateOutlet]=\"itemTpl\"\n                                [ngTemplateOutletContext]=\"{ $implicit: child,level:level + 1 }\"></ng-container>\n              }\n          }\n      </ng-template>\n\n      <router-outlet></router-outlet>\n  `,\n  standalone: true,\n  imports: [\n    AsyncPipe,\n    RouterLink,\n    NgTemplateOutlet,\n    RouterOutlet\n],\n})\nexport class DocumentationTreeComponent {\n  constructor(\n    public docsService: DocsService,\n    private route: ActivatedRoute,\n  ) {\n  }\n\n  getPath(item: string) {\n    const segments = item.split('/');\n    const mapped = segments.map(segment => segment.replace('.md', ''));\n    return ['/docs'].concat(mapped.filter(Boolean)).join('/');\n  }\n\n  nameToTitleMap: Record<string, string> = {\n    'getting-started': 'Getting Started',\n    'intro.md': 'Introduction',\n    'install': 'Installation',\n    'requirenments.md': 'Requirements',\n  };\n}\n"],
  "mappings": "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",
  "names": []
}
