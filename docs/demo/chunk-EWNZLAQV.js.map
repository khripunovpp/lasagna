{
  "version": 3,
  "sources": ["src/app/features/recipes/service/Ingredient.scheme.ts", "src/app/features/recipes/service/Recipe.scheme.ts", "src/app/features/recipes/view/list/draft-recipes-list.component.ts", "src/app/shared/view/directives/click-outside.directive.ts", "src/app/shared/view/ui/dropdown/dropdown.component.ts", "src/app/shared/view/ui/grouping-sorting/grouping-sorting.directive.ts", "src/app/shared/view/ui/grouping-sorting/grouping-sorting.component.ts", "src/app/shared/view/ui/grouping-tails/grouping-tail.directive.ts", "src/app/shared/view/ui/selectable-section.component.ts", "src/app/shared/view/ui/grouping-tails/grouping-tails.component.ts", "src/app/features/recipes/view/list/recipes-list.component.ts"],
  "sourcesContent": ["import {z} from 'zod';\nimport {ProductScheme} from '../../products/service/Product.scheme';\nimport {RecipeScheme} from './Recipe.scheme';\n\nexport const IngredientScheme = z.object({\n  name: z.string(),\n  amount: z.number().or(z.string()),\n  uuid: z.string().optional(),\n  product_id: ProductScheme,\n  recipe_id: z.lazy(() => RecipeScheme),\n  unit: z.enum(['gram', 'portion', 'piece']),\n});\n\nexport type IngredientDTO = z.infer<typeof IngredientScheme>;\n", "import {z} from 'zod';\nimport {IngredientScheme} from './Ingredient.scheme';\nimport {UnitScheme} from './Unit.scheme';\n\nexport const RecipeScheme = z.object({\n  name: z.string(),\n  uuid: z.string().optional(),\n  description: z.string(),\n  ingredients: z.array(z.lazy<any>(() => IngredientScheme)),\n  outcome_unit: UnitScheme,\n  outcome_amount: z.number().or(z.string()),\n  taxTemplateName: z.string().optional(),\n  category_id: z.string().nullable().optional(),\n  createdAt: z.union([z.string(), z.number()]).optional(),\n  updatedAt: z.union([z.string(), z.number()]).optional(),\n  tags: z.array(z.string()).optional(),\n  color: z.string().optional(),\n  perUnitPriceModifier: z.object({\n    action: z.enum(['add', 'subtract', 'round']),\n    value: z.number().or(z.string()),\n    unit: z.enum(['currency', 'percent']),\n  }).optional(),\n});\n\n\nexport type RecipeDTO = z.infer<typeof RecipeScheme>;\n", "import {Component, HostBinding, OnInit, signal} from '@angular/core';\nimport {RecipesRepository} from '../../../../shared/service/repositories';\nimport {DraftForm, NotificationsService, SelectionZoneService} from '../../../../shared/service/services';\nimport {RecipeDTO} from '../../service/Recipe.scheme';\nimport {ProductDTO} from '../../../products/service/Product.scheme';\nimport {Stores} from '../../../../shared/service/db/const/stores';\nimport {GapRowComponent} from '../../../../shared/view/ui/layout/gap-row.component';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\n\nimport {CardListComponent} from '../../../../shared/view/ui/card/card-list.component';\nimport {CardListItemDirective} from '../../../../shared/view/ui/card/card-list-item.directive';\nimport {RouterLink} from '@angular/router';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {ExpanderComponent} from '../../../../shared/view/ui/expander.component';\nimport {InlineSeparatedGroupComponent, InlineSeparatedGroupDirective} from '../../../../shared/view/ui/inline-separated-group.component';\n\n@Component({\n  selector: 'lg-draft-recipes-list',\n  standalone: true,\n  imports: [\n    GapRowComponent,\n    ButtonComponent,\n    CardListComponent,\n    CardListItemDirective,\n    RouterLink,\n    TimeAgoPipe,\n    ExpandDirective,\n    TranslatePipe,\n    ExpanderComponent,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective\n],\n  providers: [\n    SelectionZoneService,\n  ],\n  template: `\n    @if (drafts()?.length) {\n      <lg-expander [closeLabel]=\"'drafts-close-label'|translate\"\n                   [openLabel]=\"'drafts-label'|translate:{length:drafts()?.length}\">\n        <lg-inline-separated-group>\n          <ng-template lgInlineSeparatedGroup>\n            <lg-button (click)=\"selectionZoneService.onSelection()\"\n                       [flat]=\"true\"\n                       [size]=\"'small'\"\n                       [style]=\"'success'\">\n              {{ 'select-many-label'|translate }}\n            </lg-button>\n          </ng-template>\n\n          <ng-template lgInlineSeparatedGroup>\n            <lg-button [flat]=\"true\"\n                       [size]=\"'small'\"\n                       [style]=\"'danger'\"\n                       (click)=\"deleteAllDrafts()\">\n              {{ 'delete-all-label' | translate }}\n            </lg-button>\n          </ng-template>\n\n          @if (selectionZoneService.selected(); as selected) {\n            <ng-template lgInlineSeparatedGroup>\n              <lg-button [flat]=\"true\"\n                         [disabled]=\"!selected?.size\"\n                         [size]=\"'small'\"\n                         [style]=\"'danger'\"\n                         (click)=\"deletedSelectedDrafts()\">\n                {{ 'delete-selected-label' | translate }}\n              </lg-button>\n            </ng-template>\n          }\n        </lg-inline-separated-group>\n\n        <lg-card-list [mode]=\"selectionZoneService.selectionMode()\"\n                      (onDeleteOne)=\"deleteDraft($event?.uuid)\"\n                      (onSelected)=\"selectionZoneService.putSelected($event)\"\n                      [selectAll]=\"selectionZoneService.selectAll()\"\n                      [deselectAll]=\"selectionZoneService.deselectAll()\"\n                      style=\"--card-bg: #bee5ff\">\n          @for (item of drafts(); track item.uuid) {\n            <ng-template lgCardListItem [uuid]=\"item.uuid\" type=\"draft\">\n              <lg-gap-row [center]=\"true\">\n                <a [routerLink]=\"'/recipes/draft/' + item?.uuid\" lgExpand>\n                  @if (item?.meta?.['uuid']) {\n                    {{ 'draft.list-prefix.existing'|translate }}\n                  } @else {\n                    {{ 'draft.list-prefix.new'|translate }}\n                  }\n                  {{ item?.data?.name ?? '' }}\n                </a>\n\n                <small class=\"text-muted text-cursive\">\n                  {{ 'edited-at-label'|translate }} {{ (item?.updatedAt || item?.createdAt) | timeAgo }}\n                </small>\n              </lg-gap-row>\n            </ng-template>\n          }\n        </lg-card-list>\n      </lg-expander>\n    }\n  `,\n})\n\nexport class DraftRecipesListComponent\n  implements OnInit {\n  constructor(\n    private _recipesRepository: RecipesRepository,\n    private _notificationsService: NotificationsService,\n    public selectionZoneService: SelectionZoneService,\n  ) {\n  }\n\n\n  drafts = signal<Array<DraftForm<RecipeDTO>>>([]);\n  protected readonly Stores = Stores;\n\n  @HostBinding('attr.hidden') get hidden() {\n    return this.drafts()?.length === 0 ? true : null;\n  }\n\n  ngOnInit() {\n    const draft = this._recipesRepository.getDraftRecipe();\n    if (draft) {\n      this.drafts.set(draft);\n    }\n  }\n\n  deleteAllDrafts() {\n    this._recipesRepository.removeDraftMany(this.drafts().map((item) => item.uuid)).then(() => {\n      this.drafts.set([]);\n      this._notificationsService.success('Drafts deleted');\n    })\n  }\n\n  deletedSelectedDrafts() {\n    const selected = this.selectionZoneService.selected();\n    if (!selected) return;\n    this._recipesRepository.removeDraftMany(Array.from(selected)).then(() => {\n      this.drafts.update((drafts) => {\n        return drafts.filter((item) => !selected.has(item.uuid));\n      });\n      this._notificationsService.success('Drafts deleted');\n    })\n  }\n\n  deleteDraft(\n    draftUUID?: string\n  ) {\n    if (!draftUUID) {\n      return;\n    }\n    this._recipesRepository.removeDraftRecipe(draftUUID);\n    this.drafts.update((drafts) => {\n      return drafts.filter((item) => item?.uuid !== draftUUID);\n    });\n  }\n}\n", "import {Directive, ElementRef, EventEmitter, Output} from '@angular/core';\n\n@Directive({\n  selector: '[lgClickOutside]',\n  standalone: true,\n  host: {\n    '(document:click)': 'onClick($event)',\n    '(document:touchstart)': 'onClick($event)',\n    '(document:mousedown)': 'onClick($event)',\n    '(document:mouseup)': 'onClick($event)',\n  }\n})\nexport class ClickOutsideDirective {\n  constructor(\n    public elementRef: ElementRef<HTMLElement>\n  ) {\n  }\n\n  @Output() lgClickOutside = new EventEmitter<MouseEvent | TouchEvent>();\n\n  onClick(event: MouseEvent | TouchEvent): void {\n    if (!this.elementRef.nativeElement.contains(event.target as Node)) {\n      this.lgClickOutside.emit(event);\n    }\n  }\n}\n", "import {Component, HostListener, signal} from '@angular/core';\nimport {ClickOutsideDirective} from '../../directives/click-outside.directive';\n\n@Component({\n  selector: 'lg-dropdown',\n  standalone: true,\n  template: `\n    <div class=\"lg-dropdown\"\n         (lgClickOutside)=\"closeDropdown()\"\n         [class.lg-dropdown-open]=\"display()\">\n      <div class=\"lg-dropdown-anchor\" (click)=\"toggleDropdown()\">\n        <ng-content select=\"[lgDropdownAnchor]\"></ng-content>\n      </div>\n\n      <div class=\"lg-dropdown-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  imports: [\n    ClickOutsideDirective\n  ],\n  styles: [`\n    :host {\n      display: block;\n      position: relative;\n      z-index: 2;\n    }\n\n    .lg-dropdown {\n      position: relative;\n      display: inline-block;\n    }\n\n    .lg-dropdown-content {\n      display: none;\n      position: absolute;\n      top: calc(100% + 8px);\n      background-color: #f9f9f9;\n      min-width: 160px;\n      box-shadow: 0px 8px 16px 0px rgba(0, 0, 0, 0.2);\n      z-index: 1;\n      border-radius: 16px;\n      padding: 16px;\n    }\n\n    .lg-dropdown-open .lg-dropdown-content {\n      display: block;\n    }\n\n    .lg-dropdown-item {\n      color: black;\n      padding: 12px 16px;\n      text-decoration: none;\n      display: block;\n    }\n\n    .lg-dropdown-item:hover {\n      background-color: #f1f1f1;\n    }\n  `]\n})\nexport class DropdownComponent {\n  constructor() {\n  }\n\n  display = signal(false);\n\n  @HostListener('click', ['$event']) onClick(event: MouseEvent) {\n    event.stopPropagation();\n  }\n\n  toggleDropdown() {\n    this.display.set(!this.display());\n  }\n\n  closeDropdown() {\n    this.display.set(false);\n  }\n}\n", "import {Component, Directive, effect, EventEmitter, Input, Output, signal, TemplateRef} from '@angular/core';\nimport {GapRowComponent} from '../layout/gap-row.component';\nimport {ButtonComponent} from '../layout/button.component';\nimport {DropdownComponent} from '../dropdown/dropdown.component';\nimport {GapColumnComponent} from '../layout/gap-column.component';\n\n@Directive({\n  selector: '[lgGroupingSortingContainer]',\n  standalone: true,\n})\nexport class GroupingSortingContainerComponent {\n  constructor(\n    public templateRef: TemplateRef<any>,\n  ) {\n  }\n\n}\n", "import {Component, ContentChild, effect, EventEmitter, inject, Output, signal} from '@angular/core';\nimport {GapRowComponent} from '../layout/gap-row.component';\nimport {ButtonComponent} from '../layout/button.component';\nimport {DropdownComponent} from '../dropdown/dropdown.component';\nimport {GapColumnComponent} from '../layout/gap-column.component';\nimport {GroupingSortingContainerComponent} from './grouping-sorting.directive';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {injectQueryParams} from '../../../helpers/route.helpers';\n\n@Component({\n  selector: 'lg-grouping-sorting',\n  standalone: true,\n  imports: [\n    GapRowComponent,\n    ButtonComponent,\n    DropdownComponent,\n    GapColumnComponent\n  ],\n  template: `\n    <lg-gap-row>\n      <lg-dropdown>\n        <lg-button lgDropdownAnchor [size]=\"'small'\">\n          Group by: {{ sorting().group }}\n        </lg-button>\n\n        <lg-gap-column [size]=\"'small'\">\n          <lg-button [size]=\"'small'\"\n                     (click)=\"onSortChange({group: 'category'})\"\n                     [style]=\"'warning'\"\n                     [flat]=\"true\">\n            Category\n          </lg-button>\n\n          <lg-button [size]=\"'small'\"\n                     (click)=\"onSortChange({group: 'tag'})\"\n                     [style]=\"'warning'\"\n                     [flat]=\"true\">\n            Tag\n          </lg-button>\n\n          <lg-button [size]=\"'small'\"\n                     [style]=\"'warning'\"\n                     (click)=\"onSortChange({group: 'createdAt'})\"\n                     [flat]=\"true\">\n            Date\n          </lg-button>\n\n          <lg-button [size]=\"'small'\"\n                     [style]=\"'warning'\"\n                     (click)=\"onSortChange({group: 'alphabetical'})\"\n                     [flat]=\"true\">\n            Alphabetical\n          </lg-button>\n        </lg-gap-column>\n      </lg-dropdown>\n\n      <lg-dropdown>\n        <lg-button [size]=\"'small'\" lgDropdownAnchor>\n          Sort by: {{ sorting().field }}\n        </lg-button>\n\n        <lg-gap-column [size]=\"'small'\">\n          <lg-button [size]=\"'small'\"\n                     (click)=\"onSortChange({field: 'name'})\"\n                     [style]=\"'warning'\"\n                     [flat]=\"true\">\n            Name\n          </lg-button>\n\n          <lg-button [size]=\"'small'\"\n                     (click)=\"onSortChange({field: 'createdAt'})\"\n                     [style]=\"'warning'\"\n                     [flat]=\"true\">\n            Date\n          </lg-button>\n        </lg-gap-column>\n      </lg-dropdown>\n\n      <lg-dropdown>\n        <lg-button [size]=\"'small'\" lgDropdownAnchor>\n          Sort direction: {{ sorting().direction }}\n        </lg-button>\n\n        <lg-gap-column [size]=\"'small'\">\n          <lg-button [size]=\"'small'\"\n                     (click)=\"onSortChange({direction: 'asc'})\"\n                     [style]=\"'warning'\"\n                     [flat]=\"true\">\n            Ascending\n          </lg-button>\n\n          <lg-button [size]=\"'small'\"\n                     (click)=\"onSortChange({direction: 'desc'})\"\n                     [style]=\"'warning'\"\n                     [flat]=\"true\">\n            Descending\n          </lg-button>\n        </lg-gap-column>\n      </lg-dropdown>\n    </lg-gap-row>\n  `\n})\nexport class GroupingSortingComponent {\n  constructor() {\n  }\n\n  router = inject(Router);\n  aRouter = inject(ActivatedRoute);\n  @ContentChild(GroupingSortingContainerComponent) context!: GroupingSortingContainerComponent;\n\n  @Output() sortChange = new EventEmitter<{ field: string, direction: 'asc' | 'desc' | string }>();\n  @Output() groupChange = new EventEmitter<string>();\n\n  groupingParam = injectQueryParams('groupBy');\n  sortDirection = injectQueryParams<string | null>('sortDirection');\n  sortField = injectQueryParams('sortField');\n\n  defaultDirection = 'asc';\n  sorting = signal<{\n    field: string,\n    direction: 'asc' | 'desc' | string,\n    group?: string\n  }>({field: 'name', direction: this.defaultDirection, group: 'category'});\n  sortingEffect = effect(() => {\n    const sort = this.sorting();\n    this.sortChange.emit(sort);\n  });\n\n  ngOnInit() {\n    const params = this.aRouter.snapshot.queryParams;\n    const groupBy = this.groupingParam();\n    const sortDirection = this.sortDirection();\n    const sortField = this.sortField();\n\n    this.sorting.set({\n      field: sortField?.toString() || 'name',\n      direction: sortDirection\n        ? sortDirection === 'asc' ? 'asc' : 'desc'\n        : this.defaultDirection,\n      group: groupBy?.toString() || 'category'\n    });\n  }\n\n  onSortChange(\n    props: {\n      field?: string\n      direction?: 'asc' | 'desc'\n      group?: string\n    }\n  ) {\n    this.sorting.set({\n      field: props.field || this.sorting().field,\n      direction: props.direction || this.sorting().direction,\n      group: props.group || this.sorting().group\n    });\n    this.sortChange.emit(this.sorting());\n\n    this.router.navigate([], {\n      queryParams: {\n        sortField: props.field || this.sorting().field,\n        sortDirection: props.direction || this.sorting().direction,\n        groupBy: props.group || this.sorting().group\n      },\n      relativeTo: this.aRouter\n    }).then(() => {\n      // update page\n      window.location.reload();\n    })\n  }\n}\n", "import {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[lgGroupingTail]',\n  standalone: true\n})\nexport class GroupingTailDirective {\n  constructor(\n    public templateRef: TemplateRef<any>,\n  ) {\n  }\n}\n", "import {Component, ContentChildren, effect, input, Optional, output, QueryList, SkipSelf} from '@angular/core';\nimport {CardListItemDirective} from './card/card-list-item.directive';\nimport {FormControl, ReactiveFormsModule} from '@angular/forms';\nimport {CheckboxComponent} from './form/chckbox.component';\nimport {ButtonComponent} from './layout/button.component';\nimport {MatIcon} from '@angular/material/icon';\nimport {SelectionZoneService} from '../../service/services';\nimport {generateUuid} from '../../helpers/attribute.helper';\n\n@Component({\n  selector: 'lg-selectable-section',\n  standalone: true,\n  template: `\n    <section class=\"lg-selectable-section\">\n      @if (selectionZoneService.selectionMode() === 'selection') {\n        <lg-checkbox [size]=\"'medium'\"\n                     [formControl]=\"selected\"\n                     [value]=\"key()\"\n                     (onCheckboxChanged)=\"onChanges($event)\"></lg-checkbox>\n      }\n      <div class=\"lg-selectable-section__inner\">\n        <ng-content></ng-content>\n      </div>\n      @if (selectionZoneService.selectionMode() === 'selection') {\n        <lg-button [style]=\"'danger'\"\n                   [size]=\"'tiny'\"\n                   [icon]=\"true\"\n                   (click)=\"selectionZoneService.putDelete(key())\">\n          <mat-icon aria-hidden=\"false\"\n                    fontIcon=\"close\"></mat-icon>\n        </lg-button>\n      }\n    </section>\n  `,\n  styles: [\n    `\n\n      .lg-card-list {\n      }\n\n      .lg-checkbox {\n        --control-bg: #abc2ff;\n        --control-bg-selected: #abc2ff;\n      }\n\n      .lg-selectable-section {\n        display: flex;\n        gap: 8px;\n        align-items: center;\n      }\n\n    `\n  ],\n  imports: [\n    ReactiveFormsModule,\n    CheckboxComponent,\n    ButtonComponent,\n    MatIcon\n  ]\n})\nexport class SelectableSectionComponent {\n  constructor(\n    @Optional() @SkipSelf() public selectionZoneService: SelectionZoneService\n  ) {\n  }\n\n  key = input<string>(generateUuid());\n  @ContentChildren(CardListItemDirective) items!: QueryList<CardListItemDirective>;\n  selected = new FormControl()\n\n  effectMode = effect(() => {\n    if (this.selectionZoneService.selectionMode()) {\n      this.selected.reset();\n    }\n  });\n\n  effectSelectAll = effect(() => {\n    if (this.selectionZoneService.selectAll()) {\n      this.selected.setValue(true);\n    } else if (this.selectionZoneService.deselectAll()) {\n      this.selected.setValue(false);\n    }\n  })\n\n  onChanges(\n    event: boolean | string | null | undefined\n  ) {\n    this.selectionZoneService.putSelected([!!event, this.key()]);\n  }\n}\n", "import {Component, ContentChild, EventEmitter, Input, Optional, Output} from '@angular/core';\nimport {SortResult} from '../../../service/types/sorting.types';\nimport {TitleComponent} from '../layout/title/title.component';\nimport {GroupingTailDirective} from './grouping-tail.directive';\nimport {NgTemplateOutlet} from '@angular/common';\nimport {SelectableSectionComponent} from '../selectable-section.component';\nimport {SelectionZoneService} from '../../../service/services';\n\n@Component({\n  selector: 'lg-grouping-tails',\n  standalone: true,\n  template: `\n    <section class=\"grouping-tails\">\n      @for (group of sortResult?.groups; track group?.field) {\n        <section class=\"grouping-tails__section\">\n          <header class=\"grouping-tails__header\">\n            <lg-title [level]=\"3\">\n              {{ group?.field || 'Unknown' }}\n            </lg-title>\n          </header>\n\n          <div class=\"grouping-tails__content\">\n            @for (tail of group?.items; track tail) {\n              <div class=\"grouping-tails__item\">\n                <lg-selectable-section [key]=\"tail.uuid\">\n                  <div class=\"grouping-tails__item-inner\">\n                    <ng-container [ngTemplateOutlet]=\"groupingTailDirective!.templateRef\"\n                                  [ngTemplateOutletContext]=\"{ $implicit: tail }\">\n                    </ng-container>\n                  </div>\n                </lg-selectable-section>\n              </div>\n            }\n          </div>\n        </section>\n      }\n    </section>\n  `,\n  imports: [\n    TitleComponent,\n    NgTemplateOutlet,\n    SelectableSectionComponent\n  ],\n  styles: [`\n    .grouping-tails {\n      display: flex;\n      flex-direction: column;\n      gap: 32px;\n    }\n\n    .grouping-tails__section {\n      display: flex;\n      flex-direction: column;\n      gap: 24px;\n    }\n\n    .grouping-tails__header {\n    }\n\n    .grouping-tails__content {\n      display: flex;\n      flex-wrap: wrap;\n      gap: 16px;\n    }\n\n    .grouping-tails__item {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n    }\n\n    .grouping-tails__item-inner {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n      padding: 16px;\n      border-radius: 32px;\n      background-color: #fff;\n    }\n  `]\n})\nexport class GroupingTailsComponent {\n  constructor(\n    @Optional() public selectionZoneService: SelectionZoneService,\n  ) {\n  }\n\n  @Input() sortResult!: SortResult<any> | undefined;\n\n  @ContentChild(GroupingTailDirective) groupingTailDirective!: GroupingTailDirective;\n}\n", "import {Component, DestroyRef, inject} from '@angular/core';\nimport {RecipesRepository} from '../../service/recipes.repository';\nimport {GapRowComponent} from '../../../../shared/view/ui/layout/gap-row.component';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {RouterLink} from '@angular/router';\nimport {MatIcon} from '@angular/material/icon';\nimport {ContainerComponent} from '../../../../shared/view/ui/layout/container/container.component';\nimport {TitleComponent} from '../../../../shared/view/ui/layout/title/title.component';\nimport {takeUntilDestroyed, toSignal} from '@angular/core/rxjs-interop';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {Stores} from '../../../../shared/service/db/const/stores';\nimport {ImportComponent} from '../../../../shared/view/ui/import/import.component';\nimport {TransferDataService} from '../../../../shared/service/services/transfer-data.service';\nimport {ImportRowTplDirective} from '../../../../shared/view/ui/import/import-row-tpl.directive';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {ControlsBarComponent} from '../../../../shared/view/ui/controls-bar/controls-bar.component';\nimport {SelectionToolsComponent} from '../../../../shared/view/ui/form/selection-tools.component';\nimport {SelectionZoneService} from '../../../../shared/service/services/selection-zone.service';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {RecipeScheme} from '../../service/Recipe.scheme';\nimport {PullDirective} from '../../../../shared/view/directives/pull.directive';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {DraftRecipesListComponent} from './draft-recipes-list.component';\nimport {InlineSeparatedGroupComponent, InlineSeparatedGroupDirective} from '../../../../shared/view/ui/inline-separated-group.component';\nimport {GroupingSortingComponent} from '../../../../shared/view/ui/grouping-sorting/grouping-sorting.component';\nimport {GroupingTailsComponent} from '../../../../shared/view/ui/grouping-tails/grouping-tails.component';\nimport {CATEGORIZED_RECIPES_LIST} from '../../../../shared/service/tokens/categorized-recipes-list.token';\nimport {GroupingTailDirective} from '../../../../shared/view/ui/grouping-tails/grouping-tail.directive';\nimport {GapColumnComponent} from '../../../../shared/view/ui/layout/gap-column.component';\nimport {JsonPipe} from '@angular/common';\n\n\n@Component({\n  selector: 'lg-recipes-list',\n  standalone: true,\n  template: `\n    <lg-controls-bar>\n      <lg-button [icon]=\"true\"\n                 [link]=\"'/recipes/add'\"\n                 [size]=\"'medium'\"\n                 [style]=\"'success'\">\n        <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n      </lg-button>\n\n      <lg-inline-separated-group>\n        <ng-template lgInlineSeparatedGroup>\n          <lg-button (click)=\"exportRecipes(selectionZoneService.selected())\"\n                     [flat]=\"true\"\n                     [size]=\"'small'\"\n                     [style]=\"'info'\">\n            {{ 'export-label'|translate }} recipes\n          </lg-button>\n        </ng-template>\n        <ng-template lgInlineSeparatedGroup>\n          <lg-import (onDone)=\"loadRecipes()\"\n                     [label]=\"('import-label'|translate) + ' products'\"\n                     [schema]=\"RecipeScheme\"\n                     [storeName]=\"Stores.RECIPES\">\n            <ng-template let-flow=\"flow\" let-row lgImportRowTpl>\n              <span>{{ row?.name }}</span>\n            </ng-template>\n          </lg-import>\n        </ng-template>\n      </lg-inline-separated-group>\n    </lg-controls-bar>\n\n    <lg-fade-in>\n      <lg-container>\n        <lg-gap-row [center]=\"true\">\n          <lg-title>\n            {{ 'recipes.list-title'|translate }}\n          </lg-title>\n        </lg-gap-row>\n\n        <lg-draft-recipes-list></lg-draft-recipes-list>\n\n        <lg-gap-column [size]=\"'medium'\">\n          <lg-grouping-sorting></lg-grouping-sorting>\n\n          <lg-selection-tools [selectionTypes]=\"['recipe']\"></lg-selection-tools>\n        </lg-gap-column>\n\n        <lg-grouping-tails [sortResult]=\"recipes()\">\n          <ng-template lgGroupingTail let-recipe>\n            <lg-gap-column>\n              <a [routerLink]=\"'/recipes/edit/' + recipe.uuid\">{{ recipe.name }}</a>\n\n              <lg-gap-row>\n                <lg-button [style]=\"'primary'\"\n                           [size]=\"'small'\"\n                           [link]=\"'/recipes/calculate/' + recipe.uuid\"\n                           [flat]=\"true\">\n                  {{ 'recipes.calculate-btn'|translate }}\n                </lg-button>\n\n                <small class=\"text-muted text-cursive\" lgPull>\n                  {{ 'edited-at-label'|translate }} {{ (recipe?.updatedAt || recipe?.createdAt) | timeAgo }}\n                </small>\n              </lg-gap-row>\n            </lg-gap-column>\n          </ng-template>\n        </lg-grouping-tails>\n      </lg-container>\n    </lg-fade-in>\n  `,\n  providers: [\n    SelectionZoneService,\n  ],\n  imports: [\n    GapRowComponent,\n    ButtonComponent,\n    RouterLink,\n    MatIcon,\n    ContainerComponent,\n    TitleComponent,\n    ImportComponent,\n    ImportRowTplDirective,\n    FadeInComponent,\n    ControlsBarComponent,\n    SelectionToolsComponent,\n    TimeAgoPipe,\n    PullDirective,\n    TranslatePipe,\n    DraftRecipesListComponent,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective,\n    GroupingSortingComponent,\n    GroupingTailsComponent,\n    GroupingTailDirective,\n    GapColumnComponent,\n    JsonPipe\n  ],\n  styles: [\n    `:host {\n      display: block;\n    }\n    `\n  ]\n})\nexport class RecipesListComponent {\n  constructor(\n    private _recipesRepository: RecipesRepository,\n    private _notificationsService: NotificationsService,\n    private _transferDataService: TransferDataService,\n    public selectionZoneService: SelectionZoneService,\n  ) {\n    this._recipesRepository.recipes$.subscribe({\n      next: (recipes) => {\n        console.log('recipes loaded', recipes);\n      },\n      error: (err) => {\n      }\n    })\n\n    this.selectionZoneService.onDelete.pipe(\n      takeUntilDestroyed(this.destroyRef),\n    ).subscribe(key => {\n      this.deleteRecipe(key);\n    });\n  }\n\n  destroyRef = inject(DestroyRef);\n  recipes = toSignal(inject(CATEGORIZED_RECIPES_LIST));\n  protected readonly Stores = Stores;\n  protected readonly RecipeScheme = RecipeScheme;\n\n  ngOnInit() {\n    this.loadRecipes();\n  }\n\n  deleteRecipe(uuid: string | undefined) {\n    if (!uuid) {\n      return;\n    }\n    this._recipesRepository.deleteOne(uuid).then(() => {\n      this._notificationsService.success('Recipe deleted');\n      this.loadRecipes();\n    });\n  }\n\n  loadRecipes() {\n    return this._recipesRepository.loadRecipes();\n  }\n\n  exportRecipes(\n    selected: Set<string>,\n  ) {\n    return this._transferDataService.exportTable(Stores.RECIPES, 'json', {\n      selected: Array.from(selected || []),\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": ["_c0", "_forTrack0", "_c0"]
}
