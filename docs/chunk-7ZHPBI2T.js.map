{
  "version": 3,
  "sources": ["src/app/features/controls/form/chips-list.component.ts"],
  "sourcesContent": ["import {Component, forwardRef, HostBinding, input, Input} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n\n@Component({\n  selector: 'lg-chips-list',\n  standalone: true,\n  template: `\n      <div class=\"chips-list\">\n          @for (item of items;track item.label;let last = $last) {\n              <span class=\"chip\"\n                    [style.--chip-color]=\"item.color\"\n                    (click)=\"onSelect(item)\"\n                    [class.selected]=\"item.value === value\"\n                    [attr.data-last]=\"last ? true : null\">\n                  {{ item.label }}\n              </span>\n          }\n      </div>\n  `,\n  styles: [\n    `\n      .chips-list {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 8px;\n      }\n\n      .chip {\n        background-color: var(--chip-color);\n        color: #fff;\n        padding: 4px 8px;\n        border-radius: 16px;\n        font-size: 0.875rem;\n        display: inline-block;\n        cursor: pointer;\n        transition: all 0.2s;\n        transition-timing-function: cubic-bezier(.47, 1.64, .41, .8);\n      }\n\n      .chip.selected {\n        opacity: 0.5;\n      }\n\n      .chip:hover {\n        transform: scale(1.1);\n      }\n    `,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ChipsListComponent),\n      multi: true,\n    }\n  ],\n  imports: []\n})\n\nexport class ChipsListComponent\n  implements ControlValueAccessor {\n  constructor() {\n  }\n\n  @HostBinding('style.--chip-color') chipColor = 'var(--chip-default-bg)';\n  control = input<ControlValueAccessor>()\n  @Input() items: {\n    label: string\n    value: string\n    color?: string\n  }[] = [];\n  onChangeFn?: (value: any) => {};\n  value: any;\n  selectedItem?: any;\n\n  onSelect = (item: any) => {\n    this.applyValue(item.value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  writeValue(obj: any): void {\n    this.applyValue(obj);\n  }\n\n  applyValue(value: any): void {\n    this.value = value;\n    this.onChangeFn?.(value);\n    this.control()?.writeValue(value);\n  }\n\n  ngOnInit() {\n  }\n\n  clearSelected() {\n    this.value = null;\n  }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUc,IAAA,4BAAA,GAAA,QAAA,CAAA;AAEM,IAAA,wBAAA,SAAA,SAAA,0DAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,OAAA,CAAc;IAAA,CAAA;AAGzB,IAAA,iBAAA,CAAA;AACJ,IAAA,0BAAA;;;;;;;AALM,IAAA,sBAAA,gBAAA,QAAA,KAAA;AAEA,IAAA,sBAAA,YAAA,QAAA,UAAA,OAAA,KAAA;;AAEF,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,OAAA,GAAA;;;AA4CZ,IAAO,qBAAP,MAAO,oBAAkB;EAE7B,cAAA;EACA;EAEmC,YAAY;EAC/C,UAAU,MAAK,GAAA,YAAA,CAAA,QAAA,EAAA,WAAA,UAAA,CAAA,IAAA,CAAA,CAAA;EACN,QAIH,CAAA;EACN;EACA;EACA;EAEA,WAAW,CAAC,SAAa;AACvB,SAAK,WAAW,KAAK,KAAK;EAC5B;EAEA,iBAAiB,IAAO;AACtB,SAAK,aAAa;EACpB;EAEA,kBAAkB,IAAO;EACzB;EAEA,WAAW,KAAQ;AACjB,SAAK,WAAW,GAAG;EACrB;EAEA,WAAW,OAAU;AACnB,SAAK,QAAQ;AACb,SAAK,aAAa,KAAK;AACvB,SAAK,QAAO,GAAI,WAAW,KAAK;EAClC;EAEA,WAAQ;EACR;EAEA,gBAAa;AACX,SAAK,QAAQ;EACf;;qCA1CW,qBAAkB;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,eAAA,CAAA,GAAA,UAAA,GAAA,cAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAAlB,MAAA,sBAAA,gBAAA,IAAA,SAAA;;kGAVA;IACT;MACE,SAAS;MACT,aAAa,WAAW,MAAM,mBAAkB;MAChD,OAAO;;GAEV,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,QAAA,GAAA,gBAAA,UAAA,GAAA,CAAA,GAAA,QAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,4BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AA/CG,MAAA,4BAAA,GAAA,OAAA,CAAA;AACI,MAAA,2BAAA,GAAA,mCAAA,GAAA,GAAA,QAAA,GAAA,UAAA;AASJ,MAAA,0BAAA;;;AATI,MAAA,oBAAA;AAAA,MAAA,qBAAA,IAAA,KAAA;;;;;sEAkDG,oBAAkB,CAAA;UAvD9B;uBACW,iBAAe,YACb,MAAI,UACN;;;;;;;;;;;;KAYT,WA8BU;MACT;QACE,SAAS;QACT,aAAa,WAAW,MAAK,kBAAmB;QAChD,OAAO;;OAEV,SACQ,CAAA,GAAE,QAAA,CAAA,mrBAAA,EAAA,CAAA;kBAQwB,WAAS,CAAA;UAA3C;WAAY,oBAAoB;MAExB,OAAK,CAAA;UAAb;;;;6EAPU,oBAAkB,EAAA,WAAA,sBAAA,UAAA,0DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
