{
  "version": 3,
  "sources": ["src/app/shared/view/ui/card/table-card.component.ts", "src/app/features/recipes/view/calculate/calculate-recipe.component.ts", "src/app/features/recipes/view/calculate/calculate-recipe.component.html", "src/app/features/recipes/view/calculate/calculation-price-modifiers/calculation-price-modifiers.component.ts"],
  "sourcesContent": ["import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {CardComponent} from './card.component';\n\n@Component({\n  selector: 'lg-table-card',\n  standalone: true,\n  imports: [\n    CardComponent,\n  ],\n  template: `\n      <lg-card [flat]=\"true\">\n          <div class=\"table\">\n              <div class=\"table__scroll\">\n                  <ng-content></ng-content>\n              </div>\n          </div>\n      </lg-card>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        width: 100%;\n      }\n\n      .table__scroll {\n        overflow-x: auto;\n      }\n\n      table {\n        width: 100%;\n        border-collapse: collapse;\n        --border-color: #efefef;\n      }\n\n      table thead tr {\n        border-bottom: 1px solid var(--border-color);\n      }\n\n      table thead th {\n        text-align: left;\n        padding: 16px 24px;\n        opacity: 0.4;\n        font-size: 0.8em;\n      }\n\n      table tbody tr {\n        border-bottom: 1px solid var(--border-color);\n      }\n\n      table tbody tr:last-child {\n        border-bottom: none;\n      }\n\n      td {\n        padding: 16px 24px;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class TableCardComponent  {\n  constructor() {\n  }\n\n}\n", "import {\n  Component,\n  computed,\n  Injector,\n  model,\n  OnInit,\n  Provider,\n  signal,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {ActivatedRoute, Router, RouterLink} from '@angular/router';\nimport {ContainerComponent} from '../../../../shared/view/ui/layout/container/container.component';\nimport {TitleComponent} from '../../../../shared/view/ui/layout/title/title.component';\nimport {CalculateRecipeService, Calculation} from '../../service/calulate-recipe.service';\nimport {TableCardComponent} from '../../../../shared/view/ui/card/table-card.component';\nimport {CurrencyPipe, DecimalPipe, NgClass, NgTemplateOutlet} from '@angular/common';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {FlexRowComponent} from '../../../../shared/view/ui/layout/flex-row.component';\n\nimport {FormControl, FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {ChartData, ChartEvent, ChartOptions, ChartType} from 'chart.js';\n\n\nimport {FlexColumnComponent} from '../../../../shared/view/ui/layout/flex-column.component';\nimport {FormTemplateService} from '../../../../shared/service/services/form-templates.service';\n\n\nimport {takeUntilDestroyed, toSignal} from '@angular/core/rxjs-interop';\nimport {injectParams} from '../../../../shared/helpers/route.helpers';\n\nimport {SelectResourcesService} from '../../../../shared/service/services/select-resources.service';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {BaseChartDirective} from 'ng2-charts';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {WidthDirective} from '../../../../shared/view/directives/width.directive';\n\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {randomRGB} from '../../../../shared/helpers/color.helper';\nimport {Ingredient} from '../../service/models/Ingredient';\nimport {UserCurrencyPipe} from '../../../../shared/view/pipes/userCurrency.pipe';\nimport {TranslatePipe} from '@ngx-translate/core';\n\nimport {debounceTime} from 'rxjs';\nimport {NotificationsService} from '../../../../shared/service/services';\nimport {errorHandler} from '../../../../shared/helpers';\n\n\nimport {difference} from 'lodash';\nimport {RecipePriceModifier} from '../../../price-modifiers/service/PriceModifier';\nimport {CalculationPriceModifiersComponent} from './calculation-price-modifiers/calculation-price-modifiers.component';\nimport {AnalyticsService} from '../../../../shared/service/analytics.service';\nimport {SelfStartDirective} from '../../../../shared/view/directives/self-start.directive';\nimport {matchMediaSignal} from '../../../../shared/view/signals/match-media.signal';\nimport {mobileBreakpoint} from '../../../../shared/view/const/breakpoints';\n\n@Component({\n  selector: 'lg-calculate-recipe',\n  standalone: true,\n  imports: [\n    ContainerComponent,\n    TitleComponent,\n    TableCardComponent,\n    NgClass,\n    ButtonComponent,\n    FlexRowComponent,\n    DecimalPipe,\n    FormsModule,\n    RouterLink,\n    FlexColumnComponent,\n    NgTemplateOutlet,\n    FadeInComponent,\n    BaseChartDirective,\n    CardComponent,\n    WidthDirective,\n    ExpandDirective,\n    UserCurrencyPipe,\n    TranslatePipe,\n    ReactiveFormsModule,\n    CalculationPriceModifiersComponent,\n    SelfStartDirective,\n  ],\n  templateUrl: './calculate-recipe.component.html',\n  styles: [`\n    lg-number-input .lg-number-input {\n      width: 100px;\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    SelectResourcesService as Provider,\n    CurrencyPipe as Provider,\n  ]\n})\nexport class CalculateRecipeComponent\n  implements OnInit {\n  constructor(\n    private _aRoute: ActivatedRoute,\n    private _calculateRecipeService: CalculateRecipeService,\n    private _formTemplateService: FormTemplateService,\n    private _injector: Injector,\n    private _router: Router,\n    private _notificationService: NotificationsService,\n    private _analyticsService: AnalyticsService,\n  ) {\n    this._aRoute.data.pipe(\n      takeUntilDestroyed(),\n    ).subscribe((data) => {\n      this.result.set(data['result']);\n\n      // Track recipe calculation analytics\n      if (data['result']) {\n        const calculation = data['result'];\n        this._analyticsService.trackRecipeCalculated(\n          calculation.calculation?.recipe?.name,\n          calculation.calculation?.outcomeAmount,\n          {\n            recipe_uuid: this.uuid(),\n            total_price: calculation.calculation?.totalPrice,\n            ingredients_count: calculation.calculation?.ingredients?.length || 0,\n            outcome_unit: calculation.calculation?.outcomeUnit\n          }\n        );\n      }\n\n      const [recipePriceModifiers] = this.result()?.calculation?.recipe?.priceModifiers || [];\n\n      this.recipePriceAdditionsForm.patchValue({\n        action: recipePriceModifiers?.action || 'add',\n        unit: recipePriceModifiers?.unit || 'gram',\n        value: recipePriceModifiers?.value || 0,\n        type: recipePriceModifiers?.type || 'per_unit',\n      })\n    });\n  }\n\n  public doughnutChartType: ChartType = 'pie';\n  uuid = injectParams<string>('uuid');\n  result = signal<Calculation | null>(null);\n  doughnutChartData = computed(() => {\n    const result = this.result();\n\n    const {\n      prices,\n      weight,\n      labels,\n      colors,\n    } = result?.calculation?.ingredients?.reduce((acc, item: Ingredient) => {\n      acc.prices.push(item.totalPrice);\n      acc.weight.push(item.totalWeightGram);\n      acc.labels.push(item.generalName);\n      acc.colors.push(item.product_id?.ownColor ?? item.recipe_id?.ownColor ?? randomRGB());\n      return acc;\n    }, {\n      prices: [],\n      weight: [],\n      labels: [],\n      colors: [],\n    } as {\n      prices: number[],\n      weight: number[],\n      labels: string[],\n      colors: string[],\n    }) || {\n      prices: [],\n      weight: [],\n      labels: [],\n      colors: [],\n    };\n\n    return {\n      prices: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Cost',\n            data: prices,\n            backgroundColor: colors,\n            // hoverBackgroundColor: colors,\n            borderWidth: 0,\n          }\n        ],\n      } as ChartData,\n      weight: {\n        labels: labels,\n        datasets: [\n          {\n            label: 'Amount',\n            data: weight,\n            backgroundColor: colors,\n            // hoverBackgroundColor: colors,\n            borderWidth: 0,\n          }\n        ],\n      } as ChartData,\n      ingredients: result?.calculation?.ingredients || [],\n    }\n  });\n  public doughnutChartOptions: ChartOptions = {\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    onClick: (event, elements, chart) => {\n\n    }\n  };\n  @ViewChild('priceChart', {read: BaseChartDirective}) chartPrices: BaseChartDirective | undefined;\n  @ViewChild('weightChart', {read: BaseChartDirective}) chartWeight: BaseChartDirective | undefined;\n  recalculateTotalsModel = model(0);\n  notInGrams = computed(() => {\n    return this.result()?.calculation?.outcomeUnit && this.result()?.calculation?.outcomeUnit !== 'gram'\n  });\n  recipePriceAdditionsForm = new FormControl();\n  values = toSignal(this.recipePriceAdditionsForm.valueChanges);\n  isMobile = matchMediaSignal(mobileBreakpoint);\n\n  totalScaleFactor = computed(() => {\n    if (!this.recalculateTotalsModel()) return 1;\n    return this.recalculateTotalsModel() / (this.result()?.calculation?.outcomeAmount || 1);\n  })\n\n  totalPrice = computed(() => {\n    return (this.result()?.calculation?.totalPrice || 0) * this.totalScaleFactor();\n  });\n\n  totalPriceDifference = computed(() => {\n    return (this.result()?.calculation?.totalPriceDifference || 0) * this.totalScaleFactor();\n  });\n\n  totalPriceWithAdditions = computed(() => {\n    return (this.result()?.calculation?.totalPriceWithAdditions || 0) * this.totalScaleFactor();\n  });\n  protected readonly difference = difference;\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    (window as any)['chartPrices'] = this.chartPrices;\n    (window as any)['chartWeight'] = this.chartWeight;\n\n    this.recipePriceAdditionsForm.valueChanges\n      .pipe(\n        debounceTime(300),\n      )\n      .subscribe((value) => {\n        this.updatePriceAdditions(value);\n      });\n  }\n\n  onChartHover(sourceChart: 'price' | 'weight', event: ChartEvent, activeElements: any[]) {\n    if (!activeElements?.length) return;\n\n    const targetChart = sourceChart === 'price' ? this.chartWeight : this.chartPrices;\n    const index = activeElements[0].index;\n    targetChart?.chart?.update();\n  }\n\n  async updatePriceAdditions(\n    formValue: any,\n  ) {\n    try {\n      await this._calculateRecipeService.updateRecipe({\n        priceModifiers: [\n          new RecipePriceModifier(\n            formValue.action,\n            formValue.unit,\n            parseFloat(formValue.value) || 0,\n            formValue.type || 'per_unit',\n          ),\n        ]\n      } as any);\n\n      const result = await this._calculateRecipeService.calculateRecipe(this.uuid());\n      this.result.set(result);\n    } catch (error) {\n      this._notificationService.error(errorHandler(error));\n    }\n  }\n}\n", "<lg-fade-in>\n  <lg-container>\n    <lg-flex-column>\n      <lg-flex-row [center]=\"true\" [mobileMode]=\"true\">\n        <lg-title>\n          {{ result()?.calculation?.recipeName }} {{ 'recipe.calculation.title.after-text'  | translate }}\n        </lg-title>\n\n        <lg-button [flat]=\"true\"\n                   [link]=\"'/recipes/edit/' + result()?.calculation?.recipeUuid\"\n                   [size]=\"'small'\"\n                   [style]=\"'primary'\"\n                   lgSelfStart>\n          {{ 'edit-label' | translate }}\n        </lg-button>\n      </lg-flex-row>\n\n      @if (result()?.calculation?.totalPrice) {\n        <lg-flex-row [center]=\"true\" [mobileMode]=\"true\" style=\"max-width: 1200px\" lgExpand>\n          <lg-flex-column [position]=\"'stretch'\">\n\n            <lg-card size=\"small\">\n              <lg-flex-row [size]=\"'small'\" [relaxed]=\"true\">\n                <div>{{ 'recipe.calculation.outcome.label' | translate }}</div>\n\n                <b>\n                  {{ result()?.calculation?.outcomeAmount | number: '1.0-2' }}\n                  {{ result()?.calculation?.outcomeUnit }}\n                </b>\n              </lg-flex-row>\n\n            </lg-card>\n\n\n            <lg-flex-column [position]=\"'stretch'\" size=\"small\">\n              <lg-card size=\"small\">\n                <lg-flex-row [size]=\"'small'\" [relaxed]=\"true\">\n                  <div>\n                    {{ 'recipe.calculation.one-unit.label' | translate }} <b>\n                    {{ result()?.calculation?.outcomeUnit }}\n                  </b>\n                  </div>\n\n                  <b>\n                    @if (notInGrams()) {\n                      <ng-container *ngTemplateOutlet=\"totalAmount\"></ng-container>\n                    } @else {\n                      {{ result()?.calculation?.pricePerUnit | userCurrency:'1.2-5' }}\n                    }\n                  </b>\n                </lg-flex-row>\n              </lg-card>\n\n\n              <lg-flex-row [size]=\"'small'\"\n                           [relaxed]=\"true\" style=\"--control-bg: var(--hr-bg-strong);padding: 0 16px\">\n              </lg-flex-row>\n            </lg-flex-column>\n\n            <lg-flex-column [position]=\"'stretch'\" size=\"small\">\n              <lg-card size=\"small\">\n                <lg-flex-row [size]=\"'small'\" [relaxed]=\"true\">\n                  <div>{{ 'recipe.calculation.total-price.label' | translate }}</div>\n\n                  <b>\n                    {{ totalPrice() | userCurrency: '1.2-2' }}\n\n                    @if (totalPriceDifference()) {\n                      @let diff = totalPriceDifference();\n                      >\n                      <span class=\"text-underlined\">\n                      {{ totalPriceWithAdditions() |  userCurrency: '1.2-2' }}\n                    </span>\n\n                      <span [ngClass]=\"diff > 0 ? 'text-success' : 'text-danger'\">\n                      ({{ diff > 0 ? '+' : '' }} {{ diff |  userCurrency: '1.2-2' }})\n                    </span>\n                    }\n                  </b>\n                </lg-flex-row>\n              </lg-card>\n\n              <lg-flex-column [position]=\"'stretch'\"\n                              size=\"small\"\n                              [style.padding]=\"isMobile() ? '0' : '0 16px'\"\n                              style=\"--control-bg: var(--hr-bg-strong);\">\n\n                <!--                <lg-number-input lgParseMath-->\n                <!--                                 placeholder=\"amount\"-->\n                <!--                                 [(ngModel)]=\"recalculateTotalsModel\">-->\n                <!--                  <ng-template lgExtraTpl place=\"before\">-->\n                <!--                    Recalculate for-->\n                <!--                  </ng-template>-->\n\n                <!--                  &lt;!&ndash;                  @if (roundActionSelected()) {&ndash;&gt;-->\n                <!--                  &lt;!&ndash;                    <ng-template lgExtraTpl place=\"after\">&ndash;&gt;-->\n                <!--                  &lt;!&ndash;                      <b>&ndash;&gt;-->\n                <!--                  &lt;!&ndash;                        {{ result()?.calculation?.outcomeUnit }}&ndash;&gt;-->\n                <!--                  &lt;!&ndash;                      </b>&ndash;&gt;-->\n                <!--                  &lt;!&ndash;                    </ng-template>&ndash;&gt;-->\n                <!--                  &lt;!&ndash;                  }&ndash;&gt;-->\n                <!--                </lg-number-input>-->\n\n                <div>\n                  {{ 'recipe.calculation.price-modifiers.title' | translate }}\n                </div>\n\n                <lg-calculation-price-modifiers\n                  [formControl]=\"recipePriceAdditionsForm\"\n                  [recipeCost]=\"result()?.calculation\"></lg-calculation-price-modifiers>\n              </lg-flex-column>\n            </lg-flex-column>\n          </lg-flex-column>\n\n          <lg-card lgWidth=\"270px\" size=\"small\">\n            <lg-flex-column [size]=\"'small'\">\n              <lg-title [level]=\"5\">\n                <div>{{ 'recipe.calculation.price-chart' | translate }}</div>\n              </lg-title>\n\n              <canvas [data]=\"doughnutChartData().prices\"\n                      [options]=\"doughnutChartOptions\"\n                      [type]=\"doughnutChartType\"\n                      (chartHover)=\"onChartHover('price', $event.event, $event.active)\"\n                      #priceChart\n                      baseChart>\n              </canvas>\n            </lg-flex-column>\n          </lg-card>\n\n          <lg-card lgWidth=\"270px\" size=\"small\">\n            <lg-flex-column [size]=\"'small'\">\n              <lg-title [level]=\"5\">\n                <div>{{ 'recipe.calculation.weight-chart' | translate }}</div>\n              </lg-title>\n\n              <canvas [data]=\"doughnutChartData().weight\"\n                      [options]=\"doughnutChartOptions\"\n                      (chartHover)=\"onChartHover('weight', $event.event, $event.active)\"\n                      [type]=\"doughnutChartType\"\n                      #weightChart\n                      baseChart>\n              </canvas>\n            </lg-flex-column>\n          </lg-card>\n        </lg-flex-row>\n      }\n\n      <ng-template #totalAmount>\n        @if (notInGrams()) {\n          {{ result()?.calculation?.pricePerOutcomeUnit |  userCurrency: '1.2-2' }}\n\n          @if (result()?.calculation?.hasPriceDifference) {\n            @let diff = result()?.calculation?.pricePerUnitFromTotalDifference ?? 0;\n            >\n            <span class=\"text-underlined\">\n              {{ result()?.calculation?.pricePerUnitFromTotal |  userCurrency: '1.2-2' }}\n            </span>\n\n            <span [ngClass]=\"diff > 0 ? 'text-success' : 'text-danger'\">\n              ({{ diff > 0 ? '+' : '' }} {{ diff |  userCurrency: '1.2-2' }})\n            </span>\n          }\n          /\n          {{ result()?.calculation?.weightForUnit |  number: '1.0-2' }} {{ 'recipe.calculation.gram' | translate }}\n        } @else {\n          {{ result()?.calculation?.totalPrice | userCurrency: '1.2-2' }}\n        }\n      </ng-template>\n\n      <lg-table-card>\n        @if (result()) {\n          <table>\n            <colgroup>\n              <col span=\"1\" style=\"width: 1%;\">\n              <col span=\"1\" style=\"width: 20%;\">\n              <col span=\"1\" style=\"width: 5%;\">\n              <col span=\"1\" style=\"width: 3%;\">\n              <col span=\"1\" style=\"width: 5%;\">\n              <col span=\"1\" style=\"width: 7%;\">\n            </colgroup>\n            <thead>\n\n            <tr>\n              <th>#</th>\n              <th>{{ 'recipe.calculation.table.name.title' | translate }}</th>\n              <th>{{ 'recipe.calculation.table.amount.title' | translate }}</th>\n              <th>{{ 'recipe.calculation.table.unit.title' | translate }}</th>\n              <th>{{ 'recipe.calculation.table.price.title' | translate }}</th>\n              <th>{{ 'recipe.calculation.table.total.title' | translate }}</th>\n            </tr>\n            </thead>\n\n            <tbody>\n              @for (row of result()?.table; track $index; let i = $index) {\n                <tr [ngClass]=\"row.type\">\n                  <td>{{ i + 1 }}</td>\n\n                  <td width=\"200\">\n                    <div [ngClass]=\"'indent-' + row.indent\">\n                      @if (row.type !== 'total') {\n                        <a [routerLink]=\"[row.type === 'recipe-row' ? '/recipes/edit/' : '/products/edit/', row.uuid]\">\n                          {{ row.name }}\n                        </a>\n                      } @else {\n                        {{ row.name | translate }}\n                      }\n                    </div>\n                  </td>\n\n                  <td>{{ row.amount | number: '1.0-2' }}</td>\n\n                  <td>{{ row.unit }}</td>\n\n                  <td>{{ row.price_per_gram | userCurrency: '1.2-5' }}</td>\n\n                  <td>{{ row.total | userCurrency: '1.0-2' }}</td>\n                </tr>\n              }\n            </tbody>\n          </table>\n        } @else {\n        }\n      </lg-table-card>\n    </lg-flex-column>\n  </lg-container>\n</lg-fade-in>\n", "import {Component, computed, effect, forwardRef, inject, input, output} from '@angular/core';\nimport {RecipePriceModifier} from '../../../../price-modifiers/service/PriceModifier';\nimport {NumberInputComponent} from '../../../../../shared/view/ui/form/number-input.component';\nimport {ParseMathDirective} from '../../../../../shared/view/directives/parse-math.directive';\nimport {ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule} from '@angular/forms';\nimport {UnitGroupItem, UnitSwitcherComponent} from '../../../../../shared/view/ui/unit-switcher.component';\nimport {ControlExtraTemplateDirective} from '../../../../../shared/view/ui/form/control-extra-template.directive';\nimport {SETTINGS} from '../../../../settings/service/providers/settings.token';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {CurrencySymbolPipe} from '../../../../../shared/view/pipes/currency-symbol.pipe';\nimport {RecipeCost} from '../../../service/models/RecipeCost';\nimport {FlexRowComponent} from '../../../../../shared/view/ui/layout/flex-row.component';\nimport {matchMediaSignal} from '../../../../../shared/view/signals/match-media.signal';\nimport {mobileBreakpoint} from '../../../../../shared/view/const/breakpoints';\n\n@Component({\n  selector: 'lg-calculation-price-modifiers',\n  imports: [\n    NumberInputComponent,\n    ParseMathDirective,\n    ReactiveFormsModule,\n    UnitSwitcherComponent,\n    ControlExtraTemplateDirective,\n    CurrencySymbolPipe,\n    FlexRowComponent\n  ],\n  template: `\n    <lg-flex-row [formGroup]=\"recipePriceAdditionsForm\">\n      <lg-number-input [moveBeforeAbove]=\"isMobile()\"\n                       formControlName=\"value\"\n                       lgParseMath\n                       placeholder=\"extra price\">\n        <ng-template lgExtraTpl place=\"before\">\n          <lg-unit-switcher [items]=\"additionalPriceType\"\n                            formControlName=\"type\">\n          </lg-unit-switcher>\n          <lg-unit-switcher [items]=\"additionalPriceAction\"\n                            formControlName=\"action\">\n          </lg-unit-switcher>\n        </ng-template>\n\n        @if (showPriceAdditionUnits()) {\n          <ng-template lgExtraTpl place=\"after\">\n            <lg-unit-switcher formControlName=\"unit\"\n                              [items]=\"additionalPriceUnit\">\n            </lg-unit-switcher>\n          </ng-template>\n        }\n\n        @if (roundActionSelected()) {\n          <ng-template lgExtraTpl place=\"after\">\n            <b>{{ userSettings()['currency']|currencySymbol }}\n              /\n              {{ recipeCost()?.outcomeUnit }}\n            </b>\n          </ng-template>\n        }\n      </lg-number-input>\n    </lg-flex-row>\n\n  `,\n  styles: [`\n    :host {\n      width: 100%;\n    }\n  `],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CalculationPriceModifiersComponent),\n      multi: true,\n    },\n  ]\n})\nexport class CalculationPriceModifiersComponent\n  implements ControlValueAccessor {\n  recipePriceAdditionsForm = new FormGroup({\n    action: new FormControl<'add' | 'round'>('add'),\n    value: new FormControl<number | string>(0),\n    unit: new FormControl<'currency' | 'percent'>('currency'),\n    type: new FormControl<'per_unit' | 'total'>('per_unit'),\n  });\n  recipeCost = input<RecipeCost | null>();\n  values = toSignal(this.recipePriceAdditionsForm.valueChanges);\n  userSettings = inject(SETTINGS);\n  additionalPriceUnit: UnitGroupItem[] = [\n    {\n      label: '$',\n      value: 'currency',\n      style: 'secondary',\n    },\n    {\n      label: '%',\n      value: 'percent',\n      style: 'secondary',\n    },\n  ];\n  additionalPriceAction: UnitGroupItem[] = [\n    {\n      label: 'Add',\n      value: 'add',\n      style: 'secondary',\n    },\n    {\n      label: 'Round to',\n      value: 'round',\n      style: 'secondary',\n    },\n  ];\n  additionalPriceType: UnitGroupItem[] = [\n    {\n      label: 'Per unit',\n      value: 'per_unit',\n      style: 'secondary',\n    },\n    {\n      label: 'Total',\n      value: 'total',\n      style: 'secondary',\n    },\n  ];\n  onChanged = output<RecipePriceModifier[]>();\n  isMobile = matchMediaSignal(mobileBreakpoint);\n\n  showPriceAdditionUnits = computed(() => {\n\n    return true;\n  });\n  roundActionSelected = computed(() => {\n    return this.values()?.action === 'round';\n  });\n\n  onChangeFn: (...args: any[]) => void = () => {\n  };\n\n  changesEffect = effect(() => {\n    this.onChangeFn(this.values());\n  })\n\n  registerOnChange(fn: any): void {\n    this.onChangeFn = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n  }\n\n  writeValue(obj: any): void {\n    this.recipePriceAdditionsForm.patchValue({\n      action: obj?.action || 'add',\n      value: obj?.value || 0,\n      unit: obj?.unit || 'currency',\n      type: obj?.type || 'per_unit',\n    }, {emitEvent: false});\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
