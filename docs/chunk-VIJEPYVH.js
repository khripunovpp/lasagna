import{a as g}from"./chunk-ERWTPTKN.js";import{a as p}from"./chunk-KPGIGGUF.js";import{c as m}from"./chunk-NQH67WTM.js";import{$ as s,a as u,b as a,da as n,f as r,m as d}from"./chunk-7IKCFNVS.js";var _=class o{constructor(e,t,i){this._indexDbService=e;this._usingHistoryService=t;this._categoryRepository=i}_stream$=new d;get recipes$(){return this._stream$.asObservable()}addRecipe(e){return r(this,null,function*(){return this._indexDbService.addData("recipesStore",e).then(t=>(e.category_id&&this._saveCategory(e.category_id),t))})}loadRecipes(){return this._indexDbService.getAll("recipesStore").then(e=>(this._stream$.next(e),e))}getRecipes(){return this._indexDbService.getAll("recipesStore").then(e=>e.toSorted((t,i)=>t.name.localeCompare(i.name)))}getOne(e){return r(this,null,function*(){return new Promise((t,i)=>r(this,null,function*(){if(!e){t(void 0);return}e=e.uuid||e,yield this._indexDbService.getOne("recipesStore",e).then(c=>{t(this.recipeFromDTO(c))})}))})}editRecipe(e,t){return this._indexDbService.replaceData("recipesStore",e,t)}deleteRecipe(e){return this._indexDbService.remove("recipesStore",e)}ingredientToDto(e){return{name:e.name,amount:e.amount,unit:e.unit,product_id:e.product_id?.uuid,recipe_id:e.recipe_id?.uuid,uuid:e.uuid}}recipeFromDTO(e){if(e)return{name:e.name,description:e.description,outcome_amount:e.outcome_amount,outcome_unit:e.outcome_unit,uuid:e.uuid,ingredients:e.ingredients.map(t=>a(u({},t),{product_id:t.product_id?{uuid:t.product_id}:void 0,recipe_id:t.recipe_id?{uuid:t.recipe_id}:void 0})),taxTemplateName:e.taxTemplateName,category_id:e.category_id?{uuid:e.category_id}:null}}recipeToDto(e){return{name:e.name,description:e.description,outcome_amount:e.outcome_amount,outcome_unit:e.outcome_unit,uuid:e.uuid,ingredients:e.ingredients.map(t=>this.ingredientToDto(t)),taxTemplateName:e.taxTemplateName,category_id:e.category_id?e.category_id.uuid:null}}getTopCategories(){let{top:e}=this._usingHistoryService.read("recipes_categories"),t=Object.keys(e);return t.length===0?Promise.resolve([]):this._categoryRepository.getManyCategories(t).then(i=>i.toSorted((c,y)=>e[y.uuid].count>e[c.uuid].count?1:-1))}_saveCategory(e){this._usingHistoryService.count("recipes_categories",e)}static \u0275fac=function(t){return new(t||o)(n(m),n(p),n(g))};static \u0275prov=s({token:o,factory:o.\u0275fac,providedIn:"root"})};export{_ as a};
