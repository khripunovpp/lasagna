{
  "version": 3,
  "sources": ["src/app/features/widgets/barcode-seeker/barcode-seeker.component.ts", "src/app/features/widgets/barcode-seeker/barcode-seeker.component.html", "src/app/features/controls/form/buttons-group.component.ts", "src/app/features/widgets/jelly-widget/jelly-calculation.model.ts", "src/app/features/controls/form/range.component.ts", "src/app/features/widgets/jelly-widget/jelly-widget.component.ts", "src/app/features/widgets/widgets-page/widgets-page.component.ts"],
  "sourcesContent": ["import {AfterViewInit, Component, computed, input, OnDestroy, output, resource, signal} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\n\nimport {FlexColumnComponent} from '../../../shared/view/ui/layout/flex-column.component';\nimport {InputComponent} from '../../controls/form/input.component';\nimport {TitleComponent} from '../../../shared/view/ui/layout/title/title.component';\nimport {ButtonComponent} from '../../../shared/view/ui/layout/button.component';\n\nimport {ExpandDirective} from '../../../shared/view/directives/expand.directive';\nimport {ParseMathDirective} from '../../../shared/view/directives/parse-math.directive';\nimport {FlexRowComponent} from '../../../shared/view/ui/layout/flex-row.component';\nimport {NumberInputComponent} from '../../controls/form/number-input.component';\nimport {ControlComponent} from '../../controls/form/control-item/control.component';\nimport {OpenFoodFactsService} from '../../../shared/service/services/openfoodfacts.service';\nimport {ShrinkDirective} from '../../../shared/view/directives/shrink.directive';\nimport {BarcodeReaderService} from '../../../shared/service/services/barcode-reader.service';\nimport {ProductsRepository} from '../../products/service/products.repository';\nimport {NotificationsService} from '../../../shared/service/services/notifications.service';\nimport {Product} from '../../products/service/Product';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'lg-barcode-add-product-widget',\n  standalone: true,\n  templateUrl: './barcode-seeker.component.html',\n  imports: [\n    FormsModule,\n    FlexColumnComponent,\n    InputComponent,\n    TitleComponent,\n    ButtonComponent,\n    ExpandDirective,\n    ParseMathDirective,\n    FlexRowComponent,\n    NumberInputComponent,\n    ControlComponent,\n    ShrinkDirective,\n    TranslatePipe\n  ],\n\n  styles: [\n    `\n    `],\n  providers: [],\n})\nexport class BarcodeSeekerWidgetComponent\n  implements OnDestroy, AfterViewInit {\n  constructor(\n    private _openFoodFactsService: OpenFoodFactsService,\n    private _arcodeReaderService: BarcodeReaderService,\n    private _productRepository: ProductsRepository,\n    private _notificationService: NotificationsService,\n  ) {\n  }\n\n  productAdded = output<{\n    uuid: string\n    name: string\n  }>();\n  barcode = signal('');\n  product = {\n    name: '',\n    price: 0,\n    amount: 0,\n    unit: 'gram' as 'gram' | 'piece'\n  };\n  lockRequest = false;\n  showFormInitially = input(false);\n  showScanerInitially = input(false);\n  showScanner = signal(false);\n  showProductForm = signal(false);\n\n  userResource = resource({\n    params: () => ({id: this.barcode()}),\n    loader: ({params, abortSignal}): Promise<any> => {\n      if (this.lockRequest || !params.id) {\n        return Promise.resolve(null);\n      }\n\n      this._notificationService.info('Barcode detected: ' + params.id);\n      this.lockRequest = true;\n      return this._openFoodFactsService.getProductByBarcode(params.id).then(res => {\n        this.showProductForm.set(true);\n        return res;\n      });\n    },\n  });\n  productResult = computed(() => {\n    const resp = this.userResource.value();\n\n    if (resp?.status === 1) {\n      const product = resp.product;\n      this.product.name = (product.product_name || '') + ' (' + (product.brands || '') + ')';\n      this.product.amount = this.extractAmount(product);\n      this.product.unit = this.detectUnit(product);\n      return {\n        ...this.product,\n      }\n    }\n\n    return null\n  })\n\n  onBarcodeManualInput() {\n    this.lockRequest = false;\n  }\n\n  openScanner() {\n    this.showScanner.set(true);\n    this.startCamera();\n  }\n\n  clear() {\n    this.barcode.set('');\n    this.product = {\n      name: '',\n      price: 0,\n      amount: 0,\n      unit: 'gram' as 'gram' | 'piece'\n    };\n    this.showProductForm.set(false);\n    this.lockRequest = false;\n  }\n\n  closeScanner() {\n    this.showScanner.set(false);\n    this.stopCamera();\n  }\n\n  extractAmount(product: any): number {\n    if (product.quantity) {\n      const match = product.quantity.match(/\\d+/);\n      return match ? +match[0] : 0;\n    }\n    return 0;\n  }\n\n  stopCamera() {\n    this._arcodeReaderService.stopCamera();\n  }\n\n  detectUnit(product: any): 'gram' | 'piece' {\n    const qty = (product.serving_quantity_unit || '').toLowerCase();\n    if (qty.includes('g') || qty.includes('ml')) return 'gram';\n    if (qty.includes('pc') || qty.includes('шт')) return 'piece';\n    return 'gram';\n  }\n\n  addProduct() {\n    this._productRepository.addOne(Product.fromRaw({\n      name: this.product.name,\n      price: this.product.price,\n      amount: this.product.amount,\n      unit: this.product.unit as any,\n      source: 'openfoodfacts',\n      category_id: '',\n      tags: [],\n      createdAt: Date.now(),\n    })).then((uuid) => {\n      this.productAdded.emit({\n        uuid: uuid,\n        name: this.product.name,\n      });\n      this.product = {\n        name: '',\n        price: 0,\n        amount: 0,\n        unit: 'gram' as 'gram' | 'piece'\n      };\n      this.barcode.set('');\n      this.lockRequest = false;\n    });\n  }\n\n  startCamera() {\n    return this._arcodeReaderService.startCamera(\n      'video',\n      (result) => {\n        if (result) {\n          this.barcode.set(result);\n        }\n      }\n    );\n  }\n\n  async ngAfterViewInit() {\n    if (this.showScanerInitially()) {\n      this.showScanner.set(true);\n      await this.startCamera();\n    }\n  }\n\n  ngOnDestroy() {\n    this.stopCamera();\n  }\n}\n", "<lg-flex-column [size]=\"'medium'\">\n  <lg-title>\n    📷 {{ 'widgets.barcode.title' | translate }}\n  </lg-title>\n\n  <lg-flex-row [top]=\"true\" [mobileMode]=\"true\">\n    @if (showScanner()) {\n\n      <video id=\"video\"></video>\n      <lg-flex-column>\n        <lg-flex-row lgExpand>\n          <lg-input [(ngModel)]=\"barcode\"\n                    [placeholder]=\"'widgets.barcode.placeholder' | translate\"\n                    lgExpand\n                    lgParseMath></lg-input>\n\n          <lg-button (click)=\"onBarcodeManualInput()\">{{ 'widgets.barcode.search' | translate }}</lg-button>\n\n          <lg-button (click)=\"clear()\">{{ 'widgets.barcode.clear' | translate }}</lg-button>\n        </lg-flex-row>\n\n\n        @if (showProductForm() && productResult()) {\n          <lg-flex-column [size]=\"'medium'\">\n            <lg-control [label]=\"'widgets.barcode.name' | translate\">\n              <lg-input [(ngModel)]=\"product.name\"\n                        [placeholder]=\"'widgets.barcode.name' | translate\"\n                        lgExpand\n                        lgParseMath></lg-input>\n            </lg-control>\n            <lg-control [label]=\"'widgets.barcode.amount' | translate\">\n              <lg-number-input [(ngModel)]=\"product.amount\"\n                               [placeholder]=\"'widgets.barcode.amount' | translate\"\n                               lgExpand\n                               lgParseMath></lg-number-input>\n            </lg-control>\n\n            <lg-control [label]=\"'widgets.barcode.price' | translate\">\n              <lg-number-input [(ngModel)]=\"product.price\"\n                               [placeholder]=\"'widgets.barcode.price' | translate\"\n                               lgExpand\n                               lgParseMath></lg-number-input>\n              <div>{{ product.unit }}</div>\n            </lg-control>\n\n            <lg-button lgShrink (click)=\"addProduct()\">{{ 'widgets.barcode.add-product' | translate }}</lg-button>\n          </lg-flex-column>\n        }\n      </lg-flex-column>\n    } @else {\n      <lg-button (click)=\"openScanner()\">{{ 'widgets.barcode.scan' | translate }}</lg-button>\n    }\n\n  </lg-flex-row>\n</lg-flex-column>\n", "import {Component, effect, forwardRef, Input, input, signal, ViewEncapsulation} from '@angular/core';\nimport {ButtonComponent, ButtonSizes, ButtonStyle} from '../../../shared/view/ui/layout/button.component';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {TranslatePipe} from '@ngx-translate/core';\n\nexport interface ButtonGroupItem {\n  label: string\n  value: string\n  onClick?: () => void\n  style?: ButtonStyle\n  size?: ButtonSizes\n}\n\n@Component({\n  selector: 'lg-buttons-group',\n  standalone: true,\n  template: `\n      <div [class.buttons-group--flat]=\"flat\"\n           class=\"buttons-group\">\n          @for (item of items();track item.value;let last = $last, first = $first, index = $index) {\n              <lg-button (click)=\"onClickItem(item,index)\"\n                         [active]=\"activeIndex() == index\"\n                         [flat]=\"flat\"\n                         [noScale]=\"true\"\n                         [style]=\"item.style || 'default'\"\n                         [size]=\"item.size || 'default'\"\n                         [noLeftRadius]=\"last\"\n                         [noRightRadius]=\"first\"\n                         class=\"buttons-group__item\"\n                         [noRadius]=\"!first && !last\"\n                         [class.buttons-group__item--active]=\"activeIndex() == index\">\n                  {{ item.label | translate }}\n              </lg-button>\n          }\n      </div>\n  `,\n  styles: [\n    `\n      .buttons-group {\n        display: flex;\n      }\n\n      .buttons-group lg-button {\n        flex: 1;\n      }\n\n      .buttons-group lg-button button {\n        width: 100%;\n      }\n      .buttons-group--flat {\n        gap: 16px;\n        width: 100%;\n      }\n    `\n  ],\n  imports: [\n    ButtonComponent,\n    TranslatePipe\n  ],\n  encapsulation: ViewEncapsulation.None,\n\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ButtonsGroupComponent),\n      multi: true\n    }\n  ]\n})\nexport class ButtonsGroupComponent implements ControlValueAccessor {\n  @Input() flat = false;\n  items = input<ButtonGroupItem[]>();\n  activeIndex = signal<number>(0);\n  value = signal<string>('');\n  effect = effect(() => {\n    const activeIndex = this.items()?.findIndex(item => item.value === this.value()) ?? -1;\n    this.activeIndex.set(activeIndex === -1 ? 0 : activeIndex);\n  });\n\n  onClickItem(item: ButtonGroupItem, index: number) {\n    this.activeIndex.set(index);\n    this.writeValue(item.value);\n    item.onClick?.();\n  }\n\n  onChange: (value: string) => void = () => {\n  };\n  onTouched: () => void = () => {\n  };\n\n  writeValue(value: string): void {\n    this._change(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeInput(\n    event: Event\n  ) {\n    this._change((event.target as HTMLInputElement).value);\n  }\n\n  private _change(value: string) {\n    this.value.set(value);\n    this.onChange(this.value());\n  }\n}\n", "export type JellyBaseType = 'powder' | 'leaf' | 'mass';\n\nexport const convertPairs: Partial<Record<JellyBaseType, Partial<Record<JellyBaseType, (amount: number) => number>>>> = {\n  powder: {\n    mass: (amount: number) => {\n      return amount * 5 + amount;\n    },\n  },\n  leaf: {\n    mass: (amount: number) => {\n      return amount * 5 + amount;\n    },\n  },\n  mass: {\n    powder: (amount: number) => {\n      return amount / 6;\n    },\n    leaf: (amount: number) => {\n      return amount / 6;\n    },\n  },\n}\n\nexport const waterCalculationFromMass = (jellyAmount: number) => {\n  return jellyAmount * 5;\n}\n\nexport const waterCalculationToMass = (waterAmount: number) => {\n  return waterAmount * 5 / 6;\n}\n\nexport const bloomRatio = (fromBloom: number, toBloom: number) => {\n  return fromBloom / toBloom;\n}\n\nexport class JellyCalculationModel {\n  constructor(\n    public type: JellyBaseType,\n    public bloom: number = 1,\n  ) {\n  }\n\n  convertToBase(\n    type: JellyBaseType,\n    amount: number,\n    bloomTo: number = 1,\n  ): number {\n    const ratio = bloomRatio(this.bloom, bloomTo);\n    const handlers = convertPairs[this.type];\n    return (handlers?.[type]?.(amount) || amount) * ratio;\n  }\n\n  convertToWater(type: JellyBaseType, jellyAmount: number): number {\n    if (this.type === 'mass' && type === 'mass'\n      || this.type === 'leaf'\n      || type === 'leaf'\n    ) {\n      return 0\n    }\n    if (this.type === 'mass') {\n      return waterCalculationFromMass(jellyAmount);\n    } else if (type === 'mass') {\n      return waterCalculationToMass(jellyAmount);\n    }\n    return 0;\n  }\n}\n", "import {Component, Input} from '@angular/core';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\n\n// custom component with all custom styles for thumb and track\n@Component({\n  selector: 'lg-range',\n  standalone: true,\n  template: `\n    <div class=\"range-wrapper\">\n      <input\n        type=\"range\"\n        [min]=\"min\"\n        [max]=\"max\"\n        [step]=\"step\"\n        [(ngModel)]=\"value\"\n        (ngModelChange)=\"changeValue($event)\"\n        class=\"custom-range\"\n      />\n\n      <div class=\"ticks\">\n        @for (tick of ticks; track tick) {\n          <div\n            class=\"tick\"\n            [style.left.%]=\"((tick - min) / (max - min)) * 100\"\n          >\n            <div class=\"tick-line\"></div>\n            <div class=\"label\">{{ tick }}</div>\n          </div>\n        }\n      </div>\n    </div>\n  `,\n  imports: [\n    FormsModule\n  ], providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: RangeComponent,\n      multi: true\n    }\n  ],\n  styles: [`\n    .range-wrapper {\n      position: relative;\n      width: 100%;\n      padding-bottom: 30px;\n    }\n\n    .custom-range {\n      width: 100%;\n      -webkit-appearance: none;\n      background: transparent;\n      position: relative;\n      z-index: 2;\n      margin: 0;\n    }\n\n    /* Track */\n    .custom-range::-webkit-slider-runnable-track {\n      height: 6px;\n      background: var(--range-track-bg);\n      border-radius: 3px;\n    }\n\n    .custom-range::-moz-range-track {\n      height: 6px;\n      background: var(--range-track-bg);\n      border-radius: 3px;\n    }\n\n    /* Thumb */\n    .custom-range::-webkit-slider-thumb {\n      -webkit-appearance: none;\n      height: 20px;\n      width: 20px;\n      background: var(--accent-color);\n      border-radius: 50%;\n      margin-top: -7px;\n      cursor: pointer;\n    }\n\n    .custom-range::-moz-range-thumb {\n      height: 20px;\n      width: 20px;\n      background: var(--accent-color);\n      border-radius: 50%;\n      cursor: pointer;\n    }\n\n    /* Ticks */\n    .ticks {\n      position: absolute;\n      top: 28px;\n      left: 2.4%;\n      right: 2.4%;\n      height: 30px;\n      pointer-events: none;\n    }\n\n    .tick {\n      position: absolute;\n      text-align: center;\n      transform: translateX(-50%);\n    }\n\n    .tick-line {\n      width: 1px;\n      height: 10px;\n      background-color: var(--range-tick-color);\n      margin: 0 auto;\n    }\n\n    .label {\n      font-size: 10px;\n      color: var(--range-tick-color);\n      margin-top: 2px;\n      display: block;\n    }\n  `]\n})\nexport class RangeComponent\n  implements ControlValueAccessor {\n  constructor() {\n  }\n\n  @Input() min: number = 0;\n  @Input() max: number = 100;\n  @Input() step: number = 1;\n\n  @Input() tickInterval?: number;\n  @Input() customTicks?: number[];\n\n  value: string = '';\n\n  get ticks(): number[] {\n    if (this.customTicks) return this.customTicks;\n    if (this.tickInterval) {\n      const ticks = [];\n      for (let i = this.min; i <= this.max; i += this.tickInterval) {\n        ticks.push(i);\n      }\n      return ticks;\n    }\n    return [];\n  }\n\n  onChange: (value: string) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  writeValue(value: string): void {\n    this.changeValue(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  changeValue(value: string): void {\n    this.value = value;\n    this.onChange(this.value);\n  }\n}\n", "import {Component, DestroyRef, inject, signal, ViewEncapsulation} from '@angular/core';\nimport {FormControl, FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexColumnComponent} from '../../../shared/view/ui/layout/flex-column.component';\n\nimport {FlexRowComponent} from '../../../shared/view/ui/layout/flex-row.component';\nimport {ButtonGroupItem, ButtonsGroupComponent} from '../../controls/form/buttons-group.component';\nimport {JellyCalculationModel} from './jelly-calculation.model';\nimport {DecimalPipe} from '@angular/common';\nimport {ShrinkDirective} from '../../../shared/view/directives/shrink.directive';\nimport {RangeComponent} from '../../controls/form/range.component';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {NumberInputComponent} from '../../controls/form/number-input.component';\nimport {ParseMathDirective} from '../../../shared/view/directives/parse-math.directive';\nimport {ControlExtraTemplateDirective} from '../../controls/form/control-extra-template.directive';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n\n@Component({\n  selector: 'lg-jelly-widget',\n  standalone: true,\n  template: `\n      <lg-flex-column>\n          <form [formGroup]=\"form\">\n              <lg-flex-row [bottom]=\"true\" [mobileMode]=\"true\">\n                  <lg-flex-column formGroupName=\"from\">\n                      {{ 'jelly.in-recipe-you-have' | translate }}\n                      <lg-number-input formControlName=\"amount\"\n                                       lgParseMath\n                                       [placeholder]=\"'Amount'\">\n                          <ng-template lgExtraTpl place=\"after\">\n                              {{ 'jelly.grams-of' | translate }}\n                          </ng-template>\n                      </lg-number-input>\n\n                      <lg-range\n                              [min]=\"120\"\n                              [max]=\"220\"\n                              [step]=\"10\"\n                              formControlName=\"bloom\"\n                              [tickInterval]=\"20\"\n                      ></lg-range>\n\n                      <lg-buttons-group formControlName=\"type\" [items]=\"typeButtons\"></lg-buttons-group>\n                  </lg-flex-column>\n\n\n                  <lg-flex-column formGroupName=\"to\">\n                      @let fromType = form.value?.from?.type;\n                      @let toType = form.value?.to?.type;\n                      <lg-flex-row class=\"text-center\" [strictCenter]=\"true\">\n                          <lg-flex-column lgShrink [size]=\"'small'\" [position]=\"'center'\">\n                              <div>\n                                  {{ 'jelly.you-need' | translate }}\n                              </div>\n\n                              <lg-flex-row [size]=\"'small'\" style=\"font-size: 2rem\">\n                                  <div>{{ result() | number: '1.0-2' }}</div>\n                                  @switch (toType) {\n                                      @case (\"powder\") {\n                                          🍚\n                                      }\n                                      @case (\"leaf\") {\n                                          🍃\n                                      }\n                                      @case (\"mass\") {\n                                          🧫\n                                      }\n                                  }\n                              </lg-flex-row>\n\n                              <div>\n                                  {{ 'jelly.grams-of' | translate }}\n                              </div>\n                          </lg-flex-column>\n                          @if (waterNeeded()) {\n                              <lg-flex-column lgShrink [size]=\"'small'\" [position]=\"'center'\">\n                                  <div>\n                                      @switch (toType) {\n                                          @case (\"mass\") {\n                                              <div>\n                                                  {{ 'jelly.with' | translate }}\n                                              </div>\n                                          }\n                                      }\n\n                                      @switch (toType) {\n                                          @case (\"powder\") {\n                                              <div>\n                                                  {{ 'jelly.and' | translate }}\n                                              </div>\n                                          }\n                                          @case (\"leaf\") {\n                                              <div>\n                                                  {{ 'jelly.and' | translate }}\n                                              </div>\n                                          }\n                                      }\n                                  </div>\n\n                                  <lg-flex-row [size]=\"'small'\" style=\"font-size: 2rem\">\n                                      <div>{{ waterNeeded() | number: '1.0-2' }}</div>\n                                      💧\n                                  </lg-flex-row>\n\n                                  <div>\n                                      {{ 'jelly.ml-of-water' | translate }}\n                                      @switch (toType) {\n                                          @case (\"mass\") {\n                                              <br>{{ 'jelly.included' | translate }}\n                                          }\n                                      }\n                                  </div>\n                              </lg-flex-column>\n                          }\n                      </lg-flex-row>\n\n                      <lg-range\n                              [min]=\"120\"\n                              [max]=\"220\"\n                              [step]=\"10\"\n                              formControlName=\"bloom\"\n                              [tickInterval]=\"20\"\n                      ></lg-range>\n\n                      <lg-buttons-group formControlName=\"type\" [items]=\"typeButtons\"></lg-buttons-group>\n                  </lg-flex-column>\n              </lg-flex-row>\n          </form>\n      </lg-flex-column>\n  `,\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    FlexColumnComponent,\n    FlexRowComponent,\n    ButtonsGroupComponent,\n    DecimalPipe,\n    ShrinkDirective,\n    RangeComponent,\n    NumberInputComponent,\n    ParseMathDirective,\n    ControlExtraTemplateDirective,\n    TranslatePipe\n  ],\n  styles: [`\n    :host {\n\n      --control-bg: #fcfcfc;\n    }\n\n    lg-eggs-widget {\n      display: flex;\n    }\n\n    .eggs-widget {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .eggs-widget__eggs {\n      display: flex;\n      align-items: flex-end;\n      gap: 8px;\n    }\n\n    .eggs-widget__eggs img {\n      width: 40px;\n    }\n\n    .eggs-widget__egg {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      flex: 1;\n      flex-direction: column;\n      white-space: nowrap;\n      gap: 8px;\n      background-color: var(--control-bg);\n      border-radius: 24px;\n      padding: 16px;\n    }\n\n    .eggs-widget__egg:first-child img {\n      transform: scale(0.8);\n    }\n\n    .eggs-widget__egg:last-child img {\n      transform: scale(1.2);\n    }\n\n    .eggs-widget__egg.selected {\n      background-color: #61b789;\n    }\n\n    .eggs-widget__egg.selected:first-child {\n      background-color: #b4b8f8;\n    }\n\n    .eggs-widget__egg.selected:last-child {\n      background-color: #ff8080;\n    }\n  `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class JellyWidgetComponent {\n\n  constructor() {\n    this.form.valueChanges.pipe(\n      takeUntilDestroyed(this.destroyRef),\n    ).subscribe((value) => {\n      const amount = parseFloat(String(value?.from?.amount));\n      if (isNaN(amount)) {\n        return;\n      }\n      const model = new JellyCalculationModel(value?.from?.type as any, value?.from?.bloom as any);\n      const convertedAmount = model.convertToBase(value?.to?.type as any, amount, value?.to?.bloom as any);\n      const waterNeeded = model.convertToWater(value?.to?.type as any, convertedAmount);\n\n      this.result.set(convertedAmount);\n      this.waterNeeded.set(waterNeeded);\n    });\n  }\n\n  result = signal<number>(0);\n  waterNeeded = signal<number>(0);\n  destroyRef = inject(DestroyRef);\n  form = new FormGroup({\n    from: new FormGroup({\n      type: new FormControl('mass'),\n      amount: new FormControl(null),\n      bloom: new FormControl(140),\n    }),\n    to: new FormGroup({\n      type: new FormControl('powder'),\n      bloom: new FormControl(140),\n    }),\n  })\n\n  typeButtons: ButtonGroupItem[] = [\n    {\n      label: 'jelly.type.powder',\n      value: 'powder',\n      style: 'secondary'\n    },\n    {\n      label: 'jelly.type.leaf',\n      value: 'leaf',\n      style: 'secondary'\n    },\n    {\n      label: 'jelly.type.mass',\n      value: 'mass',\n      style: 'secondary'\n    }\n  ]\n}\n", "import {Component} from '@angular/core';\nimport {EggsWidgetComponent} from '../eggs-widget/eggs-widget.component';\n\n\nimport {ContainerComponent} from '../../../shared/view/ui/layout/container/container.component';\nimport {FlexRowComponent} from '../../../shared/view/ui/layout/flex-row.component';\nimport {TitleComponent} from '../../../shared/view/ui/layout/title/title.component';\n\n\nimport {BarcodeSeekerWidgetComponent} from '../barcode-seeker/barcode-seeker.component';\nimport {FadeInComponent} from '../../../shared/view/ui/fade-in.component';\n\nimport {TabDirective} from '../../../shared/view/ui/tabs/tab.directive';\nimport {TabsComponent} from '../../../shared/view/ui/tabs/tabs.component';\n\nimport {JellyWidgetComponent} from '../jelly-widget/jelly-widget.component';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-widgets-page',\n  standalone: true,\n  template: `\n    <lg-fade-in>\n      <lg-container>\n        <lg-flex-row [center]=\"true\">\n          <lg-title>\n            {{ 'widgets.page.title' | translate }}\n          </lg-title>\n        </lg-flex-row>\n\n        <lg-tabs>\n          <ng-template [label]=\"'widgets.page.jelly-calculator' | translate\" alias=\"jelly-calculator\" lgTab>\n             <lg-jelly-widget></lg-jelly-widget>\n          </ng-template>\n\n          <ng-template [label]=\"'widgets.page.eggs-calculator' | translate\" alias=\"eggs-calculator\" lgTab>\n             <lg-eggs-widget></lg-eggs-widget>\n          </ng-template>\n\n<!--          <ng-template [label]=\"'widgets.page.barcode-seeker' | translate\" alias=\"barcode-seeker\" lgTab>-->\n<!--              <lg-barcode-add-product-widget></lg-barcode-add-product-widget>-->\n<!--          </ng-template>-->\n        </lg-tabs>\n      </lg-container>\n    </lg-fade-in>\n  `,\n  imports: [\n    EggsWidgetComponent,\n    ContainerComponent,\n    FlexRowComponent,\n    TitleComponent,\n    BarcodeSeekerWidgetComponent,\n    FadeInComponent,\n    TabDirective,\n    TabsComponent,\n    JellyWidgetComponent,\n    TranslatePipe\n]\n})\nexport class WidgetsPageComponent {\n}\n"],
  "mappings": "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",
  "names": []
}
