{
  "version": 3,
  "sources": ["src/app/features/invoices/view/list/categorized-invoices-list.token.ts", "src/app/features/invoices/view/list/invoices-list.component.ts"],
  "sourcesContent": ["import {inject, InjectionToken} from '@angular/core';\nimport {from, map, mergeMap, Observable, switchMap} from 'rxjs';\nimport {groupBy} from '../../../../shared/helpers/grouping.helper';\nimport {InvoicesRepository} from '../../service/Invoices.repository';\nimport {Invoice} from '../../service/Inovice/Invoice';\n\nexport const CATEGORIZED_INVOICES_LIST = new InjectionToken<Observable<any>>('CategorizedInvoicesList', {\n  factory: () => {\n    const invoicesRepository = inject(InvoicesRepository);\n    const invoices = from(invoicesRepository.loadToObservable()).pipe(\n      switchMap(() => invoicesRepository.items$),\n    );\n\n    return invoices.pipe(\n      map((invoices: Invoice[]) => invoices.toSorted((a: Invoice, b: Invoice) => a.prefix.localeCompare(b.prefix))),\n      map((invoices: Invoice[]) => groupBy(invoices, 'prefix')),\n      mergeMap(async (grouped: Record<string, Invoice[]>) => {\n          const list = [];\n\n          for (const groupedKey in grouped) {\n            list.push({\n              group_key: groupedKey,\n              items: grouped[groupedKey]?.toSorted((a, b) => a.createdAt > b.createdAt ? -1 : 1) || [],\n            });\n          }\n\n          if (!list.length) return [];\n\n          const [first, ...sortedList] = list.toSorted((a, b) => a.group_key > b.group_key ? 1 : -1);\n\n          // без категории всегда внизу\n          if (first?.group_key) {\n            return [first].concat(sortedList);\n          }\n\n          return sortedList.concat([first]);\n        }\n      ),\n    );\n  }\n})\n", "import {Component, computed, inject, OnInit, Signal} from '@angular/core';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {MatIcon} from '@angular/material/icon';\nimport {ContainerComponent} from '../../../../shared/view/layout/container.component';\nimport {TitleComponent} from '../../../../shared/view/layout/title.component';\nimport {CurrencyPipe, DatePipe, NgClass} from '@angular/common';\nimport {CardListComponent} from '../../../../shared/view/ui/card/card-list.component';\nimport {CardListItemDirective} from '../../../../shared/view/ui/card/card-list-item.directive';\nimport {Stores} from '../../../../shared/service/db/const/stores';\nimport {Router, RouterLink} from '@angular/router';\nimport {toSignal} from '@angular/core/rxjs-interop';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {ControlsBarComponent} from '../../../../shared/view/ui/controls-bar/controls-bar.component';\nimport {SelectionZoneService} from '../../../../shared/service/services/selection-zone.service';\nimport {SelectionToolsComponent} from '../../../controls/form/selection-tools.component';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {TranslatePipe, TranslateService} from '@ngx-translate/core';\nimport {CATEGORIZED_INVOICES_LIST} from './categorized-invoices-list.token';\nimport {InvoicesRepository} from '../../service/Invoices.repository';\nimport {FlexColumnComponent} from '../../../../shared/view/layout/flex-column.component';\nimport {Invoice} from '../../service/Inovice/Invoice';\nimport {stateToBadgeClassMap, stateToLabelMap} from '../../../../shared/service/const/badges.const';\nimport {USER_LANGUAGE} from '../../../../features/settings/service/providers/user-language.token';\n\nimport {PullDirective} from '../../../../shared/view/directives/pull.directive';\n\n@Component({\n  selector: 'lg-invoices-list',\n  standalone: true,\n  template: `\n    @if (invoices()?.length) {\n      <lg-controls-bar>\n        <lg-button (click)=\"onAddInvoice()\"\n                   [icon]=\"true\"\n                   [size]=\"'medium'\"\n                   [style]=\"'primary'\">\n          <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n        </lg-button>\n      </lg-controls-bar>\n    }\n\n    <lg-fade-in>\n      <lg-container>\n        <lg-title>\n          {{ 'invoices.list-title' | translate }}\n        </lg-title>\n\n        @if (invoices()?.length) {\n          <lg-selection-tools [selectionTypes]=\"['invoice']\"></lg-selection-tools>\n        }\n\n        @for (category of invoices(); track $index; let ic = $index) {\n          <lg-title [level]=\"3\">\n            {{ category?.group_key || ('without-category-label'|translate) }}\n          </lg-title>\n\n          <lg-card-list [mode]=\"selectionZoneService.selectionMode()\"\n                        (onSelected)=\"selectionZoneService.putSelected($event)\"\n                        (onDeleteOne)=\"deleteOne($event)\"\n                        [selectAll]=\"selectionZoneService.selectAll()\"\n                        [deselectAll]=\"selectionZoneService.deselectAll()\">\n            @for (invoice of category.items; track (invoice.uuid ?? '') + $index; let i = $index) {\n              <ng-template lgCardListItem\n                           [uuid]=\"invoice.uuid\"\n                           [bgColor]=\"invoice.overdue ? '#ffcfcb' : ''\"\n                           type=\"invoice\">\n                <lg-flex-column size=\"medium\">\n                  <lg-flex-row [mobileMode]=\"true\"\n                               size=\"small\"\n                               [left]=\"true\">\n                    <a [routerLink]=\"'/invoices/edit/' + invoice.uuid\" lgExpand>\n                      {{ invoice.name }} - #{{ invoice.prefix }}/{{ invoice.invoice_number }}\n                    </a>\n\n                    <div [ngClass]=\"stateBadgeClasses()?.[ic]?.[i]\">\n                      {{ stateLabels()?.[ic]?.[i] }}\n                    </div>\n\n                  </lg-flex-row>\n\n                  <lg-flex-row [mobileMode]=\"true\"\n                               size=\"small\"\n                               [left]=\"true\">\n\n                    @if (!invoice.cancelled) {\n                      <div>\n                        {{ 'invoices.date-due' | translate }}: {{ invoice.date_due | date:'shortDate' }}\n                      </div>\n                    }\n\n                    @if (invoice.issued) {\n                      <div>\n                        {{ 'invoices.days-left' | translate }}:\n                        @if (invoice.overdue) {\n                          {{ 'invoices.days-left.overdue' | translate }}\n                        } @else {\n                          {{ invoice.daysLeft }}\n                        }\n                      </div>\n                    }\n\n\n                    <small class=\"text-muted text-cursive\"\n                           lgPull\n                           [attr.title]=\"(invoice?.updatedAt || invoice?.createdAt) | date:'short'\">\n                      {{ 'edited-at-label'|translate }} {{ (invoice?.updatedAt || invoice?.createdAt) | timeAgo }}\n                    </small>\n                  </lg-flex-row>\n                </lg-flex-column>\n              </ng-template>\n            }\n          </lg-card-list>\n        } @empty {\n          <lg-flex-column position=\"center\"\n                          size=\"medium\">\n            {{ 'invoices.empty-state.text'|translate }}\n\n            <lg-button (click)=\"onAddInvoice()\"\n                       [style]=\"'primary'\"\n                       [size]=\"'medium'\">\n              {{ 'invoices.empty-state.btn'|translate }}\n            </lg-button>\n          </lg-flex-column>\n        }\n      </lg-container>\n    </lg-fade-in>\n  `,\n  imports: [\n    FlexRowComponent,\n    ButtonComponent,\n    MatIcon,\n    ContainerComponent,\n    TitleComponent,\n    CardListComponent,\n    CardListItemDirective,\n    RouterLink,\n    FadeInComponent,\n    ControlsBarComponent,\n    SelectionToolsComponent,\n    TimeAgoPipe,\n    ExpandDirective,\n    TranslatePipe,\n    FlexColumnComponent,\n    DatePipe,\n    NgClass,\n    PullDirective\n  ],\n  providers: [\n    SelectionZoneService,\n    CurrencyPipe,\n  ],\n  styles: [\n    `:host {\n      display: block;\n    }\n    `\n  ]\n})\nexport class InvoicesListComponent\n  implements OnInit {\n  constructor(\n    private _notificationsService: NotificationsService,\n    public selectionZoneService: SelectionZoneService,\n    private _invoicesRepository: InvoicesRepository,\n    private _router: Router,\n    private _translateService: TranslateService,\n  ) {\n  }\n\n  private _userLang = inject(USER_LANGUAGE);\n\n  nowDate = Date.now();\n  invoices: Signal<{\n    group_key: string\n    items: Invoice[]\n  }[]> = toSignal(inject(CATEGORIZED_INVOICES_LIST));\n  stateLabels = computed(() => {\n    // Добавляем зависимость от языка для реактивности\n    this._userLang();\n\n    return this.invoices()?.map(prefixGroup => {\n      return prefixGroup?.items?.map(invoice => {\n        const state = invoice!.state;\n        const key = stateToLabelMap[state];\n        return key ? this._translateService.instant(key) : this._translateService.instant('invoices.state.unknown');\n      })\n    });\n  });\n  stateBadgeClasses = computed(() => {\n    return this.invoices()?.map(prefixGroup => {\n      return prefixGroup?.items?.map(invoice => {\n        const state = invoice!.state;\n        return stateToBadgeClassMap[state || 'draft'];\n      })\n    });\n  });\n  protected readonly Stores = Stores;\n\n  deleteOne(\n    event?: {\n      uuid: string\n      type: string\n    }\n  ) {\n    if (!event?.uuid) {\n      return;\n    }\n    this._invoicesRepository.deleteOne(event!.uuid).then(() => {\n      this._notificationsService.success('invoices.deleted');\n      this.loadItems();\n    });\n  }\n\n  ngOnInit() {\n    this.loadItems();\n  }\n\n  loadItems() {\n    this._invoicesRepository.loadToObservable();\n  }\n\n  onAddInvoice() {\n    this._invoicesRepository.createEmpty().then((resp) => {\n      this._router.navigate(['/invoices/edit', resp]);\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMO,IAAM,4BAA4B,IAAI,eAAgC,2BAA2B;EACtG,SAAS,MAAK;AACZ,UAAM,qBAAqB,OAAO,kBAAkB;AACpD,UAAM,WAAW,KAAK,mBAAmB,iBAAgB,CAAE,EAAE,KAC3D,UAAU,MAAM,mBAAmB,MAAM,CAAC;AAG5C,WAAO,SAAS,KACd,IAAI,CAACA,cAAwBA,UAAS,SAAS,CAAC,GAAY,MAAe,EAAE,OAAO,cAAc,EAAE,MAAM,CAAC,CAAC,GAC5G,IAAI,CAACA,cAAwB,QAAQA,WAAU,QAAQ,CAAC,GACxD,SAAS,OAAO,YAAsC;AAClD,YAAM,OAAO,CAAA;AAEb,iBAAW,cAAc,SAAS;AAChC,aAAK,KAAK;UACR,WAAW;UACX,OAAO,QAAQ,UAAU,GAAG,SAAS,CAAC,GAAG,MAAM,EAAE,YAAY,EAAE,YAAY,KAAK,CAAC,KAAK,CAAA;SACvF;MACH;AAEA,UAAI,CAAC,KAAK;AAAQ,eAAO,CAAA;AAEzB,YAAM,CAAC,OAAO,GAAG,UAAU,IAAI,KAAK,SAAS,CAAC,GAAG,MAAM,EAAE,YAAY,EAAE,YAAY,IAAI,EAAE;AAGzF,UAAI,OAAO,WAAW;AACpB,eAAO,CAAC,KAAK,EAAE,OAAO,UAAU;MAClC;AAEA,aAAO,WAAW,OAAO,CAAC,KAAK,CAAC;IAClC,CAAC,CACF;EAEL;CACD;;;;mDCwB4B,MAAE;;;;AA9BzB,IAAA,yBAAA,GAAA,iBAAA,EAAiB,GAAA,aAAA,CAAA;AACJ,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAIhC,IAAA,oBAAA,GAAA,YAAA,CAAA;AACF,IAAA,uBAAA,EAAY;;;AAFD,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA;AAFA,IAAA,qBAAA,QAAA,IAAA,EAAa,QAAA,QAAA;;;;;AAetB,IAAA,oBAAA,GAAA,sBAAA,CAAA;;;AAAoB,IAAA,qBAAA,kBAAA,0BAAA,GAAA,GAAA,CAAA;;;;;AAqCR,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,iBAAA,CAAA;;;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,mBAAA,GAAA,MAAA,sBAAA,GAAA,GAAA,WAAA,UAAA,WAAA,GAAA,GAAA;;;;;AAQE,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,4BAAA,GAAA,GAAA;;;;;AAEA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,WAAA,UAAA,GAAA;;;;;AALJ,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,iBAAA,CAAA;;AACA,IAAA,8BAAA,GAAA,sFAAA,GAAA,CAAA,EAAuB,GAAA,sFAAA,GAAA,CAAA;AAKzB,IAAA,uBAAA;;;;AANE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,oBAAA,GAAA,IAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,WAAA,UAAA,IAAA,CAAA;;;;;AA3BR,IAAA,yBAAA,GAAA,kBAAA,CAAA,EAA8B,GAAA,eAAA,CAAA,EAGD,GAAA,KAAA,CAAA;AAEvB,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAM;AAIR,IAAA,yBAAA,GAAA,eAAA,CAAA;AAIE,IAAA,8BAAA,GAAA,wEAAA,GAAA,GAAA,KAAA;AAMA,IAAA,8BAAA,GAAA,wEAAA,GAAA,GAAA,KAAA;AAYA,IAAA,yBAAA,GAAA,SAAA,EAAA;;AAGE,IAAA,iBAAA,EAAA;;;AACF,IAAA,uBAAA,EAAQ,EACI;;;;;;;;;;AAxCD,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,QAAA,IAAA;AAG3B,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,oBAAA,WAAA,IAAA;AACD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,WAAA,MAAA,QAAA,WAAA,QAAA,KAAA,WAAA,gBAAA,GAAA;AAGG,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,WAAA,OAAA,kBAAA,MAAA,OAAA,OAAA,SAAA,kBAAA,KAAA,OAAA,OAAA,SAAA,kBAAA,EAAA,kBAAA,CAAA;AACH,IAAA,oBAAA;AAAA,IAAA,6BAAA,MAAA,WAAA,OAAA,YAAA,MAAA,OAAA,OAAA,SAAA,kBAAA,KAAA,OAAA,OAAA,SAAA,kBAAA,EAAA,kBAAA,GAAA,GAAA;AAKS,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,EAAmB,QAAA,IAAA;AAI9B,IAAA,oBAAA;AAAA,IAAA,wBAAA,CAAA,WAAA,YAAA,IAAA,EAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,wBAAA,WAAA,SAAA,IAAA,EAAA;AAcO,IAAA,oBAAA;;AACL,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,IAAA,IAAA,iBAAA,GAAA,KAAA,sBAAA,IAAA,KAAA,cAAA,OAAA,OAAA,WAAA,eAAA,cAAA,OAAA,OAAA,WAAA,UAAA,GAAA,GAAA;;;;;AA3CR,IAAA,qBAAA,GAAA,0DAAA,IAAA,IAAA,eAAA,CAAA;;;;AACa,IAAA,qBAAA,QAAA,WAAA,IAAA,EAAqB,WAAA,WAAA,UAAA,YAAA,EAAA;;;;;;AAXtC,IAAA,yBAAA,GAAA,YAAA,CAAA;AACE,IAAA,iBAAA,CAAA;;AACF,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,gBAAA,CAAA;AACc,IAAA,qBAAA,cAAA,SAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAc,OAAA,qBAAA,YAAA,MAAA,CAAwC;IAAA,CAAA,EAAC,eAAA,SAAA,yEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBACxC,OAAA,UAAA,MAAA,CAAiB;IAAA,CAAA;AAG5C,IAAA,2BAAA,GAAA,4CAAA,GAAA,GAAA,MAAA,GAAA,UAAA;AAkDF,IAAA,uBAAA;;;;;AA3DU,IAAA,qBAAA,SAAA,CAAA;AACR,IAAA,oBAAA;AAAA,IAAA,6BAAA,MAAA,eAAA,OAAA,OAAA,YAAA,cAAA,sBAAA,GAAA,GAAA,wBAAA,GAAA,GAAA;AAGY,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,qBAAA,cAAA,CAAA,EAA6C,aAAA,OAAA,qBAAA,UAAA,CAAA,EAGC,eAAA,OAAA,qBAAA,YAAA,CAAA;AAE1D,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,KAAA;;;;;;AAoDF,IAAA,yBAAA,GAAA,kBAAA,CAAA;AAEE,IAAA,iBAAA,CAAA;;AAEA,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAW,IAAA,qBAAA,SAAA,SAAA,uEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAGhC,IAAA,iBAAA,CAAA;;AACF,IAAA,uBAAA,EAAY;;;AANZ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,2BAAA,GAAA,GAAA;AAGW,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA;AACA,IAAA,qBAAA,QAAA,QAAA;AACT,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,0BAAA,GAAA,GAAA;;;AAsCR,IAAO,wBAAP,MAAO,uBAAqB;EAGtB;EACD;EACC;EACA;EACA;EALV,YACU,uBACD,sBACC,qBACA,SACA,mBAAmC;AAJnC,SAAA,wBAAA;AACD,SAAA,uBAAA;AACC,SAAA,sBAAA;AACA,SAAA,UAAA;AACA,SAAA,oBAAA;EAEV;EAEQ,YAAY,OAAO,aAAa;EAExC,UAAU,KAAK,IAAG;EAClB,WAGO,SAAS,OAAO,yBAAyB,CAAC;EACjD,cAAc,SAAS,MAAK;AAE1B,SAAK,UAAS;AAEd,WAAO,KAAK,SAAQ,GAAI,IAAI,iBAAc;AACxC,aAAO,aAAa,OAAO,IAAI,aAAU;AACvC,cAAM,QAAQ,QAAS;AACvB,cAAM,MAAM,gBAAgB,KAAK;AACjC,eAAO,MAAM,KAAK,kBAAkB,QAAQ,GAAG,IAAI,KAAK,kBAAkB,QAAQ,wBAAwB;MAC5G,CAAC;IACH,CAAC;EACH,GAAC,GAAA,YAAA,CAAA,EAAA,WAAA,cAAA,CAAA,IAAA,CAAA,CAAA;EACD,oBAAoB,SAAS,MAAK;AAChC,WAAO,KAAK,SAAQ,GAAI,IAAI,iBAAc;AACxC,aAAO,aAAa,OAAO,IAAI,aAAU;AACvC,cAAM,QAAQ,QAAS;AACvB,eAAO,qBAAqB,SAAS,OAAO;MAC9C,CAAC;IACH,CAAC;EACH,GAAC,GAAA,YAAA,CAAA,EAAA,WAAA,oBAAA,CAAA,IAAA,CAAA,CAAA;EACkB,SAAS;EAE5B,UACE,OAGC;AAED,QAAI,CAAC,OAAO,MAAM;AAChB;IACF;AACA,SAAK,oBAAoB,UAAU,MAAO,IAAI,EAAE,KAAK,MAAK;AACxD,WAAK,sBAAsB,QAAQ,kBAAkB;AACrD,WAAK,UAAS;IAChB,CAAC;EACH;EAEA,WAAQ;AACN,SAAK,UAAS;EAChB;EAEA,YAAS;AACP,SAAK,oBAAoB,iBAAgB;EAC3C;EAEA,eAAY;AACV,SAAK,oBAAoB,YAAW,EAAG,KAAK,CAAC,SAAQ;AACnD,WAAK,QAAQ,SAAS,CAAC,kBAAkB,IAAI,CAAC;IAChD,CAAC;EACH;;qCAnEW,wBAAqB,4BAAA,oBAAA,GAAA,4BAAA,oBAAA,GAAA,4BAAA,kBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,gBAAA,CAAA;EAAA;yEAArB,wBAAqB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,UAAA,CAAA,6BAXrB;IACT;IACA;GACD,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,YAAA,UAAA,QAAA,QAAA,GAAA,CAAA,GAAA,SAAA,QAAA,MAAA,GAAA,CAAA,eAAA,SAAA,YAAA,KAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,cAAA,eAAA,QAAA,aAAA,aAAA,GAAA,CAAA,kBAAA,IAAA,QAAA,WAAA,GAAA,QAAA,SAAA,GAAA,CAAA,QAAA,QAAA,GAAA,CAAA,QAAA,SAAA,GAAA,cAAA,MAAA,GAAA,CAAA,YAAA,IAAA,GAAA,YAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,UAAA,IAAA,GAAA,cAAA,cAAA,GAAA,CAAA,GAAA,SAAA,MAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AAxHC,MAAA,8BAAA,GAAA,8CAAA,GAAA,GAAA,iBAAA;AAWA,MAAA,yBAAA,GAAA,YAAA,EAAY,GAAA,cAAA,EACI,GAAA,UAAA;AAEV,MAAA,iBAAA,CAAA;;AACF,MAAA,uBAAA;AAEA,MAAA,8BAAA,GAAA,8CAAA,GAAA,GAAA,sBAAA,CAAA;AAIA,MAAA,2BAAA,GAAA,sCAAA,GAAA,GAAA,MAAA,MAAA,kCAAA,OAAA,2CAAA,GAAA,GAAA,kBAAA,CAAA;AAyEF,MAAA,uBAAA,EAAe;;;;;AA9FjB,MAAA,0BAAA,UAAA,IAAA,SAAA,MAAA,OAAA,OAAA,QAAA,UAAA,IAAA,EAAA;AAcM,MAAA,oBAAA,CAAA;AAAA,MAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,qBAAA,GAAA,GAAA;AAGF,MAAA,oBAAA,CAAA;AAAA,MAAA,0BAAA,UAAA,IAAA,SAAA,MAAA,OAAA,OAAA,QAAA,UAAA,IAAA,EAAA;AAIA,MAAA,oBAAA;AAAA,MAAA,qBAAA,IAAA,SAAA,CAAU;;;IA6Ed;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IAEA;IAEA;IACA;IANA;IAEA;IAEA;EAAQ,GAAA,QAAA,CAAA,uGAAA,EAAA,CAAA;;;sEAeC,uBAAqB,CAAA;UApIjC;uBACW,oBAAkB,YAChB,MAAI,UACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiGT,SACQ;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,WACU;MACT;MACA;OACD,QAAA,CAAA,kTAAA,EAAA,CAAA;;;;6EAQU,uBAAqB,EAAA,WAAA,yBAAA,UAAA,kEAAA,YAAA,IAAA,CAAA;AAAA,GAAA;",
  "names": ["invoices"]
}
