{
  "version": 3,
  "sources": ["src/app/shared/view/ui/form/control-group.component.ts", "src/app/shared/view/ui/form/tags-control.component.ts", "src/app/features/recipes/view/add-recipe/add-recipe-form.component.ts", "src/app/features/recipes/view/add-recipe/add-recipe-form.component.html", "src/app/features/recipes/view/add-recipe/add-recipe.component.ts"],
  "sourcesContent": ["import {Component, input} from '@angular/core';\n\n@Component({\n  selector: 'lg-control-group',\n  standalone: true,\n  template: `\n      <div class=\"control-group\">\n          @if (label()) {\n              <p class=\"control-group__label\"> {{ label() }} </p>\n          }\n          <div class=\"control-group__content\">\n              <ng-content></ng-content>\n          </div>\n      </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex: 1;\n      }\n\n      .control-group {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n      }\n\n      .control-group__label {\n        font-size: 1.2rem;\n        margin: 0;\n      }\n\n      .control-group__content {\n        display: flex;\n        gap: 8px;\n        align-items: flex-end;\n      }\n\n      .control-group__content > * {\n        flex: 1;\n      }\n    `\n  ]\n})\nexport class ControlGroupComponent {\n  constructor() {\n  }\n\n  label = input('');\n}\n", "import {\n  Component,\n  forwardRef, Input,\n  input,\n  OnInit,\n  Optional,\n  output,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NgLabelTemplateDirective,\n  NgMultiLabelTemplateDirective,\n  NgOptionTemplateDirective,\n  NgSelectComponent\n} from '@ng-select/ng-select';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {SelectResourcesService} from '../../../service/services/select-resources.service';\nimport {NgStyle} from '@angular/common';\nimport {Tag} from '../../../../features/settings/service/models/Tag';\n\n\nexport interface TagsItem {\n  value: unknown\n}\n\n@Component({\n  selector: 'lg-tags-control',\n  standalone: true,\n  template: `\n      <div class=\"tags-control\">\n          <ng-select (change)=\"onChangeSelect($event)\"\n                     (ngModelChange)=\"onChangeInput($event)\"\n                     [addTag]=\"addTagFn\"\n                     [appendTo]=\"'body'\"\n                     [compareWith]=\"compareWith\"\n                     [items]=\"loadedList()\"\n                     [multiple]=\"multi()\"\n                     [ngModel]=\"value\"\n                     [placeholder]=\"placeholder\"\n                     [searchFn]=\"searchFn\">\n              <ng-template let-item=\"item\" ng-label-tmp>\n                  {{ $any(item)?.name ?? $any(item)?.label ?? item }}\n              </ng-template>\n              <ng-template let-item=\"item\" ng-option-tmp>\n                  {{ $any(item)?.name ?? $any(item)?.label ?? item }}\n              </ng-template>\n              <ng-template let-clear=\"clear\" let-items=\"items\" ng-multi-label-tmp>\n                  @for (item of items;track $any(item)?.name ?? $any(item)?.label ?? item) {\n                      <div class=\"ng-value\"\n                           [ngStyle]=\"{background: $any(item)?.color ? $any(item)?.color : null}\">\n                          <span class=\"ng-value-label\">\n                              {{ $any(item)?.name ?? $any(item)?.label ?? item }}\n                          </span>\n                          <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">Ã—</span>\n                      </div>\n                  }\n\n              </ng-template>\n          </ng-select>\n      </div>\n  `,\n  imports: [\n    NgSelectComponent,\n    FormsModule,\n    NgOptionTemplateDirective,\n    NgLabelTemplateDirective,\n    NgMultiLabelTemplateDirective,\n    NgStyle\n],\n  styles: [\n    `\n      lg-tags-control {\n        display: flex;\n        flex: 1;\n        min-width: 150px;\n      }\n\n      .tags-control {\n        flex: 1;\n        width: 100%;\n\n        .ng-select .ng-select-container {\n          height: 51px;\n        }\n\n        .ng-select .ng-select-container {\n          border: none;\n          border-radius: 12px;\n          background-color: var(--control-bg);\n\n          .ng-input {\n            top: 16px !important;\n\n            & > input {\n              color: var(--text);\n              font-family: inherit;\n              font-size: inherit;\n            }\n          }\n        }\n\n        .ng-dropdown-panel {\n          border: none;\n          box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);\n          border-radius: 12px;\n          overflow: hidden;\n\n          .ng-option {\n            padding: 16px;\n            border-radius: 12px;\n          }\n        }\n      }\n\n    `\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TagsControlComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TagsControlComponent\n  implements ControlValueAccessor, OnInit {\n  constructor(\n    @Optional() private _selectResourcesService: SelectResourcesService,\n  ) {\n  }\n\n  @Input() placeholder: string = '';\n  resource = input<string>('');\n  autoLoad = input<boolean>(false);\n  multi = input<boolean>(false);\n  loadedList = signal([]);\n  onSelected = output<unknown>();\n  value?: unknown = null\n  selectComponent = viewChild(NgSelectComponent);\n\n  addTagFn(name: string) {\n    return Tag.fromRaw(name);\n  };\n\n  onChange: (value: unknown) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  searchFn = (term: string, item: TagsItem) => {\n    const val = item as any;\n    return val?.toString().toLowerCase().includes(term.toLowerCase())\n  }\n\n  compareWith = (a: TagsItem, b: TagsItem) => {\n    const valA = a as any;\n    const valB = b as any;\n\n    return valA === valB\n  }\n\n  writeValue(value: unknown): void {\n    this.change(value);\n  }\n\n  change(value: unknown) {\n    if (Array.isArray(value)) {\n      this.value = value.map((item) => Tag.fromRaw(item).toDTO());\n    } else {\n      this.value = Tag.fromRaw(value).toDTO();\n    }\n\n    console.log('new tags value', value);\n    this.onChange(this.value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeInput(value: unknown) {\n    this.change(value);\n  }\n\n  onChangeSelect(value: unknown) {\n    this.change(value);\n    this.onSelected.emit(value);\n  }\n\n  ngOnInit() {\n    this._selectResourcesService.register(this.resource());\n    if (this.autoLoad()) {\n      this._selectResourcesService.load([this.resource()]);\n    }\n    this._selectResourcesService.subscribe((registry) => {\n      const items = registry.get(this.resource())?.list ?? [];\n      this.loadedList.set(items as any);\n    });\n  }\n\n  reload() {\n    return this._selectResourcesService.load([this.resource()], true);\n  }\n}\n", "import {AfterViewInit, Component, effect, input, OnInit, signal, viewChild, viewChildren} from '@angular/core';\nimport {FormArray, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators} from '@angular/forms';\n\n\nimport {ControlGroupComponent} from '../../../../shared/view/ui/form/control-group.component';\nimport {FlexColumnComponent} from '../../../../shared/view/ui/layout/flex-column.component';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {TextareaComponent} from '../../../../shared/view/ui/form/textarea.component';\nimport {debounceTime} from 'rxjs';\nimport {RecipesRepository} from '../../service/recipes.repository';\nimport {MultiselectComponent} from '../../../../shared/view/ui/form/multiselect.component';\nimport {SelectResourcesService} from '../../../../shared/service/services/select-resources.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NumberInputComponent} from '../../../../shared/view/ui/form/number-input.component';\nimport {ControlsRowComponent} from '../../../../shared/view/ui/form/controls-row.component';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {ParseMathDirective} from '../../../../shared/view/directives/parse-math.directive';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {TooltipComponent} from '../../../../shared/view/ui/tooltip.component';\nimport {ProductWidgetsComponent} from '../../../../shared/view/widgets/product-widgets.component';\nimport {injectParams} from '../../../../shared/helpers/route.helpers';\nimport {ChipsListComponent} from '../../../../shared/view/ui/form/chips-list.component';\nimport {AutocompleteComponent} from '../../../../shared/view/ui/form/autocomplete.component';\nimport {Recipe} from '../../service/models/Recipe';\nimport {Ingredient} from '../../service/models/Ingredient';\n\nimport {recipeToFormValue} from '../../../../shared/helpers/recipe.helpers';\nimport {RecipeDTO} from '../../service/Recipe.scheme';\nimport {MatIcon} from '@angular/material/icon';\nimport {TranslatePipe} from \"@ngx-translate/core\";\n\nimport {UnitSwitcherComponent} from '../../../../shared/view/ui/unit-switcher.component';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {ControlExtraTemplateDirective} from \"../../../../shared/view/ui/form/control-extra-template.directive\";\nimport {TagsControlComponent} from '../../../../shared/view/ui/form/tags-control.component';\nimport {FlexRowComponent} from '../../../../shared/view/ui/layout/flex-row.component';\nimport {ControlComponent} from \"../../../../shared/view/ui/form/control-item/control.component\";\n\n\n@Component({\n  selector: 'lg-add-recipe-form',\n  standalone: true,\n  templateUrl: './add-recipe-form.component.html',\n  imports: [\n    ReactiveFormsModule,\n    ControlGroupComponent,\n    FlexColumnComponent,\n    ButtonComponent,\n    TextareaComponent,\n    MultiselectComponent,\n    NumberInputComponent,\n    ControlsRowComponent,\n    ExpandDirective,\n    ParseMathDirective,\n    ChipsListComponent,\n    AutocompleteComponent,\n    FormsModule,\n    MatIcon,\n    TranslatePipe,\n    UnitSwitcherComponent,\n    CardComponent,\n    ControlExtraTemplateDirective,\n    TagsControlComponent,\n    FlexRowComponent,\n    ControlComponent\n  ],\n  providers: [\n    {\n      provide: SelectResourcesService,\n      useClass: SelectResourcesService,\n    }\n  ],\n})\nexport class AddRecipeFormComponent\n  implements OnInit,\n    AfterViewInit {\n  constructor(\n    public _recipesRepository: RecipesRepository,\n    public _selectResourcesService: SelectResourcesService,\n    private _router: Router,\n    private _aRoute: ActivatedRoute,\n    private _notificationsService: NotificationsService\n  ) {\n  }\n\n  recipe = input<Recipe | undefined>(undefined);\n  uuid = injectParams<string>('uuid');\n  form = new FormGroup({\n    name: new FormControl<string | null>(null, Validators.required),\n    description: new FormControl(''),\n    outcome_amount: new FormControl<number | string | null>(null),\n    outcome_unit: new FormControl<string>(''),\n    ingredients: new FormArray([\n      this._getIngredientGroup(),\n    ]),\n    category_id: new FormControl<any>(null),\n    tags: new FormControl<string[]>([]),\n  }, (group) => {\n    const recipeTmpModel = Recipe.fromRaw(group.value);\n\n    if (recipeTmpModel.outcomeAmountGreaterThanIngredients) {\n      return {outcomeAmountGreaterThanIngredients: true};\n    }\n    return null;\n  })\n  recipeFieldState = signal<Record<number, boolean>>({});\n  tooltipComponent = viewChildren<TooltipComponent>('tooltipComponent');\n  productsWidget = viewChildren<ProductWidgetsComponent>('products');\n  productsSelector = viewChildren<MultiselectComponent>('productsSelector');\n  nameField = viewChild<AutocompleteComponent>('nameField');\n  topCategories = signal<any[]>([]);\n  private recipeEffect = effect(() => {\n    if (this.recipe()) {\n      this.fillForm(this.recipe()!);\n    }\n  });\n\n  get ingredients() {\n    return this.form.get('ingredients') as FormArray;\n  }\n\n  private get _formValid() {\n    return this.form.valid && !this.checkCycleRecipe(this.form.getRawValue().ingredients, this.uuid());\n  }\n\n  fillForm(\n    recipe?: Recipe\n  ) {\n    this.form.reset({\n      ingredients: [],\n    });\n    this.ingredients.clear();\n\n    if (!recipe) {\n      return;\n    }\n    console.log('newformValue', recipeToFormValue(recipe));\n    this.form.reset({\n      ...recipeToFormValue(recipe),\n      ingredients: [],\n    });\n\n    if (recipe.ingredients.length) {\n      recipe.ingredients.forEach((ingredient: Ingredient, index: number) => {\n        this.ingredients.push(this._getIngredientGroup(ingredient));\n\n        if (ingredient.recipe_id) {\n          this.openRecipeField(index);\n        }\n      })\n    } else {\n      this.ingredients.push(this._getIngredientGroup());\n    }\n\n    this.form.updateValueAndValidity();\n    this.form.markAsPristine();\n  }\n\n  resetForm(\n    recipe?: Recipe\n  ) {\n    this.fillForm(recipe);\n    this._loadUsingHistory();\n    this.form.markAsPristine();\n  }\n\n  validateForm() {\n    if (!this._formValid) {\n      this._notificationsService.error(this._notificationsService.parseFormErrors(this.form).join(', '));\n      return false;\n    }\n    return true\n  }\n\n  addLast() {\n    const lastControl = this.ingredients.at(this.ingredients.length - 1);\n    // if last control is empty, skip, if not, add new control\n    if (lastControl.value.name || lastControl.value.amount || lastControl.value.product_id) {\n      this.addIngredient();\n    }\n  }\n\n  ngOnInit() {\n    this._loadUsingHistory();\n    this.form.valueChanges.pipe(\n      debounceTime(100),\n    ).subscribe({\n      next: values => {\n        console.log('form values', values);\n        if (!this.form.dirty) {\n          return\n        }\n        this.recipe()?.update(this.form.getRawValue());\n        const hasCycledRecipe = this.checkCycleRecipe(this.form.getRawValue().ingredients, this.uuid());\n        if (hasCycledRecipe) {\n          this._notificationsService.error('notifications.recipe.cycle-error');\n        }\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this._selectResourcesService.load().then(resources => {\n\n    });\n\n    if (!this.recipe()?.uuid) {\n      this.nameField()!.focus();\n    }\n  }\n\n  addIngredient() {\n    this.ingredients.push(this._getIngredientGroup());\n    this.form.markAsDirty();\n  }\n\n  deleteIngredient(index: number) {\n    this.ingredients.removeAt(index);\n    this.form.markAsDirty();\n  }\n\n  onIngredientSelected(\n    amount: NumberInputComponent,\n    index: number,\n    clearField: string | string[],\n  ) {\n    amount.focus();\n\n    const value = this.ingredients.at(index).value;\n\n    this.ingredients.at(index).patchValue({\n      ...(Array.isArray(clearField) ? clearField.reduce((acc, field) => ({\n        ...acc,\n        [field]: null\n      }), {}) : {[clearField]: null}),\n      unit: value.product_id?.unit || value.recipe_id?.unit || 'gram'\n    });\n  }\n\n  openRecipeField(\n    index: number\n  ) {\n    this.recipeFieldState.update((value) => {\n      return {\n        ...value,\n        [index]: true,\n      }\n    });\n  }\n\n  closeRecipeField(\n    index: number\n  ) {\n    this.recipeFieldState.update((value) => {\n      return {\n        ...value,\n        [index]: false,\n      }\n    });\n  }\n\n  checkCycleRecipe(\n    ingredients: RecipeDTO['ingredients'],\n    recipeUUID: string\n  ) {\n    let match = false;\n    for (const ingr of ingredients) {\n      const hasSubRecipe = ingr.recipe_id?.uuid;\n      if (hasSubRecipe && hasSubRecipe === recipeUUID) {\n        match = true;\n        break;\n      }\n    }\n    return match;\n  }\n\n  private _loadUsingHistory() {\n    this._recipesRepository.getTopCategories().then(categories => {\n      this.topCategories.set(categories.map(category => ({\n        label: category.name,\n        value: {\n          uuid: category.uuid,\n          name: category.name,\n        },\n      })));\n    });\n  }\n\n  private _getIngredientGroup(\n    ingredient?: Recipe['ingredients'][number]\n  ) {\n    return new FormGroup({\n      name: new FormControl(ingredient?.name),\n      amount: new FormControl(ingredient?.amount?.toString() ?? null),\n      product_id: new FormControl(ingredient?.product_id ? ingredient.product_id : null),\n      recipe_id: new FormControl(ingredient?.recipe_id ? ingredient.recipe_id : null),\n      unit: new FormControl(ingredient?.unit ?? 'gram'),\n    }, (group) => {\n      const ingredient = Ingredient.fromRaw(group.value);\n      if (ingredient.allEmpty) {\n        return null\n      }\n      if (ingredient.typeSelected && !ingredient.amountValid) {\n        return {\n          ingredientAmountRequired: true\n        }\n      }\n      if (!this.uuid) return null;\n      const uuid = this.uuid();\n      if (this.checkCycleRecipe([group.value], uuid)) {\n        return {cycleRecipe: true};\n      }\n\n      if (!ingredient.typeSelected) {\n        return {ingredientRequired: true};\n      }\n\n      return null;\n    });\n  }\n}\n", "<form [formGroup]=\"form\">\n  <lg-flex-column>\n    <lg-card>\n      <lg-flex-column [position]=\"'start'\">\n        <lg-control [label]=\"'recipe.form.name.placeholder'|translate\"\n                    lgExpand>\n          <lg-autocomplete #nameField\n                           [key]=\"'name'\"\n                           [resource]=\"'recipes-names'\"\n                           appendTo=\"body\"\n                           formControlName=\"name\"\n                           placeholdeÐº=\"\"\n          ></lg-autocomplete>\n        </lg-control>\n\n        <lg-control [label]=\"'recipe.form.description.placeholder'|translate\"\n                    lgExpand>\n          <lg-textarea formControlName=\"description\"\n                       lgExpand\n                       placeholder=\"\"></lg-textarea>\n\n        </lg-control>\n      </lg-flex-column>\n    </lg-card>\n    <lg-card>\n\n      <lg-flex-column [position]=\"'start'\">\n        <lg-control [label]=\"'recipe.form.outcome_amount.placeholder'|translate\"\n                    lgExpand>\n          <lg-number-input #amount\n                           formControlName=\"outcome_amount\"\n                           lgParseMath\n                           placeholder=\"\">\n            <ng-template lgExtraTpl place=\"after\">\n              <lg-unit-switcher formControlName=\"outcome_unit\">\n              </lg-unit-switcher>\n            </ng-template>\n          </lg-number-input>\n        </lg-control>\n\n        <lg-control-group label=\"{{ 'recipe.form.ingredients.label'|translate }}\" lgExpand>\n          <lg-flex-column [position]=\"'start'\">\n            <lg-flex-column [size]=\"'medium'\" formArrayName=\"ingredients\" lgExpand>\n              @for (control of ingredients.controls; track (control.value.amount + i + 1); let i = $index,\n                last = $last) {\n                <ng-container [formGroupName]=\"i\">\n                  <lg-controls-row [mobileMode]=\"true\">\n                    <lg-flex-column [size]=\"'small'\">\n\n                      <ng-container ngProjectAs=\"labelTpl\">\n                        <lg-button (click)=\"closeRecipeField(i)\"\n                                   [flat]=\"true\"\n                                   [size]=\"'small'\"\n                                   [active]=\"!recipeFieldState()[i]\">\n                          {{ 'recipe.form.ingredients.product_id.label'|translate }}\n                        </lg-button>\n                      </ng-container>\n\n                      <ng-container ngProjectAs=\"afterLabelTpl\">\n                        <lg-button (click)=\"openRecipeField(i)\"\n                                   [flat]=\"true\"\n                                   [size]=\"'small'\"\n                                   [active]=\"recipeFieldState()[i]\">\n                          {{ 'recipe.form.ingredients.recipe_id.label'|translate }}\n                        </lg-button>\n                      </ng-container>\n\n                      @if (recipeFieldState()[i]) {\n                        <lg-multiselect [resource]=\"'recipes'\"\n                                        (onSelected)=\"onIngredientSelected(amount, i, ['product_id', 'name'])\"\n                                        [autoLoad]=\"true\"\n                                        appendTo=\"body\"\n                                        formControlName=\"recipe_id\"></lg-multiselect>\n                      } @else {\n                        <lg-multiselect [resource]=\"'products'\"\n                                        (onSelected)=\"onIngredientSelected(amount, i, ['recipe_id', 'name'])\"\n                                        [autoLoad]=\"true\"\n                                        #productsSelector\n                                        appendTo=\"body\"\n                                        formControlName=\"product_id\">\n                        </lg-multiselect>\n                      }\n                    </lg-flex-column>\n\n                    <lg-number-input #amount\n                                     lgParseMath\n                                     (onKeydown)=\"addLast()\"\n                                     [placeholder]=\"'recipe.form.ingredients.amount.placeholder'|translate:{unit:(form.value.ingredients?.[i]?.unit || 'gram')}\"\n                                     formControlName=\"amount\">\n                      <ng-template lgExtraTpl place=\"after\">\n                        <lg-unit-switcher formControlName=\"unit\">\n                        </lg-unit-switcher>\n                      </ng-template>\n                    </lg-number-input>\n\n                    <ng-container ngProjectAs=\"rowActions\">\n                      <lg-button [style]=\"'danger'\"\n                                 [size]=\"'tiny'\"\n                                 [icon]=\"true\"\n                                 (click)=\"deleteIngredient(i)\">\n                        <mat-icon aria-hidden=\"false\" fontIcon=\"close\"></mat-icon>\n                      </lg-button>\n                    </ng-container>\n                  </lg-controls-row>\n                  @if (!last) {\n                    <hr size=\"2\" lgExpand color=\"#fafafa\"/>\n                  }\n                </ng-container>\n              }\n            </lg-flex-column>\n\n            <lg-button (click)=\"addIngredient()\"\n                       [size]=\"'small'\"\n                       [style]=\"'success'\">\n              {{ 'recipe.form.ingredients.add-btn'|translate }}\n            </lg-button>\n          </lg-flex-column>\n        </lg-control-group>\n      </lg-flex-column>\n    </lg-card>\n\n    <lg-flex-row [equal]=\"true\" [mobileMode]=\"true\" style=\"--control-bg: var(--hr-bg-strong)\">\n      <lg-control [label]=\"'recipe.form.category.placeholder'|translate\">\n        <lg-flex-column [position]=\"'start'\" [size]=\"'medium'\">\n          <lg-multiselect #categorySelect\n                          [resource]=\"'recipes-categories'\"\n                          appendTo=\"body\"\n                          formControlName=\"category_id\"\n                          lgExpand></lg-multiselect>\n\n          @if (topCategories().length) {\n            <lg-chips-list [control]=\"categorySelect\" [items]=\"topCategories()\"></lg-chips-list>\n          }\n        </lg-flex-column>\n      </lg-control>\n\n      <lg-control [label]=\"'recipe.form.tags.placeholder'|translate\">\n        <lg-tags-control [multi]=\"true\"\n                         [resource]=\"'tags'\"\n                         formControlName=\"tags\"></lg-tags-control>\n      </lg-control>\n    </lg-flex-row>\n  </lg-flex-column>\n</form>\n", "import {AfterViewInit, Component, computed, inject, OnInit, signal, viewChild} from '@angular/core';\nimport {ContainerComponent} from '../../../../shared/view/ui/layout/container/container.component';\nimport {TitleComponent} from '../../../../shared/view/ui/layout/title/title.component';\nimport {AddRecipeFormComponent} from './add-recipe-form.component';\nimport {ActivatedRoute, RouterLink} from '@angular/router';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {FlexRowComponent} from '../../../../shared/view/ui/layout/flex-row.component';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {RecipesRepository} from '../../../../shared/service/repositories';\nimport {DraftForm, NotificationsService} from '../../../../shared/service/services';\nimport {combineLatest, debounceTime} from 'rxjs';\nimport {ShrinkDirective} from '../../../../shared/view/directives/shrink.directive';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {Recipe} from '../../service/models/Recipe';\nimport {FlexColumnComponent} from '../../../../shared/view/ui/layout/flex-column.component';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {errorHandler} from '../../../../shared/helpers';\nimport {InlineSeparatedGroupComponent, InlineSeparatedGroupDirective} from '../../../../shared/view/ui/inline-separated-group.component';\nimport {ROUTER_MANAGER} from '../../../../shared/service/providers/router-manager.provider';\nimport {AnalyticsService} from '../../../../shared/service/services/analytics.service';\nimport {SelfStartDirective} from '../../../../shared/view/directives/self-start.directive';\n\n\n@Component({\n  selector: 'app-add-recipe',\n  standalone: true,\n  imports: [\n    ContainerComponent,\n    TitleComponent,\n    AddRecipeFormComponent,\n    ButtonComponent,\n    FlexRowComponent,\n    FadeInComponent,\n    ShrinkDirective,\n    TimeAgoPipe,\n    FlexColumnComponent,\n    TranslatePipe,\n    RouterLink,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective,\n    SelfStartDirective\n  ],\n  template: `\n\n      <lg-fade-in>\n          <lg-container>\n              <lg-flex-column size=\"medium\">\n                  @if (addedRecipeInformerUUID();as uuid) {\n                      <p>\n                        {{ 'recipe.added-informer' | translate }} <a routerLink=\"/recipes/edit/{{ uuid }}\">{{ 'recipe.added-informer.link' | translate }}</a>\n                      </p>\n                  }\n                  @if ((recipe()?.uuid && !draftRef()) || (draftRef() && draftByExistingRecipe())) {\n                      <lg-flex-row [mobileMode]=\"true\" [center]=\"true\">\n                          <lg-title lgSelfStart>\n                              <span class=\"text-active\">{{ recipe()?.name }}</span>\n                          </lg-title>\n                      </lg-flex-row>\n\n                      <lg-inline-separated-group>\n                          <ng-template lgInlineSeparatedGroup>\n                              <lg-button [flat]=\"true\"\n                                         [link]=\"'/recipes/calculate/' + recipe()?.uuid\"\n                                         [size]=\"'small'\"\n                                         [style]=\"'primary'\">\n                                  {{ 'recipe.calculate-btn'|translate }}\n                              </lg-button>\n                          </ng-template>\n\n                          @if (draftRef() && formComponent()?.form?.dirty) {\n                              <ng-template lgInlineSeparatedGroup>\n                                  <lg-fade-in>\n                                      {{ 'saved-draft-label'|translate }}\n                                  </lg-fade-in>\n                              </ng-template>\n                          }\n\n                          <ng-template lgInlineSeparatedGroup>\n                              @if (isDraftRoute()) {\n                                  <lg-button lgShrink [style]=\"'danger'\"\n                                             [flat]=\"true\"\n                                             (click)=\"onRemoveDraft()\">\n                                      {{ 'recipe.form.delete-draft-btn'|translate }}\n                                  </lg-button>\n                              } @else if (recipe()?.uuid) {\n                                  <lg-button lgShrink [style]=\"'danger'\"\n                                             [flat]=\"true\"\n                                             (click)=\"onDeleteRecipe()\">\n                                      {{ 'recipe.form.delete-btn'|translate }}\n                                  </lg-button>\n                              }\n                          </ng-template>\n                      </lg-inline-separated-group>\n\n                      @if (recipe()?.updatedAt) {\n                          <small class=\"text-muted text-cursive\">\n                              {{ 'edited-at-label'|translate }} {{ recipe()?.updatedAt | timeAgo }}\n                          </small>\n                      }\n                  } @else {\n                      <lg-title>\n                          {{ 'recipe.form.title'|translate }}\n                      </lg-title>\n                  }\n              </lg-flex-column>\n\n              <lg-add-recipe-form [recipe]=\"recipe()\"></lg-add-recipe-form>\n\n              <lg-flex-row [mobileMode]=\"true\" [relaxed]=\"true\">\n                  @if ((recipe()?.uuid && !draftRef()) || (draftRef() && draftByExistingRecipe())) {\n                      <lg-button [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                                 lgShrink\n                                 (click)=\"onEditRecipe()\">\n                          @if (formComponent()?.form?.dirty || draftRef()) {\n                              {{ 'recipe.form.save-btn.edit.active'|translate }}\n                          } @else {\n                              {{ 'recipe.form.save-btn.edit.disabled'|translate }}\n                          }\n                      </lg-button>\n                  } @else {\n                      <lg-button [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                                 lgShrink\n                                 (click)=\"onAddRecipe()\">\n                          @if (formComponent()?.form?.dirty || draftRef()) {\n                              {{ 'recipe.form.save-btn.add.active'|translate }}\n                          } @else {\n                              {{ 'recipe.form.save-btn.add.disabled'|translate }}\n                          }\n                      </lg-button>\n                  }\n\n\n              </lg-flex-row>\n          </lg-container>\n      </lg-fade-in>\n  `,\n  styles: [\n    `\n    `\n  ]\n})\nexport class AddRecipeComponent\n  implements OnInit, AfterViewInit {\n  constructor(\n    private _aRoute: ActivatedRoute,\n    private _recipesRepository: RecipesRepository,\n    private _notificationsService: NotificationsService,\n    private _analyticsService: AnalyticsService,\n  ) {\n  }\n\n  draftOrRecipeUUID = signal<string | undefined>(undefined);\n  recipe = signal<Recipe | undefined>(undefined);\n  formComponent = viewChild<AddRecipeFormComponent | null>(AddRecipeFormComponent);\n  draftRef = signal<DraftForm<Recipe> | undefined>(undefined);\n  draftByExistingRecipe = computed(() => {\n    return this.draftRef()!.meta?.['uuid'];\n  });\n  isDraftRoute = signal(false);\n  draftRecipeModel?: Recipe;\n  addedRecipeInformerUUID = signal<null | string>(null);\n  private _routerManager = inject(ROUTER_MANAGER);\n\n  ngOnInit() {\n    combineLatest([\n      this._aRoute.params,\n      this._aRoute.data\n    ]).subscribe(([params, data]) => {\n      const draft = data['draft'] as DraftForm<Recipe>;\n      this.draftOrRecipeUUID.set(params['uuid']);\n\n      if (draft) {\n        this.draftRef.set(draft);\n        this.recipe.set(draft.data);\n      } else if (data['recipe']) {\n        this.recipe.set(data['recipe']);\n      } else if (this.draftOrRecipeUUID()) {\n        this._loadRecipe(this.draftOrRecipeUUID());\n      } else {\n        this.recipe.set(Recipe.empty());\n      }\n      this.isDraftRoute.set(!!data['draftRoute']);\n    });\n  }\n\n  ngAfterViewInit() {\n\n    this.formComponent()?.form.valueChanges.pipe(\n      debounceTime(500),\n    ).subscribe((value) => {\n      if (!this.formComponent()!.form.dirty) {\n        return\n      }\n      if (this.draftRef()?.uuid) {\n        this._recipesRepository.updateDraftRecipe(\n          this.draftRef()!.uuid,\n          this.recipe()!,\n          this.draftRef()!.meta?.['uuid']\n        );\n      } else if (this.recipe()) {\n        this.draftRef.set(this._recipesRepository.saveDraftRecipe(\n          this.recipe()!,\n          this.draftOrRecipeUUID() ?? ''));\n\n        if (!this.isDraftRoute()) {\n          this._routerManager.replace(['recipes/draft/' + this.draftRef()!.uuid]);\n        }\n      }\n    });\n  }\n\n  async onAddRecipe() {\n    try {\n      if (!this.formComponent()?.validateForm()\n        || !this.recipe()) {\n        return;\n      }\n      const newUUID = await this._addRecipe(this.recipe()!);\n      this.addedRecipeInformerUUID.set(newUUID);\n    } catch (e) {\n      this._notificationsService.error(errorHandler(e));\n    }\n  }\n\n  async onEditRecipe() {\n    if (!this.formComponent()?.validateForm()\n        || !this.recipe()) {\n        return;\n      }\n      await this._editRecipe(this.recipe()!);\n  }\n\n  onRemoveDraft() {\n    this._removeDraft();\n    this._routerManager.navigate(['recipes']);\n  }\n\n  onDeleteRecipe() {\n    if (!this.recipe()?.uuid) {\n      return;\n    }\n    this._recipesRepository.deleteOne(this.recipe()!.uuid!).then(() => {\n      this._notificationsService.success('notifications.recipe.deleted');\n      this._routerManager.navigate(['recipes']);\n    });\n  }\n\n  private _addRecipe(recipe: Recipe) {\n    return this._recipesRepository.addRecipe(recipe).then((newUUID) => {\n      // Track recipe creation analytics\n      this._analyticsService.trackRecipeCreated(recipe.name, {\n        recipe_uuid: newUUID,\n        ingredients_count: recipe.ingredients?.length || 0,\n        outcome_amount: recipe.outcome_amount,\n        outcome_unit: recipe.outcome_unit,\n        category: recipe.category_id?.name\n      });\n\n      this.formComponent()?.resetForm();\n      this._notificationsService.success('notifications.recipe.added');\n      this.recipe.set(undefined);\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.navigateWithReset(['recipes', 'edit', newUUID]);\n      return newUUID;\n    });\n  }\n\n  private _editRecipe(recipe: Recipe) {\n    if (!this.draftOrRecipeUUID()) {\n      return Promise.resolve();\n    }\n    let recipeUUID = this.draftRef()?.meta?.['uuid'] ?? this.draftOrRecipeUUID();\n    return this._recipesRepository.editRecipe(recipeUUID as string, recipe).then(() => {\n      this.formComponent()?.resetForm(recipe);\n      this._notificationsService.success('notifications.recipe.edited');\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.navigateWithReset(['recipes', 'edit', recipeUUID]);\n    });\n  }\n\n  private _removeDraft() {\n    if (!this.draftRef()) {\n      return;\n    }\n    this._recipesRepository.removeDraftRecipe(this.draftRef()!.uuid)\n    this.draftRef.set(undefined);\n  }\n\n  private _loadRecipe(uuid?: string) {\n    if (!uuid) {\n      return;\n    }\n    this._recipesRepository.getOne(uuid).then(recipe => {\n      if (!recipe) {\n        return;\n      }\n      this.recipe.set(recipe);\n    });\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQc,IAAA,yBAAA,GAAA,KAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAc,IAAA,uBAAA;;;;AAAd,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,GAAA,GAAA;;;AAsCzC,IAAO,wBAAP,MAAO,uBAAqB;EAChC,cAAA;EACA;EAEA,QAAQ,MAAM,EAAE;;qCAJL,wBAAqB;EAAA;yEAArB,wBAAqB,WAAA,CAAA,CAAA,kBAAA,CAAA,GAAA,QAAA,EAAA,OAAA,CAAA,GAAA,OAAA,EAAA,GAAA,oBAAA,KAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,sBAAA,GAAA,CAAA,GAAA,wBAAA,CAAA,GAAA,UAAA,SAAA,+BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AAxC5B,MAAA,yBAAA,GAAA,OAAA,CAAA;AACI,MAAA,8BAAA,GAAA,8CAAA,GAAA,GAAA,KAAA,CAAA;AAGA,MAAA,yBAAA,GAAA,OAAA,CAAA;AACI,MAAA,uBAAA,CAAA;AACJ,MAAA,uBAAA,EAAM;;;AALN,MAAA,oBAAA;AAAA,MAAA,wBAAA,IAAA,MAAA,IAAA,IAAA,EAAA;;;;;sEAuCG,uBAAqB,CAAA;UA5CjC;uBACW,oBAAkB,YAChB,MAAI,UACN;;;;;;;;;KAST,QAAA,CAAA,slBAAA,EAAA,CAAA;;;;6EAgCU,uBAAqB,EAAA,WAAA,yBAAA,UAAA,0DAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;;;ACHhB,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,MAAA,WAAA,OAAA,OAAA,QAAA,UAAA,WAAA,OAAA,OAAA,QAAA,UAAA,SAAA,GAAA;;;;;AAGA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,MAAA,WAAA,OAAA,OAAA,QAAA,UAAA,WAAA,OAAA,OAAA,QAAA,UAAA,SAAA,GAAA;;;;;;AAII,IAAA,yBAAA,GAAA,OAAA,CAAA,EAC4E,GAAA,QAAA,CAAA;AAEpE,IAAA,iBAAA,CAAA;AACJ,IAAA,uBAAA;AACA,IAAA,yBAAA,GAAA,QAAA,CAAA;AAAkC,IAAA,qBAAA,SAAA,SAAA,0EAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,WAAA,wBAAA,EAAA;AAAA,aAAA,sBAAS,SAAA,OAAA,CAAW;IAAA,CAAA;AAAqB,IAAA,iBAAA,GAAA,MAAA;AAAC,IAAA,uBAAA,EAAO;;;;AAJlF,IAAA,qBAAA,WAAA,0BAAA,GAAAA,OAAA,WAAA,OAAA,OAAA,QAAA,SAAA,WAAA,OAAA,OAAA,QAAA,QAAA,IAAA,CAAA;AAEG,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,MAAA,WAAA,OAAA,OAAA,QAAA,UAAA,WAAA,OAAA,OAAA,QAAA,UAAA,SAAA,GAAA;;;;;AAJZ,IAAA,2BAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,GAAA,UAAA;;;;AAAA,IAAA,qBAAA,QAAA;;;AA8EZ,IAAO,uBAAP,MAAO,sBAAoB;EAGT;EADtB,YACsB,yBAA+C;AAA/C,SAAA,0BAAA;EAEtB;EAES,cAAsB;EAC/B,WAAW,MAAc,EAAE;EAC3B,WAAW,MAAe,KAAK;EAC/B,QAAQ,MAAe,KAAK;EAC5B,aAAa,OAAO,CAAA,CAAE;EACtB,aAAa,OAAM;EACnB,QAAkB;EAClB,kBAAkB,UAAU,iBAAiB;EAE7C,SAAS,MAAY;AACnB,WAAO,IAAI,QAAQ,IAAI;EACzB;EAEA,WAAqC,MAAK;EAC1C;EAEA,YAAwB,MAAK;EAC7B;EAEA,WAAW,CAAC,MAAc,SAAkB;AAC1C,UAAM,MAAM;AACZ,WAAO,KAAK,SAAQ,EAAG,YAAW,EAAG,SAAS,KAAK,YAAW,CAAE;EAClE;EAEA,cAAc,CAAC,GAAa,MAAe;AACzC,UAAM,OAAO;AACb,UAAM,OAAO;AAEb,WAAO,SAAS;EAClB;EAEA,WAAW,OAAc;AACvB,SAAK,OAAO,KAAK;EACnB;EAEA,OAAO,OAAc;AACnB,QAAI,MAAM,QAAQ,KAAK,GAAG;AACxB,WAAK,QAAQ,MAAM,IAAI,CAAC,SAAS,IAAI,QAAQ,IAAI,EAAE,MAAK,CAAE;IAC5D,OAAO;AACL,WAAK,QAAQ,IAAI,QAAQ,KAAK,EAAE,MAAK;IACvC;AAEA,YAAQ,IAAI,kBAAkB,KAAK;AACnC,SAAK,SAAS,KAAK,KAAK;EAC1B;EAEA,iBAAiB,IAAO;AACtB,SAAK,WAAW;EAClB;EAEA,kBAAkB,IAAO;AACvB,SAAK,YAAY;EACnB;EAEA,cAAc,OAAc;AAC1B,SAAK,OAAO,KAAK;EACnB;EAEA,eAAe,OAAc;AAC3B,SAAK,OAAO,KAAK;AACjB,SAAK,WAAW,KAAK,KAAK;EAC5B;EAEA,WAAQ;AACN,SAAK,wBAAwB,SAAS,KAAK,SAAQ,CAAE;AACrD,QAAI,KAAK,SAAQ,GAAI;AACnB,WAAK,wBAAwB,KAAK,CAAC,KAAK,SAAQ,CAAE,CAAC;IACrD;AACA,SAAK,wBAAwB,UAAU,CAAC,aAAY;AAClD,YAAM,QAAQ,SAAS,IAAI,KAAK,SAAQ,CAAE,GAAG,QAAQ,CAAA;AACrD,WAAK,WAAW,IAAI,KAAY;IAClC,CAAC;EACH;EAEA,SAAM;AACJ,WAAO,KAAK,wBAAwB,KAAK,CAAC,KAAK,SAAQ,CAAE,GAAG,IAAI;EAClE;;qCAnFW,uBAAoB,4BAAA,wBAAA,CAAA,CAAA;EAAA;yEAApB,uBAAoB,WAAA,CAAA,CAAA,iBAAA,CAAA,GAAA,WAAA,SAAA,2BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;uDAcH,mBAAiB,CAAA;;;;;uMAvBlC;IACT;MACE,SAAS;MACT,aAAa,WAAW,MAAM,qBAAoB;MAClD,OAAO;;GAEV,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,cAAA,GAAA,CAAA,GAAA,UAAA,iBAAA,UAAA,YAAA,eAAA,SAAA,YAAA,WAAA,eAAA,UAAA,GAAA,CAAA,gBAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,GAAA,CAAA,sBAAA,EAAA,GAAA,CAAA,GAAA,YAAA,GAAA,SAAA,GAAA,CAAA,GAAA,gBAAA,GAAA,CAAA,eAAA,QAAA,GAAA,iBAAA,SAAA,GAAA,OAAA,CAAA,GAAA,UAAA,SAAA,8BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;AA7FG,MAAA,yBAAA,GAAA,OAAA,CAAA,EAA0B,GAAA,aAAA,CAAA;AACX,MAAA,qBAAA,UAAA,SAAA,0DAAA,QAAA;AAAA,eAAU,IAAA,eAAA,MAAA;MAAsB,CAAA,EAAC,iBAAA,SAAA,iEAAA,QAAA;AAAA,eAChB,IAAA,cAAA,MAAA;MAAqB,CAAA;AAS7C,MAAA,qBAAA,GAAA,6CAAA,GAAA,GAAA,eAAA,CAAA,EAA0C,GAAA,6CAAA,GAAA,GAAA,eAAA,CAAA,EAGC,GAAA,6CAAA,GAAA,GAAA,eAAA,CAAA;AAe/C,MAAA,uBAAA,EAAY;;;AA1BD,MAAA,oBAAA;AAAA,MAAA,qBAAA,UAAA,IAAA,QAAA,EAAmB,YAAA,MAAA,EACA,eAAA,IAAA,WAAA,EACQ,SAAA,IAAA,WAAA,CAAA,EACL,YAAA,IAAA,MAAA,CAAA,EACF,WAAA,IAAA,KAAA,EACH,eAAA,IAAA,WAAA,EACU,YAAA,IAAA,QAAA;;;IAwB5C;IACA;IAAW;IAAA;IACX;IACA;IACA;IACA;EAAO,GAAA,QAAA,CAAA,iiCAAA,GAAA,eAAA,EAAA,CAAA;;;sEA0DE,sBAAoB,CAAA;UApGhC;uBACW,mBAAiB,YACf,MAAI,UACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAgCT,SACQ;MACP;MACA;MACA;MACA;MACA;MACA;OACH,WAgDY;MACT;QACE,SAAS;QACT,aAAa,WAAW,MAAK,oBAAqB;QAClD,OAAO;;OAEV,eACc,kBAAkB,MAAI,QAAA,CAAA,iiCAAA,EAAA,CAAA;;UAKlC;WAIM,aAAW,CAAA;UAAnB;;;;6EAPU,sBAAoB,EAAA,WAAA,wBAAA,UAAA,yDAAA,YAAA,IAAA,CAAA;AAAA,GAAA;;;;;;;;mEEpFS;;;AAT5B,IAAA,oBAAA,GAAA,oBAAA,EAAA;;;;;;AAkCU,IAAA,yBAAA,GAAA,kBAAA,EAAA;AACgB,IAAA,qBAAA,cAAA,SAAA,6FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,qBAAA,wBAAA,EAAA;AAAA,YAAA,YAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAc,OAAA,qBAAA,WAAA,oBAAA,CAAiC,cAAc,MAAM,CAAA,CAAE;IAAA,CAAA;AAGzC,IAAA,uBAAA;;;AAJ5B,IAAA,qBAAA,YAAA,SAAA,EAAsB,YAAA,IAAA;;;;;;AAMtC,IAAA,yBAAA,GAAA,kBAAA,IAAA,CAAA;AACgB,IAAA,qBAAA,cAAA,SAAA,6FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,qBAAA,wBAAA,EAAA;AAAA,YAAA,YAAA,sBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAc,OAAA,qBAAA,WAAA,oBAAA,CAAiC,aAAa,MAAM,CAAA,CAAE;IAAA,CAAA;AAKpF,IAAA,uBAAA;;;AANgB,IAAA,qBAAA,YAAA,UAAA,EAAuB,YAAA,IAAA;;;;;AAgBvC,IAAA,oBAAA,GAAA,oBAAA,EAAA;;;;;AAeJ,IAAA,oBAAA,GAAA,MAAA,EAAA;;;;;;AA5DJ,IAAA,kCAAA,GAAA,EAAA;AACE,IAAA,yBAAA,GAAA,mBAAA,EAAA,EAAqC,GAAA,kBAAA,EAAA;AAGjC,IAAA,kCAAA,GAAA,EAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAW,IAAA,qBAAA,SAAA,SAAA,oEAAA;AAAA,YAAA,qBAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,kBAAA,CAAmB;IAAA,CAAA;AAIrC,IAAA,iBAAA,CAAA;;AACF,IAAA,uBAAA;;AAGF,IAAA,kCAAA,GAAA,EAAA;AACE,IAAA,yBAAA,GAAA,aAAA,EAAA;AAAW,IAAA,qBAAA,SAAA,SAAA,oEAAA;AAAA,YAAA,qBAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,gBAAA,kBAAA,CAAkB;IAAA,CAAA;AAIpC,IAAA,iBAAA,CAAA;;AACF,IAAA,uBAAA;;AAGF,IAAA,8BAAA,IAAA,uDAAA,GAAA,GAAA,kBAAA,EAAA,EAA6B,IAAA,uDAAA,GAAA,GAAA,kBAAA,EAAA;AAe/B,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,mBAAA,IAAA,CAAA;;AAEiB,IAAA,qBAAA,aAAA,SAAA,+EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAa,OAAA,QAAA,CAAS;IAAA,CAAA;AAGrC,IAAA,qBAAA,IAAA,uDAAA,GAAA,GAAA,eAAA,EAAA;AAIF,IAAA,uBAAA;AAEA,IAAA,kCAAA,IAAA,EAAA;AACE,IAAA,yBAAA,IAAA,aAAA,EAAA;AAGW,IAAA,qBAAA,SAAA,SAAA,qEAAA;AAAA,YAAA,qBAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,iBAAA,kBAAA,CAAmB;IAAA,CAAA;AACrC,IAAA,oBAAA,IAAA,YAAA,EAAA;AACF,IAAA,uBAAA;;AAEJ,IAAA,uBAAA;AACA,IAAA,8BAAA,IAAA,uDAAA,GAAA,GAAA,MAAA,EAAA;;;;;;;AA3DY,IAAA,qBAAA,iBAAA,kBAAA;AACK,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA;AACC,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA;AAID,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,EAAa,QAAA,OAAA,EACG,UAAA,CAAA,OAAA,iBAAA,EAAA,kBAAA,CAAA;AAEzB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,IAAA,0CAAA,GAAA,GAAA;AAMS,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,EAAa,QAAA,OAAA,EACG,UAAA,OAAA,iBAAA,EAAA,kBAAA,CAAA;AAEzB,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,IAAA,IAAA,yCAAA,GAAA,GAAA;AAIJ,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,iBAAA,EAAA,kBAAA,IAAA,KAAA,EAAA;AAoBe,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,sBAAA,IAAA,IAAA,8CAAA,0BAAA,IAAA,MAAA,OAAA,KAAA,MAAA,eAAA,OAAA,OAAA,OAAA,KAAA,MAAA,YAAA,kBAAA,KAAA,OAAA,OAAA,OAAA,KAAA,MAAA,YAAA,kBAAA,EAAA,SAAA,MAAA,CAAA,CAAA;AASJ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA;AACA,IAAA,qBAAA,QAAA,MAAA,EAAe,QAAA,IAAA;AAO9B,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,EAAA,uBAAA,qBAAA,KAAA,KAAA,EAAA;;;;;AA2BN,IAAA,oBAAA,GAAA,iBAAA,EAAA;;;;;AAAe,IAAA,qBAAA,WAAA,iBAAA,EAA0B,SAAA,OAAA,cAAA,CAAA;;;AD1D/C,IAAO,yBAAP,MAAO,wBAAsB;EAIxB;EACA;EACC;EACA;EACA;EALV,YACS,oBACA,yBACC,SACA,SACA,uBAA2C;AAJ5C,SAAA,qBAAA;AACA,SAAA,0BAAA;AACC,SAAA,UAAA;AACA,SAAA,UAAA;AACA,SAAA,wBAAA;EAEV;EAEA,SAAS,MAA0B,MAAS;EAC5C,OAAO,aAAqB,MAAM;EAClC,OAAO,IAAI,UAAU;IACnB,MAAM,IAAI,YAA2B,MAAM,WAAW,QAAQ;IAC9D,aAAa,IAAI,YAAY,EAAE;IAC/B,gBAAgB,IAAI,YAAoC,IAAI;IAC5D,cAAc,IAAI,YAAoB,EAAE;IACxC,aAAa,IAAI,UAAU;MACzB,KAAK,oBAAmB;KACzB;IACD,aAAa,IAAI,YAAiB,IAAI;IACtC,MAAM,IAAI,YAAsB,CAAA,CAAE;KACjC,CAAC,UAAS;AACX,UAAM,iBAAiB,OAAO,QAAQ,MAAM,KAAK;AAEjD,QAAI,eAAe,qCAAqC;AACtD,aAAO,EAAC,qCAAqC,KAAI;IACnD;AACA,WAAO;EACT,CAAC;EACD,mBAAmB,OAAgC,CAAA,CAAE;EACrD,mBAAmB,aAA+B,kBAAkB;EACpE,iBAAiB,aAAsC,UAAU;EACjE,mBAAmB,aAAmC,kBAAkB;EACxE,YAAY,UAAiC,WAAW;EACxD,gBAAgB,OAAc,CAAA,CAAE;EACxB,eAAe,OAAO,MAAK;AACjC,QAAI,KAAK,OAAM,GAAI;AACjB,WAAK,SAAS,KAAK,OAAM,CAAG;IAC9B;EACF,CAAC;EAED,IAAI,cAAW;AACb,WAAO,KAAK,KAAK,IAAI,aAAa;EACpC;EAEA,IAAY,aAAU;AACpB,WAAO,KAAK,KAAK,SAAS,CAAC,KAAK,iBAAiB,KAAK,KAAK,YAAW,EAAG,aAAa,KAAK,KAAI,CAAE;EACnG;EAEA,SACE,QAAe;AAEf,SAAK,KAAK,MAAM;MACd,aAAa,CAAA;KACd;AACD,SAAK,YAAY,MAAK;AAEtB,QAAI,CAAC,QAAQ;AACX;IACF;AACA,YAAQ,IAAI,gBAAgB,kBAAkB,MAAM,CAAC;AACrD,SAAK,KAAK,MAAM,iCACX,kBAAkB,MAAM,IADb;MAEd,aAAa,CAAA;MACd;AAED,QAAI,OAAO,YAAY,QAAQ;AAC7B,aAAO,YAAY,QAAQ,CAAC,YAAwB,UAAiB;AACnE,aAAK,YAAY,KAAK,KAAK,oBAAoB,UAAU,CAAC;AAE1D,YAAI,WAAW,WAAW;AACxB,eAAK,gBAAgB,KAAK;QAC5B;MACF,CAAC;IACH,OAAO;AACL,WAAK,YAAY,KAAK,KAAK,oBAAmB,CAAE;IAClD;AAEA,SAAK,KAAK,uBAAsB;AAChC,SAAK,KAAK,eAAc;EAC1B;EAEA,UACE,QAAe;AAEf,SAAK,SAAS,MAAM;AACpB,SAAK,kBAAiB;AACtB,SAAK,KAAK,eAAc;EAC1B;EAEA,eAAY;AACV,QAAI,CAAC,KAAK,YAAY;AACpB,WAAK,sBAAsB,MAAM,KAAK,sBAAsB,gBAAgB,KAAK,IAAI,EAAE,KAAK,IAAI,CAAC;AACjG,aAAO;IACT;AACA,WAAO;EACT;EAEA,UAAO;AACL,UAAM,cAAc,KAAK,YAAY,GAAG,KAAK,YAAY,SAAS,CAAC;AAEnE,QAAI,YAAY,MAAM,QAAQ,YAAY,MAAM,UAAU,YAAY,MAAM,YAAY;AACtF,WAAK,cAAa;IACpB;EACF;EAEA,WAAQ;AACN,SAAK,kBAAiB;AACtB,SAAK,KAAK,aAAa,KACrB,aAAa,GAAG,CAAC,EACjB,UAAU;MACV,MAAM,YAAS;AACb,gBAAQ,IAAI,eAAe,MAAM;AACjC,YAAI,CAAC,KAAK,KAAK,OAAO;AACpB;QACF;AACA,aAAK,OAAM,GAAI,OAAO,KAAK,KAAK,YAAW,CAAE;AAC7C,cAAM,kBAAkB,KAAK,iBAAiB,KAAK,KAAK,YAAW,EAAG,aAAa,KAAK,KAAI,CAAE;AAC9F,YAAI,iBAAiB;AACnB,eAAK,sBAAsB,MAAM,kCAAkC;QACrE;MACF;KACD;EACH;EAEA,kBAAe;AACb,SAAK,wBAAwB,KAAI,EAAG,KAAK,eAAY;IAErD,CAAC;AAED,QAAI,CAAC,KAAK,OAAM,GAAI,MAAM;AACxB,WAAK,UAAS,EAAI,MAAK;IACzB;EACF;EAEA,gBAAa;AACX,SAAK,YAAY,KAAK,KAAK,oBAAmB,CAAE;AAChD,SAAK,KAAK,YAAW;EACvB;EAEA,iBAAiB,OAAa;AAC5B,SAAK,YAAY,SAAS,KAAK;AAC/B,SAAK,KAAK,YAAW;EACvB;EAEA,qBACE,QACA,OACA,YAA6B;AAE7B,WAAO,MAAK;AAEZ,UAAM,QAAQ,KAAK,YAAY,GAAG,KAAK,EAAE;AAEzC,SAAK,YAAY,GAAG,KAAK,EAAE,WAAW,iCAChC,MAAM,QAAQ,UAAU,IAAI,WAAW,OAAO,CAAC,KAAK,UAAW,iCAC9D,MAD8D;MAEjE,CAAC,KAAK,GAAG;QACP,CAAA,CAAE,IAAI,EAAC,CAAC,UAAU,GAAG,KAAI,IAJO;MAKpC,MAAM,MAAM,YAAY,QAAQ,MAAM,WAAW,QAAQ;MAC1D;EACH;EAEA,gBACE,OAAa;AAEb,SAAK,iBAAiB,OAAO,CAAC,UAAS;AACrC,aAAO,iCACF,QADE;QAEL,CAAC,KAAK,GAAG;;IAEb,CAAC;EACH;EAEA,iBACE,OAAa;AAEb,SAAK,iBAAiB,OAAO,CAAC,UAAS;AACrC,aAAO,iCACF,QADE;QAEL,CAAC,KAAK,GAAG;;IAEb,CAAC;EACH;EAEA,iBACE,aACA,YAAkB;AAElB,QAAI,QAAQ;AACZ,eAAW,QAAQ,aAAa;AAC9B,YAAM,eAAe,KAAK,WAAW;AACrC,UAAI,gBAAgB,iBAAiB,YAAY;AAC/C,gBAAQ;AACR;MACF;IACF;AACA,WAAO;EACT;EAEQ,oBAAiB;AACvB,SAAK,mBAAmB,iBAAgB,EAAG,KAAK,gBAAa;AAC3D,WAAK,cAAc,IAAI,WAAW,IAAI,eAAa;QACjD,OAAO,SAAS;QAChB,OAAO;UACL,MAAM,SAAS;UACf,MAAM,SAAS;;QAEjB,CAAC;IACL,CAAC;EACH;EAEQ,oBACN,YAA0C;AAE1C,WAAO,IAAI,UAAU;MACnB,MAAM,IAAI,YAAY,YAAY,IAAI;MACtC,QAAQ,IAAI,YAAY,YAAY,QAAQ,SAAQ,KAAM,IAAI;MAC9D,YAAY,IAAI,YAAY,YAAY,aAAa,WAAW,aAAa,IAAI;MACjF,WAAW,IAAI,YAAY,YAAY,YAAY,WAAW,YAAY,IAAI;MAC9E,MAAM,IAAI,YAAY,YAAY,QAAQ,MAAM;OAC/C,CAAC,UAAS;AACX,YAAMC,cAAa,WAAW,QAAQ,MAAM,KAAK;AACjD,UAAIA,YAAW,UAAU;AACvB,eAAO;MACT;AACA,UAAIA,YAAW,gBAAgB,CAACA,YAAW,aAAa;AACtD,eAAO;UACL,0BAA0B;;MAE9B;AACA,UAAI,CAAC,KAAK;AAAM,eAAO;AACvB,YAAM,OAAO,KAAK,KAAI;AACtB,UAAI,KAAK,iBAAiB,CAAC,MAAM,KAAK,GAAG,IAAI,GAAG;AAC9C,eAAO,EAAC,aAAa,KAAI;MAC3B;AAEA,UAAI,CAACA,YAAW,cAAc;AAC5B,eAAO,EAAC,oBAAoB,KAAI;MAClC;AAEA,aAAO;IACT,CAAC;EACH;;qCAtPW,yBAAsB,4BAAA,iBAAA,GAAA,4BAAA,sBAAA,GAAA,4BAAA,MAAA,GAAA,4BAAA,cAAA,GAAA,4BAAA,oBAAA,CAAA;EAAA;yEAAtB,yBAAsB,WAAA,CAAA,CAAA,oBAAA,CAAA,GAAA,WAAA,SAAA,6BAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;;;;;;;;gFAPtB;IACT;MACE,SAAS;MACT,UAAU;;GAEb,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,UAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,oBAAA,EAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,YAAA,IAAA,GAAA,OAAA,GAAA,CAAA,YAAA,QAAA,mBAAA,QAAA,oBAAA,IAAA,GAAA,OAAA,UAAA,GAAA,CAAA,mBAAA,eAAA,YAAA,IAAA,eAAA,EAAA,GAAA,CAAA,mBAAA,kBAAA,eAAA,IAAA,eAAA,EAAA,GAAA,CAAA,cAAA,IAAA,SAAA,OAAA,GAAA,CAAA,iBAAA,eAAA,YAAA,IAAA,GAAA,MAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,SAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,uBAAA,GAAA,SAAA,YAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,MAAA,GAAA,CAAA,YAAA,QAAA,mBAAA,eAAA,YAAA,IAAA,GAAA,UAAA,GAAA,CAAA,GAAA,WAAA,OAAA,GAAA,CAAA,mBAAA,QAAA,GAAA,SAAA,UAAA,GAAA,CAAA,mBAAA,cAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,eAAA,YAAA,GAAA,CAAA,UAAA,CAAA,GAAA,CAAA,GAAA,SAAA,QAAA,QAAA,QAAA,GAAA,CAAA,eAAA,iBAAA,GAAA,CAAA,eAAA,CAAA,GAAA,CAAA,YAAA,QAAA,mBAAA,aAAA,GAAA,YAAA,UAAA,GAAA,CAAA,YAAA,QAAA,mBAAA,cAAA,GAAA,YAAA,UAAA,GAAA,CAAA,eAAA,IAAA,mBAAA,UAAA,GAAA,aAAA,aAAA,GAAA,CAAA,eAAA,cAAA,GAAA,CAAA,YAAA,CAAA,GAAA,CAAA,GAAA,SAAA,QAAA,MAAA,GAAA,CAAA,eAAA,SAAA,YAAA,OAAA,GAAA,CAAA,QAAA,KAAA,YAAA,IAAA,SAAA,SAAA,GAAA,CAAA,YAAA,QAAA,mBAAA,aAAA,GAAA,cAAA,YAAA,UAAA,GAAA,CAAA,YAAA,QAAA,mBAAA,cAAA,GAAA,cAAA,YAAA,UAAA,GAAA,CAAA,mBAAA,MAAA,CAAA,GAAA,UAAA,SAAA,gCAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;ACvEH,MAAA,yBAAA,GAAA,QAAA,CAAA,EAAyB,GAAA,gBAAA,EACP,GAAA,SAAA,EACL,GAAA,kBAAA,CAAA,EAC8B,GAAA,cAAA,CAAA;;AAGjC,MAAA,oBAAA,GAAA,mBAAA,GAAA,CAAA;AAOF,MAAA,uBAAA;AAEA,MAAA,yBAAA,GAAA,cAAA,CAAA;;AAEE,MAAA,oBAAA,IAAA,eAAA,CAAA;AAIF,MAAA,uBAAA,EAAa,EACE;AAEnB,MAAA,yBAAA,IAAA,SAAA,EAAS,IAAA,kBAAA,CAAA,EAE8B,IAAA,cAAA,CAAA;;AAGjC,MAAA,yBAAA,IAAA,mBAAA,GAAA,CAAA;AAIE,MAAA,qBAAA,IAAA,gDAAA,GAAA,GAAA,eAAA,EAAA;AAIF,MAAA,uBAAA,EAAkB;AAGpB,MAAA,yBAAA,IAAA,oBAAA,CAAA;;AACE,MAAA,yBAAA,IAAA,kBAAA,CAAA,EAAqC,IAAA,kBAAA,EAAA;AAEjC,MAAA,2BAAA,IAAA,wCAAA,IAAA,IAAA,gBAAA,IAAAC,WAAA;AAkEF,MAAA,uBAAA;AAEA,MAAA,yBAAA,IAAA,aAAA,EAAA;AAAW,MAAA,qBAAA,SAAA,SAAA,8DAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAS,IAAA,cAAA,CAAe;MAAA,CAAA;AAGjC,MAAA,iBAAA,EAAA;;AACF,MAAA,uBAAA,EAAY,EACG,EACA,EACJ;AAGnB,MAAA,yBAAA,IAAA,eAAA,EAAA,EAA0F,IAAA,cAAA,EAAA;;AAEtF,MAAA,yBAAA,IAAA,kBAAA,EAAA;AACE,MAAA,oBAAA,IAAA,kBAAA,IAAA,CAAA;AAMA,MAAA,8BAAA,IAAA,gDAAA,GAAA,GAAA,iBAAA,EAAA;AAGF,MAAA,uBAAA,EAAiB;AAGnB,MAAA,yBAAA,IAAA,cAAA,EAAA;;AACE,MAAA,oBAAA,IAAA,mBAAA,EAAA;AAGF,MAAA,uBAAA,EAAa,EACD,EACC;;;AA9Ib,MAAA,qBAAA,aAAA,IAAA,IAAA;AAGgB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,OAAA;AACF,MAAA,oBAAA;AAAA,MAAA,qBAAA,SAAA,sBAAA,GAAA,IAAA,8BAAA,CAAA;AAGO,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,OAAA,MAAA,EAAc,YAAA,eAAA;AAQrB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,sBAAA,GAAA,IAAA,qCAAA,CAAA;AAWE,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,OAAA;AACF,MAAA,oBAAA;AAAA,MAAA,qBAAA,SAAA,sBAAA,IAAA,IAAA,wCAAA,CAAA;AAaM,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,wBAAA,sBAAA,IAAA,IAAA,+BAAA,CAAA,CAAuD;AACvD,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,OAAA;AACE,MAAA,oBAAA;AAAA,MAAA,qBAAA,QAAA,QAAA;AACd,MAAA,oBAAA;AAAA,MAAA,qBAAA,IAAA,YAAA,QAAA;AAsES,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA;AADA,MAAA,qBAAA,QAAA,OAAA;AAET,MAAA,oBAAA;AAAA,MAAA,6BAAA,KAAA,sBAAA,IAAA,IAAA,iCAAA,GAAA,GAAA;AAOG,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,IAAA,EAAc,cAAA,IAAA;AACb,MAAA,oBAAA;AAAA,MAAA,qBAAA,SAAA,sBAAA,IAAA,IAAA,kCAAA,CAAA;AACM,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,YAAA,OAAA,EAAoB,QAAA,QAAA;AAElB,MAAA,oBAAA;AAAA,MAAA,qBAAA,YAAA,oBAAA;AAKhB,MAAA,oBAAA,CAAA;AAAA,MAAA,wBAAA,IAAA,cAAA,EAAA,SAAA,KAAA,EAAA;AAMQ,MAAA,oBAAA;AAAA,MAAA,qBAAA,SAAA,sBAAA,IAAA,IAAA,8BAAA,CAAA;AACO,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,SAAA,IAAA,EAAc,YAAA,MAAA;;;ID7FnC;IAAmB;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAgB,GAAA,eAAA,EAAA,CAAA;;;sEASP,wBAAsB,CAAA;UAlClC;uBACW,sBAAoB,YAClB,MAAI,SAEP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,WACU;MACT;QACE,SAAS;QACT,UAAU;;OAEb,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAAA,CAAA;;;;6EAEU,wBAAsB,EAAA,WAAA,0BAAA,UAAA,yEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;;;;;AEzBb,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,iBAAA,CAAA;;AAA0C,IAAA,yBAAA,GAAA,KAAA,CAAA;AAAyC,IAAA,iBAAA,CAAA;;AAA8C,IAAA,uBAAA,EAAI;;;AAArI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,uBAAA,GAAA,GAAA;AAA6C,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,yBAAA,kBAAA,GAAA,CAAqC;AAAC,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,4BAAA,CAAA;;;;;AAY7E,IAAA,yBAAA,GAAA,aAAA,EAAA;AAII,IAAA,iBAAA,CAAA;;AACJ,IAAA,uBAAA;;;;;AAFW,IAAA,qBAAA,SAAA;AAHA,IAAA,qBAAA,QAAA,IAAA,EAAa,QAAA,0BAAA,UAAA,OAAA,OAAA,MAAA,OAAA,OAAA,QAAA,KAAA,EACkC,QAAA,OAAA;AAGtD,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,sBAAA,GAAA,GAAA;;;;;AAMA,IAAA,yBAAA,GAAA,YAAA;AACI,IAAA,iBAAA,CAAA;;AACJ,IAAA,uBAAA;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,mBAAA,GAAA,GAAA;;;;;AAFR,IAAA,qBAAA,GAAA,uEAAA,GAAA,GAAA,eAAA,CAAA;;;;;;AASI,IAAA,yBAAA,GAAA,aAAA,EAAA;AAEW,IAAA,qBAAA,SAAA,SAAA,mGAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,CAAe;IAAA,CAAA;AAC/B,IAAA,iBAAA,CAAA;;AACJ,IAAA,uBAAA;;;AAJoB,IAAA,qBAAA,QAAA;AACT,IAAA,qBAAA,QAAA,IAAA;AAEP,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,8BAAA,GAAA,GAAA;;;;;;AAGJ,IAAA,yBAAA,GAAA,aAAA,EAAA;AAEW,IAAA,qBAAA,SAAA,SAAA,mGAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,eAAA,CAAgB;IAAA,CAAA;AAChC,IAAA,iBAAA,CAAA;;AACJ,IAAA,uBAAA;;;AAJoB,IAAA,qBAAA,QAAA;AACT,IAAA,qBAAA,QAAA,IAAA;AAEP,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,wBAAA,GAAA,GAAA;;;;;AAVR,IAAA,8BAAA,GAAA,uEAAA,GAAA,GAAA,aAAA,EAAA,EAAsB,GAAA,uEAAA,GAAA,GAAA,aAAA,EAAA;;;;;AAAtB,IAAA,wBAAA,OAAA,aAAA,IAAA,MAAA,UAAA,OAAA,OAAA,MAAA,OAAA,OAAA,QAAA,QAAA,IAAA,EAAA;;;;;AAiBJ,IAAA,yBAAA,GAAA,SAAA,CAAA;AACI,IAAA,iBAAA,CAAA;;;AACJ,IAAA,uBAAA;;;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,iBAAA,GAAA,KAAA,sBAAA,GAAA,IAAA,UAAA,OAAA,OAAA,MAAA,OAAA,OAAA,QAAA,SAAA,GAAA,GAAA;;;;;AA3CR,IAAA,yBAAA,GAAA,eAAA,CAAA,EAAiD,GAAA,YAAA,CAAA,EACvB,GAAA,QAAA,CAAA;AACQ,IAAA,iBAAA,CAAA;AAAoB,IAAA,uBAAA,EAAO,EAC9C;AAGf,IAAA,yBAAA,GAAA,2BAAA;AACI,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,eAAA,CAAA;AASA,IAAA,8BAAA,GAAA,yDAAA,GAAA,GAAA,MAAA,CAAA;AAQA,IAAA,qBAAA,GAAA,yDAAA,GAAA,GAAA,eAAA,CAAA;AAeJ,IAAA,uBAAA;AAEA,IAAA,8BAAA,GAAA,yDAAA,GAAA,GAAA,SAAA,CAAA;;;;;;;AAzCa,IAAA,qBAAA,cAAA,IAAA,EAAmB,UAAA,IAAA;AAEE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,UAAA,OAAA,OAAA,MAAA,OAAA,OAAA,QAAA,IAAA;AAc9B,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,SAAA,OAAA,UAAA,OAAA,cAAA,MAAA,OAAA,OAAA,QAAA,QAAA,OAAA,OAAA,QAAA,KAAA,SAAA,IAAA,EAAA;AAyBJ,IAAA,oBAAA,CAAA;AAAA,IAAA,0BAAA,UAAA,OAAA,OAAA,MAAA,OAAA,OAAA,QAAA,aAAA,IAAA,EAAA;;;;;AAMA,IAAA,yBAAA,GAAA,UAAA;AACI,IAAA,iBAAA,CAAA;;AACJ,IAAA,uBAAA;;;AADI,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,mBAAA,GAAA,GAAA;;;;;AAaI,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,kCAAA,GAAA,GAAA;;;;;AAEA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,oCAAA,GAAA,GAAA;;;;;;AANR,IAAA,yBAAA,GAAA,aAAA,EAAA;AAEW,IAAA,qBAAA,SAAA,SAAA,uEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,CAAc;IAAA,CAAA;AAC9B,IAAA,8BAAA,GAAA,yDAAA,GAAA,CAAA,EAAkD,GAAA,yDAAA,GAAA,CAAA;AAKtD,IAAA,uBAAA;;;;;;AARW,IAAA,qBAAA,YAAA,GAAA,UAAA,OAAA,cAAA,MAAA,OAAA,OAAA,QAAA,QAAA,OAAA,OAAA,QAAA,KAAA,UAAA,CAAA,OAAA,SAAA,CAAA;AAGP,IAAA,oBAAA;AAAA,IAAA,0BAAA,UAAA,OAAA,cAAA,MAAA,OAAA,OAAA,QAAA,QAAA,OAAA,OAAA,QAAA,KAAA,UAAA,OAAA,SAAA,IAAA,IAAA,CAAA;;;;;AAWI,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,iCAAA,GAAA,GAAA;;;;;AAEA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,mCAAA,GAAA,GAAA;;;;;;AANR,IAAA,yBAAA,GAAA,aAAA,EAAA;AAEW,IAAA,qBAAA,SAAA,SAAA,uEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,YAAA,CAAa;IAAA,CAAA;AAC7B,IAAA,8BAAA,GAAA,yDAAA,GAAA,CAAA,EAAkD,GAAA,yDAAA,GAAA,CAAA;AAKtD,IAAA,uBAAA;;;;;;AARW,IAAA,qBAAA,YAAA,GAAA,UAAA,OAAA,cAAA,MAAA,OAAA,OAAA,QAAA,QAAA,OAAA,OAAA,QAAA,KAAA,UAAA,CAAA,OAAA,SAAA,CAAA;AAGP,IAAA,oBAAA;AAAA,IAAA,0BAAA,UAAA,OAAA,cAAA,MAAA,OAAA,OAAA,QAAA,QAAA,OAAA,OAAA,QAAA,KAAA,UAAA,OAAA,SAAA,IAAA,IAAA,CAAA;;;AAkBpB,IAAO,qBAAP,MAAO,oBAAkB;EAGnB;EACA;EACA;EACA;EAJV,YACU,SACA,oBACA,uBACA,mBAAmC;AAHnC,SAAA,UAAA;AACA,SAAA,qBAAA;AACA,SAAA,wBAAA;AACA,SAAA,oBAAA;EAEV;EAEA,oBAAoB,OAA2B,MAAS;EACxD,SAAS,OAA2B,MAAS;EAC7C,gBAAgB,UAAyC,sBAAsB;EAC/E,WAAW,OAAsC,MAAS;EAC1D,wBAAwB,SAAS,MAAK;AACpC,WAAO,KAAK,SAAQ,EAAI,OAAO,MAAM;EACvC,CAAC;EACD,eAAe,OAAO,KAAK;EAC3B;EACA,0BAA0B,OAAsB,IAAI;EAC5C,iBAAiB,OAAO,cAAc;EAE9C,WAAQ;AACN,kBAAc;MACZ,KAAK,QAAQ;MACb,KAAK,QAAQ;KACd,EAAE,UAAU,CAAC,CAAC,QAAQ,IAAI,MAAK;AAC9B,YAAM,QAAQ,KAAK,OAAO;AAC1B,WAAK,kBAAkB,IAAI,OAAO,MAAM,CAAC;AAEzC,UAAI,OAAO;AACT,aAAK,SAAS,IAAI,KAAK;AACvB,aAAK,OAAO,IAAI,MAAM,IAAI;MAC5B,WAAW,KAAK,QAAQ,GAAG;AACzB,aAAK,OAAO,IAAI,KAAK,QAAQ,CAAC;MAChC,WAAW,KAAK,kBAAiB,GAAI;AACnC,aAAK,YAAY,KAAK,kBAAiB,CAAE;MAC3C,OAAO;AACL,aAAK,OAAO,IAAI,OAAO,MAAK,CAAE;MAChC;AACA,WAAK,aAAa,IAAI,CAAC,CAAC,KAAK,YAAY,CAAC;IAC5C,CAAC;EACH;EAEA,kBAAe;AAEb,SAAK,cAAa,GAAI,KAAK,aAAa,KACtC,aAAa,GAAG,CAAC,EACjB,UAAU,CAAC,UAAS;AACpB,UAAI,CAAC,KAAK,cAAa,EAAI,KAAK,OAAO;AACrC;MACF;AACA,UAAI,KAAK,SAAQ,GAAI,MAAM;AACzB,aAAK,mBAAmB,kBACtB,KAAK,SAAQ,EAAI,MACjB,KAAK,OAAM,GACX,KAAK,SAAQ,EAAI,OAAO,MAAM,CAAC;MAEnC,WAAW,KAAK,OAAM,GAAI;AACxB,aAAK,SAAS,IAAI,KAAK,mBAAmB,gBACxC,KAAK,OAAM,GACX,KAAK,kBAAiB,KAAM,EAAE,CAAC;AAEjC,YAAI,CAAC,KAAK,aAAY,GAAI;AACxB,eAAK,eAAe,QAAQ,CAAC,mBAAmB,KAAK,SAAQ,EAAI,IAAI,CAAC;QACxE;MACF;IACF,CAAC;EACH;EAEA,MAAM,cAAW;AACf,QAAI;AACF,UAAI,CAAC,KAAK,cAAa,GAAI,aAAY,KAClC,CAAC,KAAK,OAAM,GAAI;AACnB;MACF;AACA,YAAM,UAAU,MAAM,KAAK,WAAW,KAAK,OAAM,CAAG;AACpD,WAAK,wBAAwB,IAAI,OAAO;IAC1C,SAAS,GAAG;AACV,WAAK,sBAAsB,MAAM,aAAa,CAAC,CAAC;IAClD;EACF;EAEA,MAAM,eAAY;AAChB,QAAI,CAAC,KAAK,cAAa,GAAI,aAAY,KAChC,CAAC,KAAK,OAAM,GAAI;AACnB;IACF;AACA,UAAM,KAAK,YAAY,KAAK,OAAM,CAAG;EACzC;EAEA,gBAAa;AACX,SAAK,aAAY;AACjB,SAAK,eAAe,SAAS,CAAC,SAAS,CAAC;EAC1C;EAEA,iBAAc;AACZ,QAAI,CAAC,KAAK,OAAM,GAAI,MAAM;AACxB;IACF;AACA,SAAK,mBAAmB,UAAU,KAAK,OAAM,EAAI,IAAK,EAAE,KAAK,MAAK;AAChE,WAAK,sBAAsB,QAAQ,8BAA8B;AACjE,WAAK,eAAe,SAAS,CAAC,SAAS,CAAC;IAC1C,CAAC;EACH;EAEQ,WAAW,QAAc;AAC/B,WAAO,KAAK,mBAAmB,UAAU,MAAM,EAAE,KAAK,CAAC,YAAW;AAEhE,WAAK,kBAAkB,mBAAmB,OAAO,MAAM;QACrD,aAAa;QACb,mBAAmB,OAAO,aAAa,UAAU;QACjD,gBAAgB,OAAO;QACvB,cAAc,OAAO;QACrB,UAAU,OAAO,aAAa;OAC/B;AAED,WAAK,cAAa,GAAI,UAAS;AAC/B,WAAK,sBAAsB,QAAQ,4BAA4B;AAC/D,WAAK,OAAO,IAAI,MAAS;AAEzB,UAAI,KAAK,SAAQ,GAAI;AACnB,aAAK,aAAY;MACnB;AAEA,WAAK,eAAe,kBAAkB,CAAC,WAAW,QAAQ,OAAO,CAAC;AAClE,aAAO;IACT,CAAC;EACH;EAEQ,YAAY,QAAc;AAChC,QAAI,CAAC,KAAK,kBAAiB,GAAI;AAC7B,aAAO,QAAQ,QAAO;IACxB;AACA,QAAI,aAAa,KAAK,SAAQ,GAAI,OAAO,MAAM,KAAK,KAAK,kBAAiB;AAC1E,WAAO,KAAK,mBAAmB,WAAW,YAAsB,MAAM,EAAE,KAAK,MAAK;AAChF,WAAK,cAAa,GAAI,UAAU,MAAM;AACtC,WAAK,sBAAsB,QAAQ,6BAA6B;AAEhE,UAAI,KAAK,SAAQ,GAAI;AACnB,aAAK,aAAY;MACnB;AAEA,WAAK,eAAe,kBAAkB,CAAC,WAAW,QAAQ,UAAU,CAAC;IACvE,CAAC;EACH;EAEQ,eAAY;AAClB,QAAI,CAAC,KAAK,SAAQ,GAAI;AACpB;IACF;AACA,SAAK,mBAAmB,kBAAkB,KAAK,SAAQ,EAAI,IAAI;AAC/D,SAAK,SAAS,IAAI,MAAS;EAC7B;EAEQ,YAAY,MAAa;AAC/B,QAAI,CAAC,MAAM;AACT;IACF;AACA,SAAK,mBAAmB,OAAO,IAAI,EAAE,KAAK,YAAS;AACjD,UAAI,CAAC,QAAQ;AACX;MACF;AACA,WAAK,OAAO,IAAI,MAAM;IACxB,CAAC;EACH;;qCArKW,qBAAkB,4BAAA,cAAA,GAAA,4BAAA,iBAAA,GAAA,4BAAA,oBAAA,GAAA,4BAAA,gBAAA,CAAA;EAAA;yEAAlB,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,WAAA,SAAA,yBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;qDAY4B,wBAAsB,CAAA;;;;;;;AA7G3E,MAAA,yBAAA,GAAA,YAAA,EAAY,GAAA,cAAA,EACM,GAAA,kBAAA,CAAA;AAEN,MAAA,8BAAA,GAAA,2CAAA,GAAA,GAAA,GAAA;AAKA,MAAA,8BAAA,GAAA,2CAAA,GAAA,CAAA,EAAkF,GAAA,2CAAA,GAAA,GAAA,UAAA;AAoDtF,MAAA,uBAAA;AAEA,MAAA,oBAAA,GAAA,sBAAA,CAAA;AAEA,MAAA,yBAAA,GAAA,eAAA,CAAA;AACI,MAAA,8BAAA,GAAA,2CAAA,GAAA,GAAA,aAAA,CAAA,EAAkF,GAAA,2CAAA,GAAA,GAAA,aAAA,CAAA;AAuBtF,MAAA,uBAAA,EAAc,EACH;;;;;;AAtFP,MAAA,oBAAA,CAAA;AAAA,MAAA,yBAAA,UAAA,IAAA,wBAAA,KAAA,IAAA,IAAA,OAAA;AAKA,MAAA,oBAAA;AAAA,MAAA,0BAAA,UAAA,IAAA,OAAA,MAAA,OAAA,OAAA,QAAA,SAAA,CAAA,IAAA,SAAA,KAAA,IAAA,SAAA,KAAA,IAAA,sBAAA,IAAA,IAAA,CAAA;AAsDgB,MAAA,oBAAA,CAAA;AAAA,MAAA,qBAAA,UAAA,IAAA,OAAA,CAAA;AAEP,MAAA,oBAAA;AAAA,MAAA,qBAAA,cAAA,IAAA,EAAmB,WAAA,IAAA;AAC5B,MAAA,oBAAA;AAAA,MAAA,0BAAA,UAAA,IAAA,OAAA,MAAA,OAAA,OAAA,QAAA,SAAA,CAAA,IAAA,SAAA,KAAA,IAAA,SAAA,KAAA,IAAA,sBAAA,IAAA,IAAA,CAAA;;;IAlFd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAkB,GAAA,eAAA,EAAA,CAAA;;;sEAqGT,oBAAkB,CAAA;UAtH9B;uBACW,kBAAgB,YACd,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;OACD,UACS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA6FT,CAAA;;;;6EAMU,oBAAkB,EAAA,WAAA,sBAAA,UAAA,oEAAA,YAAA,IAAA,CAAA;AAAA,GAAA;",
  "names": ["_c0", "ingredient", "_forTrack0"]
}
