{
  "version": 3,
  "sources": ["src/app/features/controls/form/control-group.component.ts", "src/app/features/controls/form/tags-control.component.ts", "src/app/features/controls/form/switch.component.ts", "src/app/features/recipes/view/add-recipe/add-recipe-form.component.ts", "src/app/features/recipes/view/add-recipe/add-recipe-form.component.html", "src/app/features/recipes/view/add-recipe/add-recipe.component.ts"],
  "sourcesContent": ["import {Component, input} from '@angular/core';\n\n@Component({\n  selector: 'lg-control-group',\n  standalone: true,\n  template: `\n    <div class=\"control-group\">\n      @if (label()) {\n        <p class=\"control-group__label\"> {{ label() }} </p>\n      }\n      <div class=\"control-group__content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex: 1;\n      }\n\n      .control-group {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        gap: 16px;\n        min-width: 0;\n      }\n\n      .control-group__label {\n        font-size: 1.2rem;\n        margin: 0;\n      }\n\n      .control-group__content {\n        display: flex;\n        gap: 8px;\n        align-items: flex-end;\n      }\n\n      .control-group__content > * {\n        flex: 1;\n      }\n    `\n  ]\n})\nexport class ControlGroupComponent {\n  constructor() {\n  }\n\n  label = input('');\n}\n", "import {\n  Component,\n  forwardRef, Input,\n  input,\n  OnInit,\n  Optional,\n  output,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NgLabelTemplateDirective,\n  NgMultiLabelTemplateDirective,\n  NgOptionTemplateDirective,\n  NgSelectComponent\n} from '@ng-select/ng-select';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {SelectResourcesService} from '../../../shared/service/services/select-resources.service';\nimport {NgStyle} from '@angular/common';\nimport {Tag} from '../../settings/service/models/Tag';\nimport {marker} from '@colsen1991/ngx-translate-extract-marker';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n\nexport interface TagsItem {\n  value: unknown\n}\n\n@Component({\n  selector: 'lg-tags-control',\n  standalone: true,\n  template: `\n    <div class=\"tags-control\">\n      <ng-select (change)=\"onChangeSelect($event)\"\n                 (ngModelChange)=\"onChangeInput($event)\"\n                 [addTagText]=\"addTagText | translate\"\n                 [addTag]=\"addTagFn\"\n                 [appendTo]=\"'body'\"\n                 [compareWith]=\"compareWith\"\n                 [items]=\"loadedList()\"\n                 [multiple]=\"multi()\"\n                 [ngModel]=\"value\"\n                 [placeholder]=\"placeholder | translate\"\n                 [searchFn]=\"searchFn\">\n        <ng-template let-item=\"item\" ng-label-tmp>\n          {{ $any(item)?.name ?? $any(item)?.label ?? item }}\n        </ng-template>\n        <ng-template let-item=\"item\" ng-option-tmp>\n          {{ $any(item)?.name ?? $any(item)?.label ?? item }}\n        </ng-template>\n        <ng-template let-clear=\"clear\" let-items=\"items\" ng-multi-label-tmp>\n          @for (item of items; track $any(item)?.name ?? $any(item)?.label ?? item) {\n            <div class=\"ng-value\"\n                 [ngStyle]=\"{background: $any(item)?.color ? $any(item)?.color : null}\">\n                          <span class=\"ng-value-label\">\n                              {{ $any(item)?.name ?? $any(item)?.label ?? item }}\n                          </span>\n              <span class=\"ng-value-icon right\" (click)=\"clear(item)\" aria-hidden=\"true\">Ã—</span>\n            </div>\n          }\n\n        </ng-template>\n      </ng-select>\n    </div>\n  `,\n  imports: [\n    NgSelectComponent,\n    FormsModule,\n    NgOptionTemplateDirective,\n    NgLabelTemplateDirective,\n    NgMultiLabelTemplateDirective,\n    NgStyle,\n    TranslatePipe\n  ],\n  styles: [\n    `\n      lg-tags-control {\n        display: flex;\n        flex: 1;\n        min-width: 150px;\n      }\n\n      .tags-control {\n        flex: 1;\n        width: 100%;\n\n        .ng-select .ng-select-container {\n          height: 51px;\n        }\n\n        .ng-select .ng-select-container {\n          border: none;\n          border-radius: 12px;\n          background-color: var(--control-bg);\n\n          .ng-input {\n            top: 16px !important;\n\n            & > input {\n              color: var(--text);\n              font-family: inherit;\n              font-size: inherit;\n            }\n          }\n        }\n\n        .ng-dropdown-panel {\n          border: none;\n          box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);\n          border-radius: 12px;\n          overflow: hidden;\n\n          .ng-option {\n            padding: 16px;\n            border-radius: 12px;\n          }\n        }\n      }\n\n    `\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TagsControlComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TagsControlComponent\n  implements ControlValueAccessor, OnInit {\n  constructor(\n    @Optional() private _selectResourcesService: SelectResourcesService,\n  ) {\n  }\n\n  @Input() placeholder: string = '';\n  @Input() addTagText: string = marker('tags.add-tag-text');\n  resource = input<string>('');\n  autoLoad = input<boolean>(false);\n  multi = input<boolean>(false);\n  loadedList = signal([]);\n  onSelected = output<unknown>();\n  value?: unknown = null\n  selectComponent = viewChild(NgSelectComponent);\n\n  addTagFn(name: string) {\n    return Tag.fromRaw(name);\n  };\n\n  onChange: (value: unknown) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  searchFn = (term: string, item: TagsItem) => {\n    const val = item as any;\n    return val?.toString().toLowerCase().includes(term.toLowerCase())\n  }\n\n  compareWith = (a: TagsItem, b: TagsItem) => {\n    const valA = a as any;\n    const valB = b as any;\n\n    return valA === valB\n  }\n\n  writeValue(value: unknown): void {\n    this.change(value);\n  }\n\n  change(value: unknown) {\n    if (Array.isArray(value)) {\n      this.value = value.map((item) => Tag.fromRaw(item).toDTO());\n    } else {\n      this.value = Tag.fromRaw(value).toDTO();\n    }\n\n    console.log('new tags value', value);\n    this.onChange(this.value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeInput(value: unknown) {\n    this.change(value);\n  }\n\n  onChangeSelect(value: unknown) {\n    this.change(value);\n    this.onSelected.emit(value);\n  }\n\n  ngOnInit() {\n    this._selectResourcesService.register(this.resource());\n    if (this.autoLoad()) {\n      this._selectResourcesService.load([this.resource()]);\n    }\n    this._selectResourcesService.subscribe((registry) => {\n      const items = registry.get(this.resource())?.list ?? [];\n      this.loadedList.set(items as any);\n    });\n  }\n\n  reload() {\n    return this._selectResourcesService.load([this.resource()], true);\n  }\n}\n", "import {\n  Component,\n  forwardRef,\n  HostListener,\n  ViewEncapsulation,\n  input\n} from '@angular/core';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgClass} from '@angular/common';\n\n@Component({\n  selector: 'lg-switch',\n  standalone: true,\n  template: `\n    <label class=\"lg-switch\"\n           [ngClass]=\"size()\"\n           [attr.for]=\"name()\"\n           tabindex=\"0\">\n\n      <ng-content select=\"[slot='left']\"></ng-content>\n\n      <input type=\"checkbox\"\n             class=\"switch\"\n             [attr.id]=\"name()\"\n             [attr.name]=\"name()\"\n             [ngModel]=\"modelValue\"\n             (ngModelChange)=\"onChangeSwitch($event)\"/>\n\n      <span class=\"lg-switch__track\">\n        <span class=\"lg-switch__thumb\"></span>\n      </span>\n\n      <ng-content select=\"[slot='right']\"></ng-content>\n    </label>\n  `,\n  styles: [`\n    .lg-switch {\n      display: inline-flex;\n      align-items: center;\n      gap: 8px;\n      cursor: pointer;\n      border-radius: 9999px;\n    }\n\n    .switch {\n      display: none;\n    }\n\n    .lg-switch__track {\n      position: relative;\n      display: inline-flex;\n      align-items: center;\n      width: 42px;\n      height: 24px;\n      background-color: var(--control-bg, #ccc);\n      border-radius: 9999px;\n      transition: background-color 0.2s ease-in-out;\n    }\n\n    .lg-switch__thumb {\n      position: absolute;\n      left: 2px;\n      width: 20px;\n      height: 20px;\n      background-color: #fff;\n      border-radius: 50%;\n      box-shadow: 0 1px 3px rgba(0,0,0,0.2);\n      transition: transform 0.2s ease-in-out;\n    }\n\n    .switch:checked + .lg-switch__track {\n      background-color: var(--control-bg-selected, #4caf50);\n    }\n\n    .switch:checked + .lg-switch__track .lg-switch__thumb {\n      transform: translateX(18px);\n    }\n\n    /* sizes */\n    .lg-switch.small .lg-switch__track {\n      width: 28px;\n      height: 16px;\n    }\n    .lg-switch.small .lg-switch__thumb {\n      width: 12px;\n      height: 12px;\n      left: 2px;\n    }\n    .lg-switch.small .switch:checked + .lg-switch__track .lg-switch__thumb {\n      transform: translateX(12px);\n    }\n\n    .lg-switch.medium .lg-switch__track {\n      width: 36px;\n      height: 20px;\n    }\n    .lg-switch.medium .lg-switch__thumb {\n      width: 16px;\n      height: 16px;\n      left: 2px;\n    }\n    .lg-switch.medium .switch:checked + .lg-switch__track .lg-switch__thumb {\n      transform: translateX(16px);\n    }\n  `],\n  encapsulation: ViewEncapsulation.None,\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => SwitchComponent),\n    multi: true\n  }],\n  imports: [\n    FormsModule,\n    NgClass\n  ]\n})\nexport class SwitchComponent implements ControlValueAccessor {\n  value = input<string | number>('');\n  name = input<string>('lg-switch');\n  size = input<'small' | 'medium' | 'default'>('default');\n\n  modelValue = false;\n\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  onKeydown(event: KeyboardEvent) {\n    event.preventDefault();\n    this.onChangeSwitch(!this.modelValue);\n  }\n\n  onChange: (value: boolean) => void = () => {};\n  onTouched: () => void = () => {};\n\n  writeValue(value: boolean): void {\n    this._change(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeSwitch(value: boolean) {\n    this._change(value);\n  }\n\n  private _change(value: boolean) {\n    this.modelValue = value;\n    this.onChange(this.modelValue);\n  }\n}\n", "import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  effect, inject,\n  input,\n  OnInit,\n  signal,\n  viewChild,\n  viewChildren\n} from '@angular/core';\nimport {FormArray, FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {ControlGroupComponent} from '../../../controls/form/control-group.component';\nimport {FlexColumnComponent} from '../../../../shared/view/layout/flex-column.component';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {TextareaComponent} from '../../../controls/form/textarea.component';\nimport {debounceTime} from 'rxjs';\nimport {RecipesRepository} from '../../service/providers/recipes.repository';\nimport {MultiselectComponent} from '../../../controls/form/multiselect.component';\nimport {SelectResourcesService} from '../../../../shared/service/services/select-resources.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {NumberInputComponent} from '../../../controls/form/number-input.component';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {ParseMathDirective} from '../../../../shared/view/directives/parse-math.directive';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {TooltipComponent} from '../../../../shared/view/ui/tooltip.component';\nimport {ProductWidgetsComponent} from '../../../widgets/product-widgets.component';\nimport {injectParams} from '../../../../shared/helpers/route.helpers';\nimport {ChipsListComponent} from '../../../controls/form/chips-list.component';\nimport {AutocompleteComponent} from '../../../controls/form/autocomplete.component';\nimport {Recipe} from '../../service/models/Recipe';\nimport {Ingredient} from '../../service/models/Ingredient';\nimport {recipeToFormValue} from '../../../../shared/helpers/recipe.helpers';\nimport {RecipeDTO} from '../../service/schemes/Recipe.scheme';\nimport {MatIcon} from '@angular/material/icon';\nimport {TranslatePipe} from \"@ngx-translate/core\";\nimport {UnitSwitcherComponent} from '../../../../shared/view/ui/unit-switcher.component';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {ControlExtraTemplateDirective} from \"../../../controls/form/control-extra-template.directive\";\nimport {TagsControlComponent} from '../../../controls/form/tags-control.component';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {ControlComponent} from \"../../../controls/form/control-item/control.component\";\nimport {UnitValue} from '../../../../shared/view/const/units.const';\nimport {EntityItemSelectorComponent} from '@invoices/view/add-invoice/parts/entity-item-selector.component';\nimport {SwitchComponent} from '../../../controls/form/switch.component';\nimport {InputComponent} from '../../../controls/form/input.component';\nimport {ControlBoxComponent} from '../../../controls/form/control-box.component';\nimport {SelfStartDirective} from '../../../../shared/view/directives/self-start.directive';\nimport {WidthDirective} from '../../../../shared/view/directives/width.directive';\nimport {productLabelFactoryProvider} from '../../../../shared/factories/entity-labels/product.label.factory';\nimport {errorHandler} from '../../../../shared/helpers';\n\n@Component({\n  selector: 'lg-add-recipe-form',\n  standalone: true,\n  templateUrl: './add-recipe-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    ReactiveFormsModule,\n    ControlGroupComponent,\n    FlexColumnComponent,\n    ButtonComponent,\n    TextareaComponent,\n    MultiselectComponent,\n    NumberInputComponent,\n    ExpandDirective,\n    ParseMathDirective,\n    ChipsListComponent,\n    FormsModule,\n    MatIcon,\n    TranslatePipe,\n    UnitSwitcherComponent,\n    CardComponent,\n    ControlExtraTemplateDirective,\n    TagsControlComponent,\n    FlexRowComponent,\n    ControlComponent,\n    EntityItemSelectorComponent,\n    SwitchComponent,\n    InputComponent,\n    ControlBoxComponent,\n    SelfStartDirective,\n    WidthDirective\n  ],\n  providers: [\n    {\n      provide: SelectResourcesService,\n      useClass: SelectResourcesService,\n    }\n  ],\n})\nexport class AddRecipeFormComponent\n  implements OnInit,\n    AfterViewInit {\n  constructor(\n    public _recipesRepository: RecipesRepository,\n    public _selectResourcesService: SelectResourcesService,\n    private _router: Router,\n    private _aRoute: ActivatedRoute,\n    private _notificationsService: NotificationsService\n  ) {\n  }\n\n  editMode = input(false);\n  recipe = input<Recipe | undefined>(undefined);\n  uuid = injectParams<string>('uuid');\n  form = new FormGroup({\n    name: new FormControl<string | null>(null, Validators.required),\n    description: new FormControl(''),\n    portions: new FormControl<number | string | null>(null),\n    ingredients: new FormArray([\n      this._getIngredientGroup(),\n    ]),\n    category_id: new FormControl<any>(null),\n    tags: new FormControl<string[]>([]),\n    master: new FormControl<boolean>(false),\n  })\n  recipeFieldState = signal<Record<number, boolean>>({});\n  tooltipComponent = viewChildren<TooltipComponent>('tooltipComponent');\n  productsWidget = viewChildren<ProductWidgetsComponent>('products');\n  productsSelector = viewChildren<MultiselectComponent>('productsSelector');\n  nameField = viewChild<AutocompleteComponent>('nameField');\n  topCategories = signal<any[]>([]);\n  protected readonly UnitValue = UnitValue;\n  protected readonly productLabelFactory = inject(productLabelFactoryProvider);\n  private recipeEffect = effect(() => {\n    if (this.recipe()) {\n      this.fillForm(this.recipe()!);\n    }\n  });\n\n  get ingredients() {\n    return this.form.get('ingredients') as FormArray;\n  }\n\n  private get _formValid() {\n    return this.form.valid && !this.checkCycleRecipe(this.form.getRawValue().ingredients, this.uuid());\n  }\n\n  fillForm(\n    recipe?: Recipe\n  ) {\n    this.form.reset({\n      ingredients: [],\n    });\n    this.ingredients.clear();\n\n    if (!recipe) {\n      return;\n    }\n    this.form.reset({\n      ...recipeToFormValue(recipe),\n      ingredients: [],\n    });\n\n    if (recipe.ingredients.length) {\n      recipe.ingredients.forEach((ingredient: Ingredient, index: number) => {\n        this.ingredients.push(this._getIngredientGroup(ingredient));\n\n        if (ingredient.recipe_id) {\n          this.openRecipeField(index);\n        }\n      })\n    } else {\n      this.ingredients.push(this._getIngredientGroup());\n    }\n\n    this.form.updateValueAndValidity();\n    this.form.markAsPristine();\n  }\n\n  resetForm(\n    recipe?: Recipe\n  ) {\n    this.fillForm(recipe);\n    this._loadUsingHistory();\n    this.form.markAsPristine();\n  }\n\n  validateForm() {\n    if (!this._formValid) {\n      this._notificationsService.error(this._notificationsService.parseFormErrors(this.form).join(', '));\n      return false;\n    }\n    return true\n  }\n\n  addLast() {\n    const lastControl = this.ingredients.at(this.ingredients.length - 1);\n    // if last control is empty, skip, if not, add new control\n    if (lastControl.value.name || lastControl.value.amount || lastControl.value.product_id) {\n      this.addIngredient();\n    }\n  }\n\n  ngOnInit() {\n    this._loadUsingHistory();\n    this.form.valueChanges.pipe(\n      debounceTime(100),\n    ).subscribe({\n      next: values => {\n        if (!this.form.dirty) {\n          return\n        }\n        this.recipe()?.update(this.form.getRawValue());\n        const hasCycledRecipe = this.checkCycleRecipe(this.form.getRawValue().ingredients, this.uuid());\n        if (hasCycledRecipe) {\n          this._notificationsService.error('notifications.recipe.cycle-error');\n        }\n      }\n    });\n  }\n\n  ngAfterViewInit() {\n    this._selectResourcesService.load().then(resources => {\n      if (!this.editMode()) {\n        this.nameField()!.focus();\n      }\n    }).catch(err => {\n      this._notificationsService.error(errorHandler(err));\n    });\n  }\n\n  addIngredient() {\n    this.ingredients.push(this._getIngredientGroup());\n    this.form.markAsDirty();\n  }\n\n  deleteIngredient(index: number) {\n    this.ingredients.removeAt(index);\n    this.form.markAsDirty();\n  }\n\n  onIngredientSelected(\n    amount: NumberInputComponent,\n    index: number,\n    clearField: string | string[],\n  ) {\n    amount.focus();\n\n    const value = this.ingredients.at(index).value;\n\n    this.ingredients.at(index).patchValue({\n      ...(Array.isArray(clearField) ? clearField.reduce((acc, field) => ({\n        ...acc,\n        [field]: null\n      }), {}) : {[clearField]: null}),\n      unit: value.product_id?.unit || value.recipe_id?.unit || UnitValue.GRAM\n    });\n  }\n\n  openRecipeField(\n    index: number\n  ) {\n    this.recipeFieldState.update((value) => {\n      return {\n        ...value,\n        [index]: true,\n      }\n    });\n  }\n\n  closeRecipeField(\n    index: number\n  ) {\n    this.recipeFieldState.update((value) => {\n      return {\n        ...value,\n        [index]: false,\n      }\n    });\n  }\n\n  checkCycleRecipe(\n    ingredients: RecipeDTO['ingredients'],\n    recipeUUID: string\n  ) {\n    let match = false;\n    for (const ingr of ingredients) {\n      const hasSubRecipe = ingr.recipe_id?.uuid;\n      if (hasSubRecipe && hasSubRecipe === recipeUUID) {\n        match = true;\n        break;\n      }\n    }\n    return match;\n  }\n\n  private _getLastRowType(): string {\n    if (!this.form) return 'product';\n    const lastRow = this.ingredients.at(this.ingredients.length - 1);\n    if (lastRow && lastRow.value) {\n      return lastRow.value.active_tab;\n    }\n    return 'product';\n  }\n\n  private _loadUsingHistory() {\n    this._recipesRepository.getTopCategories().then(categories => {\n      this.topCategories.set(categories.map(category => ({\n        label: category.name,\n        value: {\n          uuid: category.uuid,\n          name: category.name,\n        },\n      })));\n    });\n  }\n\n  private _getIngredientGroup(\n    ingredient?: Recipe['ingredients'][number]\n  ) {\n    let active_tab = this._getLastRowType();\n\n    if (ingredient?.recipe_id) {\n      active_tab = 'recipe';\n    } else if (ingredient?.product_id) {\n      active_tab = 'product';\n    }\n\n    return new FormGroup({\n      name: new FormControl(ingredient?.name),\n      amount: new FormControl(ingredient?.amount?.toString() ?? null),\n      product_id: new FormControl(ingredient?.product_id ? ingredient.product_id : null),\n      recipe_id: new FormControl(ingredient?.recipe_id ? ingredient.recipe_id : null),\n      active_tab: new FormControl(active_tab),\n      unit: new FormControl(ingredient?.unit ?? UnitValue.GRAM),\n    }, (group) => {\n      const ingredient = Ingredient.fromRaw(group.value);\n      if (ingredient.allEmpty) {\n        return null\n      }\n      if (ingredient.typeSelected && !ingredient.amountValid) {\n        return {\n          ingredientAmountRequired: true\n        }\n      }\n      if (!this.uuid) return null;\n      const uuid = this.uuid();\n      if (this.checkCycleRecipe([group.value], uuid)) {\n        return {cycleRecipe: true};\n      }\n\n      if (!ingredient.typeSelected) {\n        return {ingredientRequired: true};\n      }\n\n      return null;\n    });\n  }\n}\n", "<form [formGroup]=\"form\">\n  <lg-flex-column>\n    <lg-card>\n      <lg-flex-column [position]=\"'start'\">\n        <lg-control [label]=\"'recipe.form.name.placeholder'|translate\"\n                    lgExpand>\n          <lg-input #nameField\n                    formControlName=\"name\"\n                    placeholder=\"\"\n          ></lg-input>\n        </lg-control>\n\n        <lg-control [label]=\"'recipe.form.description.placeholder'|translate\"\n                    lgExpand>\n          <lg-textarea formControlName=\"description\"\n                       lgExpand\n                       placeholder=\"\"></lg-textarea>\n\n        </lg-control>\n      </lg-flex-column>\n    </lg-card>\n    <lg-card>\n\n      <lg-flex-column [position]=\"'start'\">\n        <lg-control [label]=\"'recipe.form.outcome_amount.placeholder'|translate\"\n                    lgExpand>\n          <lg-number-input #amount\n                           formControlName=\"portions\"\n                           lgParseMath\n                           placeholder=\"\"></lg-number-input>\n        </lg-control>\n\n        <lg-control-group label=\"{{ 'recipe.form.ingredients.label'|translate }}\" lgExpand>\n          <lg-flex-column [position]=\"'start'\">\n            <lg-flex-column [size]=\"'medium'\"\n                            formArrayName=\"ingredients\"\n                            lgExpand>\n              @for (control of ingredients.controls; track (control.value.amount + i + 1); let i = $index,\n                last = $last) {\n                <ng-container [formGroupName]=\"i\">\n                  <lg-flex-row [bottom]=\"true\"\n                               size=\"medium\"\n                               [mobileMode]=\"true\">\n                    <lg-entity-item-selector lgExpand\n                                             formControlName=\"active_tab\">\n                      <lg-multiselect [resource]=\"'recipes'\"\n                                      appendTo=\"body\"\n                                      [placeholder]=\"'invoices.find-recipe' | translate\"\n                                      formControlName=\"recipe_id\"\n                                      ngProjectAs=\"recipes\"\n                                      [autoLoad]=\"true\"></lg-multiselect>\n\n                      <lg-multiselect [resource]=\"'products'\"\n                                      appendTo=\"body\"\n                                      [labelFactory]=\"productLabelFactory\"\n                                      [optionFactory]=\"productLabelFactory\"\n                                      formControlName=\"product_id\"\n                                      [placeholder]=\"'invoices.find-product' | translate\"\n                                      ngProjectAs=\"products\"\n                                      [autoLoad]=\"true\">\n                      </lg-multiselect>\n                    </lg-entity-item-selector>\n\n                    <lg-number-input #amount\n                                     lgParseMath\n                                     lgWidth=\"40%\"\n                                     (onKeydown)=\"addLast()\"\n                                     [placeholder]=\"'recipe.form.ingredients.amount.placeholder'|translate:{unit:('unit.long.'+(form.value.ingredients?.[i]?.unit || UnitValue.GRAM)|translate)}\"\n                                     formControlName=\"amount\">\n                      <ng-template lgExtraTpl place=\"after\">\n                        <lg-unit-switcher formControlName=\"unit\">\n                        </lg-unit-switcher>\n                      </ng-template>\n                    </lg-number-input>\n\n                    <div>\n                      <lg-button [style]=\"'danger'\"\n                                 [flat]=\"true\"\n                                 [icon]=\"true\"\n                                 (click)=\"deleteIngredient(i)\">\n                        <mat-icon aria-hidden=\"false\" fontIcon=\"close\"></mat-icon>\n                      </lg-button>\n                    </div>\n\n                  </lg-flex-row>\n                  @if (!last) {\n                    <hr size=\"2\" lgExpand color=\"#fafafa\"/>\n                  }\n                </ng-container>\n              }\n            </lg-flex-column>\n\n            <lg-button (click)=\"addIngredient()\"\n                       [outlined]=\"true\"\n                       [size]=\"'small'\">\n              <mat-icon [inline]=\"true\"\n                        aria-hidden=\"false\"\n                        fontIcon=\"add\"></mat-icon>\n              {{ 'recipe.form.ingredients.add-btn'|translate }}\n            </lg-button>\n          </lg-flex-column>\n        </lg-control-group>\n      </lg-flex-column>\n    </lg-card>\n\n    <lg-flex-row [mobileMode]=\"true\">\n      <lg-control-box lgSelfStart lgWidth=\"50%\" style=\"--control-box-bg: var(--hr-bg-strong)\">\n        <lg-switch formControlName=\"master\">\n          <span class=\"text-center\" slot=\"left\">{{ 'recipe.form.chunk.label' | translate }}</span>\n          <span class=\"text-center\" slot=\"right\">{{ 'recipe.form.master.label' | translate }}</span>\n        </lg-switch>\n      </lg-control-box>\n    </lg-flex-row>\n\n    <lg-flex-row [equal]=\"true\" [mobileMode]=\"true\" style=\"--control-bg: var(--hr-bg-strong)\">\n      <lg-control [label]=\"'recipe.form.tags.placeholder'|translate\">\n        <lg-tags-control [multi]=\"true\"\n                         [resource]=\"'tags'\"\n                         formControlName=\"tags\"></lg-tags-control>\n      </lg-control>\n\n      <lg-control [label]=\"'recipe.form.category.placeholder'|translate\">\n        <lg-flex-column [position]=\"'start'\" [size]=\"'medium'\">\n          <lg-multiselect #categorySelect\n                          [resource]=\"'recipes-categories'\"\n                          appendTo=\"body\"\n                          formControlName=\"category_id\"\n                          lgExpand>\n          </lg-multiselect>\n\n          @if (topCategories().length) {\n            <lg-chips-list [control]=\"categorySelect\" [items]=\"topCategories()\"></lg-chips-list>\n          }\n        </lg-flex-column>\n      </lg-control>\n    </lg-flex-row>\n  </lg-flex-column>\n</form>\n", "import {AfterViewInit, Component, computed, inject, OnInit, signal, viewChild} from '@angular/core';\nimport {ContainerComponent} from '../../../../shared/view/layout/container.component';\nimport {TitleComponent} from '../../../../shared/view/layout/title.component';\nimport {AddRecipeFormComponent} from './add-recipe-form.component';\nimport {ActivatedRoute, RouterLink} from '@angular/router';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {RecipesRepository} from '../../../../shared/service/repositories';\nimport {DraftForm, NotificationsService} from '../../../../shared/service/services';\nimport {combineLatest, debounceTime} from 'rxjs';\nimport {ShrinkDirective} from '../../../../shared/view/directives/shrink.directive';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {Recipe} from '../../service/models/Recipe';\nimport {FlexColumnComponent} from '../../../../shared/view/layout/flex-column.component';\nimport {TranslatePipe, TranslateService} from '@ngx-translate/core';\nimport {errorHandler} from '../../../../shared/helpers';\nimport {\n  InlineSeparatedGroupComponent,\n  InlineSeparatedGroupDirective\n} from '../../../../shared/view/ui/inline-separated-group.component';\nimport {ROUTER_MANAGER} from '../../../../shared/service/providers/router-manager.provider';\nimport {AnalyticsService} from '../../../../shared/service/services/analytics.service';\nimport {SelfStartDirective} from '../../../../shared/view/directives/self-start.directive';\nimport {ControlsBarComponent} from '../../../../shared/view/ui/controls-bar/controls-bar.component';\nimport {RecipeScheme} from '../../service/schemes/Recipe.scheme';\nimport {Stores} from '../../../../shared/service/db/const/stores';\nimport {MatIcon} from '@angular/material/icon';\nimport {\n  DeleteConfirmationPopoverComponent\n} from '../../../../shared/view/ui/delete-confirmation-popover/delete-confirmation-popover.component';\nimport {\n  DeleteConfirmationService\n} from '../../../../shared/view/ui/delete-confirmation-popover/delete-confirmation.service';\n\n\n@Component({\n  selector: 'lg-add-recipe',\n  providers: [\n    DeleteConfirmationService\n  ],\n  imports: [\n    ContainerComponent,\n    TitleComponent,\n    AddRecipeFormComponent,\n    ButtonComponent,\n    FlexRowComponent,\n    FadeInComponent,\n    ShrinkDirective,\n    TimeAgoPipe,\n    FlexColumnComponent,\n    TranslatePipe,\n    RouterLink,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective,\n    SelfStartDirective,\n    ControlsBarComponent,\n    MatIcon,\n    DeleteConfirmationPopoverComponent,\n  ],\n  template: `\n    @if (editMode()) {\n      <lg-controls-bar>\n        <lg-button [icon]=\"true\"\n                   [link]=\"'/recipes/add'\"\n                   [size]=\"'medium'\"\n                   [style]=\"'primary'\">\n          <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n        </lg-button>\n      </lg-controls-bar>\n    }\n\n    <lg-fade-in>\n      <lg-container>\n        <lg-flex-column size=\"medium\">\n          @if (addedRecipeInformerUUID(); as uuid) {\n            <p>\n              {{ 'recipe.added-informer' | translate }} <a\n              routerLink=\"/recipes/edit/{{ uuid }}\">{{ 'recipe.added-informer.link' | translate }}</a>\n            </p>\n          }\n\n          @if ((recipe()?.uuid && !draftRef()) || (draftRef() && draftByExistingRecipe())) {\n            <lg-flex-row [mobileMode]=\"true\" [center]=\"true\">\n              <lg-title lgSelfStart>\n                {{ recipe()?.name }}\n              </lg-title>\n            </lg-flex-row>\n\n            <lg-inline-separated-group>\n              @if (draftRef() && formComponent()?.form?.dirty) {\n                <ng-template lgInlineSeparatedGroup>\n                  <lg-fade-in>\n                    <span class=\"text-success\">{{ 'saved-draft-label'|translate }}</span>\n                  </lg-fade-in>\n                </ng-template>\n              }\n\n              @if (!draftRef()) {\n                <ng-template lgInlineSeparatedGroup>\n                  <lg-button [flat]=\"true\"\n                             [link]=\"'/recipes/calculate/' + recipe()?.uuid\"\n                             [style]=\"'default'\">\n                    {{ 'recipe.calculate-btn'|translate }}\n                  </lg-button>\n                </ng-template>\n\n                @if (editMode()) {\n                  <ng-template lgInlineSeparatedGroup>\n                    <lg-button lgShrink\n                               [style]=\"'default'\"\n                               [flat]=\"true\"\n                               (click)=\"onCloneRecipe()\">\n                      {{ 'recipe.form.clone-btn'|translate }}\n                    </lg-button>\n                  </ng-template>\n                }\n              }\n\n              @if (isDraftRoute()) {\n                <ng-template lgInlineSeparatedGroup>\n                  <lg-button lgShrink\n                             [style]=\"'danger'\"\n                             [flat]=\"true\"\n                             (click)=\"onRemoveDraft()\">\n                    {{ 'recipe.form.delete-draft-btn'|translate }}\n                  </lg-button>\n                </ng-template>\n              } @else if (recipe()?.uuid) {\n                <ng-template lgInlineSeparatedGroup>\n                  <lg-button lgShrink\n                             [style]=\"'danger'\"\n                             [flat]=\"true\"\n                             (click)=\"onDeleteRecipe()\">\n                    {{ 'recipe.form.delete-btn'|translate }}\n                  </lg-button>\n                </ng-template>\n              }\n            </lg-inline-separated-group>\n\n            @if (recipe()?.updatedAt) {\n              <small class=\"text-muted text-cursive\">\n                {{ 'edited-at-label'|translate }} {{ recipe()?.updatedAt | timeAgo }}\n              </small>\n            }\n          } @else {\n            <lg-title>\n              {{ 'recipe.form.title'|translate }}\n            </lg-title>\n          }\n        </lg-flex-column>\n\n        <lg-add-recipe-form [editMode]=\"editMode()\"\n                            [recipe]=\"recipe()\"></lg-add-recipe-form>\n\n        <lg-flex-row [mobileMode]=\"true\" [relaxed]=\"true\">\n          @if ((recipe()?.uuid && !draftRef()) || (draftRef() && draftByExistingRecipe())) {\n            <lg-button [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                       lgShrink\n                       [style]=\"'primary'\"\n                       (click)=\"onEditRecipe()\">\n              @if (formComponent()?.form?.dirty || draftRef()) {\n                {{ 'recipe.form.save-btn.edit.active'|translate }}\n              } @else {\n                {{ 'recipe.form.save-btn.edit.disabled'|translate }}\n              }\n            </lg-button>\n          } @else {\n            <lg-button [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                       lgShrink\n                       [style]=\"'primary'\"\n                       (click)=\"onAddRecipe()\">\n              @if (formComponent()?.form?.dirty || draftRef()) {\n                {{ 'recipe.form.save-btn.add.active'|translate }}\n              } @else {\n                {{ 'recipe.form.save-btn.add.disabled'|translate }}\n              }\n            </lg-button>\n          }\n        </lg-flex-row>\n      </lg-container>\n    </lg-fade-in>\n\n    <lg-delete-confirmation-popover></lg-delete-confirmation-popover>\n  `,\n  styles: [\n    `\n    `\n  ]\n})\nexport class AddRecipeComponent\n  implements OnInit, AfterViewInit {\n  constructor(\n    private _aRoute: ActivatedRoute,\n    private _recipesRepository: RecipesRepository,\n    private _notificationsService: NotificationsService,\n    private _analyticsService: AnalyticsService,\n    private _translateService: TranslateService,\n  ) {\n  }\n\n  readonly deleteConfirmationService = inject(DeleteConfirmationService);\n  draftOrRecipeUUID = signal<string | undefined>(undefined);\n  recipe = signal<Recipe | undefined>(undefined);\n  formComponent = viewChild<AddRecipeFormComponent | null>(AddRecipeFormComponent);\n  draftRef = signal<DraftForm<Recipe> | undefined>(undefined);\n  draftByExistingRecipe = computed(() => {\n    return this.draftRef()?.meta?.['uuid'];\n  });\n  isDraftRoute = signal(false);\n  draftRecipeModel?: Recipe;\n  addedRecipeInformerUUID = signal<null | string>(null);\n  readonly editMode = computed(() => {\n    return (this.recipe()?.uuid && !this.draftRef()) || (this.draftRef() && this.draftByExistingRecipe())\n  })\n  protected readonly RecipeScheme = RecipeScheme;\n  protected readonly Stores = Stores;\n  private _routerManager = inject(ROUTER_MANAGER);\n\n  ngOnInit() {\n    combineLatest([\n      this._aRoute.params,\n      this._aRoute.data\n    ]).subscribe(([params, data]) => {\n      const draft = data['draft'] as DraftForm<Recipe>;\n      this.draftOrRecipeUUID.set(params['uuid']);\n\n      if (draft) {\n        this.draftRef.set(draft);\n        this.recipe.set(draft.data);\n      } else if (data['recipe']) {\n        this.recipe.set(data['recipe']);\n      } else if (this.draftOrRecipeUUID()) {\n        this._loadRecipe(this.draftOrRecipeUUID());\n      } else {\n        this.recipe.set(Recipe.empty());\n      }\n      this.isDraftRoute.set(!!data['draftRoute']);\n    });\n  }\n\n  ngAfterViewInit() {\n\n    this.formComponent()?.form.valueChanges.pipe(\n      debounceTime(500),\n    ).subscribe((value) => {\n      if (!this.formComponent()!.form.dirty) {\n        return\n      }\n      if (this.draftRef()?.uuid) {\n        this._recipesRepository.updateDraftRecipe(\n          this.draftRef()!.uuid,\n          this.recipe()!,\n          this.draftRef()!.meta?.['uuid']\n        );\n      } else if (this.recipe()) {\n        this.draftRef.set(this._recipesRepository.saveDraftRecipe(\n          this.recipe()!,\n          this.draftOrRecipeUUID() ?? ''));\n\n        // if (!this.isDraftRoute()) {\n        //   this._routerManager.replace(['recipes/draft/' + this.draftRef()!.uuid]);\n        // }\n      }\n    });\n  }\n\n  async onAddRecipe() {\n    try {\n      if (!this.formComponent()?.validateForm()\n        || !this.recipe()) {\n        return;\n      }\n      const newUUID = await this._addRecipe(this.recipe()!);\n      this.addedRecipeInformerUUID.set(newUUID);\n    } catch (e) {\n      this._notificationsService.error(errorHandler(e));\n    }\n  }\n\n  async onEditRecipe() {\n    if (!this.formComponent()?.validateForm()\n      || !this.recipe()) {\n      return;\n    }\n    await this._editRecipe(this.recipe()!);\n  }\n\n  onRemoveDraft() {\n    this._removeDraft();\n    this._routerManager.navigate(['recipes']);\n  }\n\n  onDeleteRecipe() {\n    if (!this.recipe()?.uuid) {\n      return;\n    }\n\n    this.deleteConfirmationService.configure({\n      message: this._translateService.instant('recipe.form.delete-confirm-message'),\n      onSuccess: () => {\n        this._recipesRepository.deleteOne(this.recipe()!.uuid!).then(() => {\n          this._notificationsService.success('notifications.recipe.deleted');\n          this._routerManager.navigate(['recipes']);\n        }).catch((e) => {\n          this._notificationsService.error(errorHandler(e));\n        });\n      },\n      onCancel: () => {\n      }\n    });\n  }\n\n  onCloneRecipe() {\n    if (!this.recipe()) {\n      return;\n    }\n    this._recipesRepository.cloneRecipe(this.recipe()!).then(async (newUUID: string) => {\n      this._notificationsService.success('notifications.recipe.cloned');\n      await this._routerManager.replace(['recipes', 'edit', newUUID]);\n\n      await this._loadRecipe(newUUID);\n      return newUUID;\n    });\n  }\n\n  private async _addRecipe(recipe: Recipe) {\n    try {\n      const newUUID = await this._recipesRepository.addRecipe(recipe);\n      // Track recipe creation analytics\n      this._analyticsService.trackRecipeCreated(recipe.name, {\n        recipe_uuid: newUUID,\n        ingredients_count: recipe.ingredients?.length || 0,\n        portions: recipe.portions,\n        category: recipe.category_id?.name\n      });\n\n      this.formComponent()?.resetForm();\n      this._notificationsService.success('notifications.recipe.added');\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n\n      await this._routerManager.replace(['recipes', 'edit', newUUID]);\n\n      await this._loadRecipe(newUUID);\n      return newUUID;\n    } catch (e) {\n      this._notificationsService.error(errorHandler(e));\n      return null;\n    }\n  }\n\n  private async _editRecipe(recipe: Recipe) {\n    if (!this.draftOrRecipeUUID()) {\n      return Promise.resolve();\n    }\n    let recipeUUID = this.draftRef()?.meta?.['uuid'] ?? this.draftOrRecipeUUID();\n    try {\n      await this._recipesRepository.editRecipe(recipeUUID as string, recipe);\n      this.formComponent()?.resetForm(recipe);\n      this._notificationsService.success('notifications.recipe.edited');\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.replace(['recipes', 'edit', recipeUUID]);\n    } catch (e) {\n      this._notificationsService.error(errorHandler(e));\n    }\n  }\n\n  private _removeDraft() {\n    if (!this.draftRef()) {\n      return;\n    }\n    this._recipesRepository.removeDraftRecipe(this.draftRef()!.uuid)\n    this.draftRef.set(undefined);\n  }\n\n  private _loadRecipe(uuid?: string) {\n    if (!uuid) {\n      return Promise.resolve();\n    }\n    return this._recipesRepository.getOne(uuid).then(recipe => {\n      if (!recipe) {\n        return;\n      }\n      this.recipe.set(recipe);\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": ["_c0", "ingredient", "_forTrack0"]
}
