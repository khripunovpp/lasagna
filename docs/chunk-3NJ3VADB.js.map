{
  "version": 3,
  "sources": ["src/app/shared/view/ui/unit-switcher.component.ts"],
  "sourcesContent": ["import {Component, effect, forwardRef, input, Input, signal, ViewEncapsulation} from '@angular/core';\nimport {ButtonSizes, ButtonStyle} from './layout/button.component';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {UnitValue} from '../const/units.const';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {marker} from '@colsen1991/ngx-translate-extract-marker';\n\nexport interface UnitGroupItem {\n  label: string\n  value: string\n  onClick?: () => void\n  style?: ButtonStyle\n  size?: ButtonSizes\n}\n\n@Component({\n  selector: 'lg-unit-switcher',\n  standalone: true,\n  template: `\n      <div class=\"unit-switcher\"\n           [class.disable]=\"disable\">\n          @for (item of items();track item.value;let last = $last, first = $first, index = $index) {\n              <button (click)=\"onClickItem(item,index)\"\n                      [style]=\"item.style || 'default'\"\n                      [class.active]=\"activeIndex() == index\"\n                      class=\"unit-switcher__item\"\n                      [class.unit-switcher__item--active]=\"activeIndex() == index\">\n                  {{ item.label | translate }}\n              </button>@if (!last) {\n                  <span class=\"unit-switcher__item-separator\">/</span>\n              }\n          }\n      </div>\n  `,\n  styles: [\n    `\n\n      .unit-switcher {\n        --unit-switcher-gap: 2px;\n        display: flex;\n        gap: var(--unit-switcher-gap);\n        align-items: center;\n        justify-content: center;\n      }\n\n      .unit-switcher.disable {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n\n      .unit-switcher__item {\n        display: flex;\n        gap: var(--unit-switcher-gap);\n        align-items: center;\n        justify-content: center;\n        cursor: pointer;\n        padding: var(--unit-switcher-gap);\n        appearance: none;\n        border: none;\n        background: none;\n        color: inherit;\n        font-family: inherit;\n        font-size: 0.8rem;\n\n        &.active {\n          color: var(--active-color);\n\n          .unit-switcher__item-separator {\n            color: var(--text-color);\n          }\n        }\n      }\n\n    `\n  ],\n  imports: [\n    TranslatePipe\n  ],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => UnitSwitcherComponent),\n      multi: true\n    }\n  ]\n})\nexport class UnitSwitcherComponent implements ControlValueAccessor {\n  @Input() flat = false;\n  @Input() disable = false;\n  items = input<UnitGroupItem[]>([\n    {\n      label:  marker('unit.gram'),\n      value: UnitValue.GRAM,\n      style: 'secondary',\n    },\n    {\n      label:  marker('unit.piece'),\n      value: UnitValue.PIECE,\n      style: 'secondary',\n    },\n  ]);\n  activeIndex = signal<number>(0);\n  value = signal<string>('');\n  effect = effect(() => {\n    const activeIndex = this.items()?.findIndex(item => item.value === this.value()) ?? -1;\n    this.activeIndex.set(activeIndex === -1 ? 0 : activeIndex);\n  });\n\n  onClickItem(item: UnitGroupItem, index: number) {\n    this.activeIndex.set(index);\n    this.writeValue(item.value);\n    item.onClick?.();\n  }\n\n  onChange: (value: string) => void = () => {\n  };\n  onTouched: () => void = () => {\n  };\n\n  writeValue(value: string): void {\n    this._change(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeInput(\n    event: Event\n  ) {\n    this._change((event.target as HTMLInputElement).value);\n  }\n\n  private _change(value: string) {\n    this.value.set(value);\n    this.onChange(this.value());\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
