{
  "version": 3,
  "sources": ["src/app/shared/view/ui/card/card-list.component.ts"],
  "sourcesContent": ["import {Component, ContentChildren, effect, input, output, QueryList, ViewEncapsulation} from '@angular/core';\n\nimport {CardListItemDirective} from './card-list-item.directive';\nimport {NgTemplateOutlet} from '@angular/common';\nimport {CheckboxComponent} from '../../../../features/controls/form/chckbox.component';\nimport {FormArray, FormControl, FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ButtonComponent} from '../button.component';\nimport {MatIcon} from '@angular/material/icon';\n\n@Component({\n  selector: 'lg-card-list',\n  standalone: true,\n  imports: [\n    NgTemplateOutlet,\n    CheckboxComponent,\n    FormsModule,\n    ReactiveFormsModule,\n    ButtonComponent,\n    MatIcon,\n    ],\n  template: `\n    <section [formGroup]=\"selected\" class=\"lg-card-list\">\n      <section class=\"lg-card-list__inner\" formArrayName=\"items\">\n        @for (item of items; track (item?.uuid ?? '') + $index; let i = $index, even = $even) {\n          <div class=\"lg-card-list__item\"\n               [class.colored]=\"!even\">\n            @if (mode() === 'selection') {\n              <lg-checkbox [formControlName]=\"i\"\n                           [size]=\"'medium'\"\n                           [value]=\"buildValueString(i, item)\"\n                           (onCheckboxChanged)=\"onChanges($event,i)\"></lg-checkbox>\n            }\n            <div [style.--card-list-bg]=\"item.bgColor\"\n              class=\"lg-card-list__item__inner\">\n              <ng-container [ngTemplateOutlet]=\"item.template\"></ng-container>\n            </div>\n            @if (mode() === 'selection') {\n              <lg-button [style]=\"'danger'\"\n                         [size]=\"'tiny'\"\n                         [icon]=\"true\"\n                         (click)=\"onDeleteOne.emit({uuid: item.uuid!, type: item.type})\">\n                <mat-icon aria-hidden=\"false\"\n                          fontIcon=\"close\"></mat-icon>\n              </lg-button>\n            }\n          </div>\n        } @empty {\n          <div style=\"padding:16px 24px;\">No items found</div>\n        }\n      </section>\n    </section>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        width: 100%;\n      }\n\n\n      .lg-card-list {\n      }\n\n      .lg-checkbox {\n        --control-bg: var(--card-list-checkbox-bg);\n        --control-bg-selected: var(--card-list-checkbox-bg);\n      }\n\n      .lg-card-list__inner {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        overflow: hidden;\n        gap: 16px;\n      }\n\n      .lg-card-list__item {\n        display: flex;\n        gap: 8px;\n        align-items: center;\n      }\n\n      .lg-card-list__item__inner {\n        flex: 1;\n        overflow-x: auto;\n        display: flex;\n        align-items: center;\n        padding: 16px;\n        gap: 8px;\n        background-color: var(--card-list-bg);\n        border-radius: 32px;\n        white-space: nowrap;\n\n        & > * {\n          flex: 1;\n        }\n      }\n\n      .lg-card-list__item.colored {\n        //background-color: #f6f6f6\n      }\n\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CardListComponent {\n\n  constructor() {\n  }\n\n  mode = input<'default' | 'selection'>('default');\n  selectAll = input<boolean>(false);\n  deselectAll = input<boolean>(false);\n  onSelected = output<[boolean, string]>();\n  onDeleteOne = output<{\n    uuid: string, type: string\n  }>();\n  @ContentChildren(CardListItemDirective) items!: QueryList<CardListItemDirective>;\n  selected = new FormGroup({\n    items: new FormArray([])\n  });\n\n  effectMode = effect(() => {\n    const items = (this.selected.get('items') as FormArray);\n    if (this.mode() === 'selection') {\n      items.clear();\n      items.reset();\n      this.items?.forEach((item, index) => {\n        items.push(new FormControl(false));\n      });\n    }\n  });\n  effectSelectAll = effect(() => {\n    const items = (this.selected.get('items') as FormArray);\n    if (this.selectAll()) {\n      items?.controls.forEach((item) => {\n        item.setValue(true);\n      });\n    }\n  });\n  effectDeselectAll = effect(() => {\n    const items = (this.selected.get('items') as FormArray);\n    if (this.deselectAll()) {\n      items?.controls.forEach((item) => {\n        item.setValue(false);\n      });\n    }\n  });\n\n  buildValueString(\n    index: number,\n    item: CardListItemDirective,\n  ) {\n    return String(`${item?.type}-${index}-${item?.uuid}`);\n  }\n\n  onChanges(\n    value: boolean | string,\n    index: number\n  ) {\n    const item = this.items.toArray()?.[index];\n    this.onSelected.emit([value as boolean, item?.uuid || '']);\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
