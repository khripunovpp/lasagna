{
  "version": 3,
  "sources": ["src/app/shared/view/ui/form/radio.component.ts", "src/app/shared/view/ui/form/currency-select.component.ts", "src/app/features/settings/view/localisation/localisation-settings.component.ts", "src/app/features/settings/view/backup/backup-settings.component.ts", "src/app/shared/view/ui/form/file-input.component.ts", "src/app/features/settings/view/finance-settings/invoices-settings/invoices-settings.component.ts", "src/app/features/settings/view/finance-settings/credentials/create-credential.component.ts", "src/app/features/settings/view/finance-settings/credentials/credential-settings.component.ts", "src/app/features/settings/service/providers/logs.grouping.ts", "src/app/shared/view/ui/pagination/pagination.component.ts", "src/app/shared/service/services/pagination.service.ts", "src/app/features/settings/view/log-center/log-center.component.ts", "src/app/features/settings/view/log-center/log-center-page.component.ts", "src/app/features/settings/view/settings.component.ts", "src/app/features/settings/view/settings.component.html"],
  "sourcesContent": ["import {Component, forwardRef, HostListener, input, output, ViewEncapsulation} from '@angular/core';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {NgClass} from '@angular/common';\n\n@Component({\n  selector: 'lg-radio',\n  standalone: true,\n  template: `\n      <label [attr.for]=\"name()+'-'+value()\"\n             [ngClass]=\"size()\"\n             class=\"lg-radio\"\n             tabindex=\"0\">\n          <input (ngModelChange)=\"onChangeCheckbox($event)\"\n                 [attr.id]=\"name()+'-'+value()\"\n                 [attr.name]=\"name()\"\n                 [attr.value]=\"radio() ? value() : modelValue\"\n                 [checked]=\"modelValue\"\n                 [ngModel]=\"modelValue\"\n                 [type]=\"radio() ? 'radio' : 'checkbox'\"\n                 class=\"checkbox\">\n          <span [class.lg-radio__hoverOnly]=\"markOnHover()\"\n                class=\"lg-radio__mark\">\n              <span class=\"lg-radio__mark-inner\">\n                  @if (!noMark()) {\n                      @if (customMark()) {\n                          <span [innerHTML]=\"customMark()\"></span>\n                      } @else {\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\n                               viewBox=\"0 0 24 24\">\n                      <path fill=\"currentColor\"\n                            d=\"M9.5 16.5l-4.25-4.25 1.4-1.4L9.5 13.7l7.35-7.35 1.4 1.4z\"/>\n                  </svg>\n                      }\n                  }\n              </span>\n          </span>\n\n          <ng-content></ng-content>\n      </label>\n  `,\n  styles: [\n    `\n      .lg-radio {\n        display: flex;\n        align-items: center;\n        border-radius: 12px;\n        gap: 8px;\n      }\n\n      .lg-radio:focus-within {\n        outline-color: var(--active-color);\n      }\n\n      .lg-radio__mark {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        width: 51px;\n        height: 51px;\n        border-radius: 12px;\n        background-color: var(--control-bg);\n        opacity: 0.2;\n        cursor: pointer;\n        transition: all 0.2s ease-in-out;\n        border: 1px solid transparent;\n      }\n\n      .lg-radio__hoverOnly {\n        background-color: transparent;\n        border-color: var(--text-color);\n      }\n\n      .lg-radio__hoverOnly .lg-radio__mark-inner {\n        opacity: 0;\n        transition: all 0.2s ease-in-out;\n      }\n\n      @media (hover: hover) {\n        .lg-radio__mark:hover {\n          opacity: 1;\n        }\n\n        .lg-radio__hoverOnly:hover .lg-radio__mark-inner {\n          opacity: 1;\n        }\n      }\n\n      .checkbox {\n        display: none;\n      }\n\n      .checkbox:checked + .lg-radio__mark {\n        background-color: var(--control-bg-selected);\n        opacity: 1;\n        font-weight: 700;\n      }\n\n      .checkbox:checked + .lg-radio__hoverOnly {\n\n        border-color: var(--control-bg-selected);\n      }\n\n      .checkbox:checked + .lg-radio__hoverOnly .lg-radio__mark-inner {\n        opacity: 1;\n\n      }\n\n      .lg-radio.small .lg-radio__mark {\n        width: 16px;\n        height: 16px;\n        border-radius: 6px;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => RadioComponent),\n      multi: true,\n    }\n  ],\n  imports: [\n    FormsModule,\n    NgClass\n]\n})\nexport class RadioComponent\n  implements ControlValueAccessor {\n  constructor() {\n  }\n\n  modelValue: boolean | string = false;\n  customMark = input<string>('');\n  name = input<string>('');\n  value = input<string>('');\n  // value = input<string>('');\n  size = input<\n    'small' | 'default' | 'large'\n  >('default');\n  markOnHover = input<boolean>(false);\n  radio = input<boolean>(false);\n  noMark = input<boolean>(false);\n  onCheckboxChanged = output<boolean | string>();\n\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  onKeydown(event: KeyboardEvent) {\n    event.preventDefault();\n    this.onChangeCheckbox(!this.modelValue);\n  }\n\n  onChange: (value: boolean | string) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  writeValue(value: boolean): void {\n    this._change(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeCheckbox(\n    value: boolean\n  ) {\n    this._change(value);\n  }\n\n\n  private _change(value: boolean | string) {\n    if (typeof value === 'boolean') {\n      this.modelValue = value;\n    } else {\n      this.modelValue = ['true', 'false'].includes(value) ? value === 'true' : value;\n    }\n    this.onChange(this.modelValue);\n    this.onCheckboxChanged.emit(this.modelValue);\n  }\n}\n", "import {\n  Component,\n  Signal,\n  input,\n  effect,\n  signal,\n  inject,\n  computed,\n  forwardRef,\n  ViewEncapsulation,\n  model,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {\n  ControlValueAccessor,\n  NG_VALUE_ACCESSOR,\n  ReactiveFormsModule,\n  FormsModule,\n} from '@angular/forms';\nimport { TranslatePipe } from '@ngx-translate/core';\nimport { FlexColumnComponent } from '../layout/flex-column.component';\nimport { TitleComponent } from '../layout/title/title.component';\nimport { MultiselectComponent } from './multiselect.component';\n\ninterface CurrencyOption {\n  code: string;\n  label: string;\n  name: string;\n}\n\n@Component({\n  selector: 'lg-currency-select',\n  standalone: true,\n  imports: [\n    CommonModule, \n    ReactiveFormsModule,\n    FormsModule,\n    TranslatePipe,\n    MultiselectComponent,\n    FlexColumnComponent,\n    TitleComponent\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => CurrencySelectComponent),\n    },\n  ],\n  template: `\n    <lg-flex-column [size]=\"'small'\">\n      <lg-title [level]=\"6\">\n        {{ 'language.settings.currency-title' | translate }}\n        (<a href=\"https://en.wikipedia.org/wiki/ISO_4217\" target=\"_blank\">ISO 4217</a>)\n      </lg-title>\n\n      <lg-multiselect\n        [placeholder]=\"'currency.select-placeholder' | translate\"\n        [staticItems]=\"displayedCurrencies()\"\n        [multi]=\"false\"\n        (onSelected)=\"onCurrencySelected($event)\"\n        [(ngModel)]=\"selectedCurrency\">\n      </lg-multiselect>\n    </lg-flex-column>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex: 1;\n    }\n  `],\n})\nexport class CurrencySelectComponent implements ControlValueAccessor {\n  // Язык передаётся через input-сигнал\n  lang = input<string>('en');\n\n  private currencyList: CurrencyOption[] = [\n    { code: 'USD', label: 'US Dollar', name: 'US Dollar' },\n    { code: 'EUR', label: 'Euro', name: 'Euro' },\n    { code: 'RUB', label: 'Russian Ruble', name: 'Russian Ruble' },\n    { code: 'BRL', label: 'Brazilian Real', name: 'Brazilian Real' },\n    { code: 'GBP', label: 'British Pound', name: 'British Pound' },\n    { code: 'JPY', label: 'Japanese Yen', name: 'Japanese Yen' },\n    { code: 'CNY', label: 'Chinese Yuan', name: 'Chinese Yuan' },\n    { code: 'INR', label: 'Indian Rupee', name: 'Indian Rupee' },\n    { code: 'KZT', label: 'Kazakhstani Tenge', name: 'Kazakhstani Tenge' },\n    { code: 'UAH', label: 'Ukrainian Hryvnia', name: 'Ukrainian Hryvnia' },\n    { code: 'PLN', label: 'Polish Zloty', name: 'Polish Zloty' },\n    { code: 'TRY', label: 'Turkish Lira', name: 'Turkish Lira' },\n  ];\n\n  private langPopularMap: Record<string, string[]> = {\n    en: ['USD', 'EUR', 'GBP', 'JPY'],\n    ru: ['RUB', 'USD', 'EUR', 'UAH', 'KZT'],\n    pt: ['EUR', 'BRL', 'USD'],\n  };\n\n  selectedCurrency = model<string | CurrencyOption>('USD');\n\n  // Популярные валюты для текущего языка\n  displayedCurrencies = computed(() => {\n    const popularCodes = this.langPopularMap[this.lang()] || ['USD', 'EUR'];\n    const codes = new Set([...popularCodes, 'USD', 'EUR']); // Всегда включаем USD и EUR\n\n    return this.currencyList.filter((c) => codes.has(c.code));\n  });\n\n  private onChange = (val: string) => {};\n  private onTouched = () => {};\n\n  writeValue(obj: string): void {\n    const currencyCode = obj || 'USD';\n    this.selectedCurrency.set(currencyCode);\n    \n    // Найти объект валюты в списке\n    const currencies = this.displayedCurrencies();\n    const foundCurrency = currencies.find(c => c.code === currencyCode);\n    if (foundCurrency) {\n      // Установить объект валюты вместо кода\n      this.selectedCurrency.set(foundCurrency);\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // Реализация при необходимости\n  }\n\n  onCurrencySelected(currency: any) {\n    const currencyCode = typeof currency === 'string' ? currency : currency?.code;\n    this.selectedCurrency.set(currency);\n    this.onChange(currencyCode);\n    this.onTouched();\n  }\n} ", "import {Component, computed, inject, model, Signal} from '@angular/core';\nimport {SettingsService} from '../../service/services/settings.service';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {FlexColumnComponent} from '../../../../shared/view/ui/layout/flex-column.component';\nimport {FlexRowComponent} from '../../../../shared/view/ui/layout/flex-row.component';\nimport {FormsModule} from '@angular/forms';\nimport {RadioComponent} from '../../../../shared/view/ui/form/radio.component';\nimport {CurrencySelectComponent} from '../../../../shared/view/ui/form/currency-select.component';\nimport {SelfStartDirective} from '../../../../shared/view/directives/self-start.directive';\nimport {NotificationsService} from '../../../../shared/service/services';\nimport {errorHandler} from '../../../../shared/helpers';\nimport {ControlComponent} from '../../../../shared/view/ui/form/control-item/control.component';\n\n\n@Component({\n  selector: 'lg-language-settings',\n  standalone: true,\n  template: `\n    <lg-flex-column size=\"medium\">\n      <lg-control [label]=\"'language.settings.language-title' | translate\">\n        <section class=\"language-settings\">\n          <lg-flex-column [size]=\"'small'\">\n            @for (lang of languages(); track lang.code; let i = $index) {\n              <lg-flex-row [center]=\"true\"\n                           [mobileMode]=\"true\"\n                           [size]=\"'small'\">\n                <lg-radio [markOnHover]=\"true\"\n                          [radio]=\"true\"\n                          lgSelfStart\n                          [name]=\"'lang'\"\n                          [value]=\"lang.code\"\n                          [ngModel]=\"selectedLangModel()[i]\"\n                          (change)=\"changeLang(lang.code)\"\n                          [size]=\"'small'\"\n                          [noMark]=\"true\">\n                  {{ lang.name | translate }}\n                </lg-radio>\n              </lg-flex-row>\n            }\n          </lg-flex-column>\n        </section>\n      </lg-control>\n\n      <lg-currency-select\n        (ngModelChange)=\"changeCurrency($event)\"\n        [lang]=\"selectedLang()\"\n        [ngModel]=\"currency()\">\n      </lg-currency-select>\n    </lg-flex-column>\n  `,\n  styles: [``],\n  imports: [\n    FlexRowComponent,\n    FlexColumnComponent,\n    FormsModule,\n    RadioComponent,\n    CurrencySelectComponent,\n    TranslatePipe,\n    FlexColumnComponent,\n    SelfStartDirective,\n    ControlComponent\n  ]\n})\nexport class LocalisationSettingsComponent {\n  constructor() {\n    this.selectedLangModel.update(oldValue => {\n      return this._settingsService.languages.map((value => this._settingsService.settingsSignal()?.getSetting<string>('lang')?.data === value));\n    });\n\n    this.currency.set(this._settingsService.settingsSignal()?.getSetting<string>('currency')?.data || 'USD');\n  }\n\n  readonly currency = model('EUR');\n  readonly langsMap: Record<string, string> = {\n    'en': 'settings.language.english',\n    'pt': 'settings.language.portuguese',\n    'ru': 'settings.language.russian',\n  };\n  readonly selectedLangModel = model<boolean[]>([]);\n  private readonly _notificationsService = inject(NotificationsService);\n  private readonly _settingsService = inject(SettingsService);\n  readonly selectedLang: Signal<string> = this._settingsService.lang;\n  readonly languages = computed(() => {\n    return this._settingsService.languages\n      .map((lang: string) => ({\n        code: lang,\n        name: this.langsMap[lang] ? this.langsMap[lang] : lang,\n      }));\n  });\n\n  async changeLang(lang: string) {\n    try {\n      await this._settingsService.changeLang(lang);\n      this._notificationsService.success('settings.language.changed');\n    } catch (error) {\n      this._notificationsService.error(errorHandler(error));\n    }\n  }\n\n  async changeCurrency(currency: string) {\n    try {\n      await this._settingsService.changeCurrency(String(currency).toUpperCase());\n      this._notificationsService.success('settings.currency.changed');\n    } catch (error) {\n      this._notificationsService.error(errorHandler(error));\n    }\n  }\n}\n", "import {Component, inject} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {FlexRowComponent} from '../../../../shared/view/ui/layout/flex-row.component';\nimport {FlexColumnComponent} from '../../../../shared/view/ui/layout/flex-column.component';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {UploadComponent} from '../../../../shared/view/ui/form/upload.component';\nimport {TranslatePipe, TranslateService} from '@ngx-translate/core';\nimport {injectQueryParams} from '../../../../shared/helpers';\nimport {NotificationsService, TransferDataService} from '../../../../shared/service/services';\nimport {DexieIndexDbService} from '../../../../shared/service/db/dexie-index-db.service';\nimport {SelfStartDirective} from '../../../../shared/view/directives/self-start.directive';\n\n@Component({\n  selector: 'lg-backup-settings',\n  standalone: true,\n  template: `\n    <lg-flex-column>\n      <lg-flex-row [center]=\"true\" [mobileMode]=\"true\">\n        <lg-button (click)=\"onBackup()\"\n                   [style]=\"'success'\"\n                   lgSelfStart>\n          {{ 'backup.make-btn'|translate }}\n        </lg-button>\n\n        @if (transferDataService.currenBackupDate) {\n          {{ 'backup.last-label'|translate }} {{ transferDataService.currenBackupDate | timeAgo }}\n        }\n      </lg-flex-row>\n\n\n      <lg-upload (filesSelected)=\"onRestore($event)\" [accept]=\"'.json'\">\n        <lg-card style=\"--card-bg:#e78888\">\n          <lg-flex-column [position]=\"'center'\">\n            <div class=\"text-center text-inverse\">\n              {{ 'backup.restore-informer'|translate }}\n            </div>\n\n            <lg-button [style]=\"'danger'\">\n              {{ 'backup.restore-btn'|translate }}\n            </lg-button>\n          </lg-flex-column>\n        </lg-card>\n      </lg-upload>\n\n      <lg-card style=\"--card-bg:#fcd9b5\">\n        <lg-flex-column [position]=\"'center'\">\n          <div class=\"text-center\">\n            {{ 'backup.flush-informer'|translate }}\n          </div>\n\n          <lg-button (click)=\"onFlush()\" [style]=\"'success'\">\n            {{ 'backup.flush-btn'|translate }}\n          </lg-button>\n        </lg-flex-column>\n      </lg-card>\n    </lg-flex-column>\n  `,\n  styles: [``],\n  imports: [\n    CardComponent,\n    FlexRowComponent,\n    FlexColumnComponent,\n    FormsModule,\n    TimeAgoPipe,\n    ButtonComponent,\n    UploadComponent,\n    TranslatePipe,\n    SelfStartDirective\n  ]\n})\nexport class BackupSettingsComponent {\n  constructor() {\n  }\n\n  downloadBackupParam = injectQueryParams('download_backup');\n  transferDataService = inject(TransferDataService);\n  notificationsService = inject(NotificationsService);\n  dexieIndexDbService = inject(DexieIndexDbService);\n  translate = inject(TranslateService);\n\n  ngAfterViewInit() {\n    if (this.downloadBackupParam()) {\n      this.onBackup();\n    }\n  }\n\n  async onBackup() {\n    const loader = this.notificationsService.loading(this.translate.instant('backup.creating'));\n    try {\n      await this.transferDataService.exportAll('json');\n      this.notificationsService.success(this.translate.instant('backup.created'));\n      localStorage.setItem('lastBackupDate', Date.now().toString());\n    } catch (e) {\n      this.notificationsService.showJsonErrors([JSON.stringify(e)], this.translate.instant('backup.failed'));\n      console.error(e);\n    } finally {\n      loader.close();\n    }\n  }\n\n  async onRestore(event: File[]) {\n    const loader = this.notificationsService.loading(this.translate.instant('backup.restoring'));\n    try {\n      await this.transferDataService.restoreAllData(event);\n      this.notificationsService.success(this.translate.instant('backup.restored'));\n    } catch (e) {\n      this.notificationsService.showJsonErrors([JSON.stringify(e)], this.translate.instant('backup.restore-failed'));\n      console.error(e);\n    } finally {\n      loader.close();\n      loader.close();\n    }\n  }\n\n  async onFlush() {\n    try {\n      await this.dexieIndexDbService.flushCache();\n      this.notificationsService.success(this.translate.instant('backup.flushed'));\n      window.location.reload();\n    } catch (e) {\n      this.notificationsService.showJsonErrors([JSON.stringify(e)], this.translate.instant('backup.flush-failed'));\n      console.error(e);\n    } finally {\n    }\n  }\n}\n", "import {Component, ElementRef, forwardRef, input, signal, ViewChild} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {ButtonComponent, ButtonStyle} from '../layout/button.component';\n\n@Component({\n  selector: 'lg-file-input',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `\n      <div [class.contrast]=\"theme() === 'contrast'\" class=\"lg-file-input\">\n          <input #fileInput\n                 (change)=\"onFileChange($event)\"\n                 [attr.accept]=\"accept()\"\n                 [attr.multiple]=\"multiple() ? '' : null\"\n                 [disabled]=\"disable()\"\n                 class=\"hidden-input\"\n                 type=\"file\">\n\n          <lg-button (onClick)=\"fileInput.click()\"\n                     [disabled]=\"disable()\"\n                     [style]=\"buttonStyle()\"\n                     size=\"small\">\n              {{ buttonText() }}\n          </lg-button>\n\n          <div [style.display]=\"noAfter() && !errorMessage() ? 'none' : 'flex'\" class=\"lg-file-input__after\">\n              <ng-content select=\"after\"></ng-content>\n              <span *ngIf=\"errorMessage()\" class=\"error-message\">{{ errorMessage() }}</span>\n          </div>\n      </div>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex: 1;\n    }\n\n    .lg-file-input {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n      gap: 16px;\n      flex: 1;\n    }\n\n    .lg-file-input__after {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n      padding: 0 16px;\n      white-space: nowrap;\n      flex: 0 0 auto;\n    }\n\n    .hidden-input {\n      display: none;\n    }\n\n    .error-message {\n      color: #d32f2f;\n      font-size: 13px;\n      white-space: nowrap;\n    }\n  `],\n  providers: [{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => FileInputComponent),\n    multi: true\n  }]\n})\nexport class FileInputComponent implements ControlValueAccessor {\n  @ViewChild('fileInput', {static: true}) fileInput!: ElementRef<HTMLInputElement>;\n\n  accept = input<string>(''); // image/*, .pdf и т.п.\n  multiple = input<boolean>(false);\n  disable = input<boolean>(false);\n  theme = input<'default' | 'contrast'>('default');\n  base64Mode = input<boolean>(false);\n  buttonStyle = input<ButtonStyle>('default'); // стиль lg-button\n  buttonText = input<string>('Загрузить файл'); // текст на кнопке\n  fileSizeLimitMb = input<number>(2); // Лимит по умолчанию: 2MB\n  noAfter = signal(false);\n  errorMessage = signal<string | null>(null);\n\n  writeValue(value: any): void {\n    // Ничего не делаем\n  }\n\n  registerOnChange(fn: (value: any) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  async onFileChange(event: Event) {\n    const inputEl = event.target as HTMLInputElement;\n    const files = inputEl.files;\n    if (!files || files.length === 0) {\n      this.onChange(null);\n      return;\n    }\n\n    const overLimitFiles = Array.from(files).filter(file => file.size > this.fileSizeLimitMb() * 1024 * 1024);\n    if (overLimitFiles.length > 0) {\n      this.errorMessage.set(`Файл превышает ${this.fileSizeLimitMb()}MB`);\n      this.onChange(null);\n      return;\n    } else {\n      this.errorMessage.set(null); // очищаем сообщение, если всё ок\n    }\n\n    let result: any;\n\n    if (this.base64Mode()) {\n      const base64List = await Promise.all(\n        Array.from(files).map(file => this.readFileAsBase64(file))\n      );\n      result = this.multiple() ? base64List : base64List[0];\n    } else {\n      result = this.multiple() ? Array.from(files) : files[0];\n    }\n\n    this.onChange(result);\n    this.onTouched();\n  }\n\n  ngAfterViewInit() {\n    const after = this.fileInput?.nativeElement.nextElementSibling?.nextElementSibling;\n    if (after?.childElementCount === 0) {\n      this.noAfter.set(true);\n    }\n  }\n\n  focus() {\n    this.fileInput?.nativeElement.focus();\n  }\n\n  private onChange: (value: string | File | string[] | File[] | null) => void = () => {\n  };\n\n  private onTouched: () => void = () => {\n  };\n\n  private readFileAsBase64(file: File): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = () => resolve(reader.result as string);\n      reader.onerror = () => reject(reader.error);\n      reader.readAsDataURL(file);\n    });\n  }\n}\n", "import {AfterViewInit, Component, DestroyRef, inject, signal} from '@angular/core';\nimport {FlexColumnComponent} from '../../../../../shared/view/ui/layout/flex-column.component';\nimport {InputComponent} from '../../../../../shared/view/ui/form/input.component';\nimport {TitleComponent} from '../../../../../shared/view/ui/layout/title/title.component';\n\nimport {FormControl, FormGroup, ReactiveFormsModule} from '@angular/forms';\nimport {FlexRowComponent} from '../../../../../shared/view/ui/layout/flex-row.component';\nimport {SettingsService} from '../../../service/services/settings.service';\n\nimport {NumberInputComponent} from '../../../../../shared/view/ui/form/number-input.component';\nimport {FileInputComponent} from '../../../../../shared/view/ui/form/file-input.component';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {debounceTime} from 'rxjs';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-invoices-settings',\n  standalone: true,\n  template: `\n      <lg-flex-column [formGroup]=\"form\">\n          <lg-flex-column size=\"medium\">\n              <lg-title [level]=\"5\">\n                  {{ 'settings.invoices.logo' | translate }}\n              </lg-title>\n\n              @if (logoBase64()) {\n                  <div class=\"lg-invoices-settings__logo\">\n                      <img [src]=\"logoBase64()\"\n                           alt=\"Logo\">\n                  </div>\n              }\n\n              <lg-file-input [buttonStyle]=\"logoBase64() ? 'danger' : 'default'\"\n                             [buttonText]=\"logoBase64() ? ('settings.invoices.replace-logo' | translate) : ('settings.invoices.upload-logo' | translate)\"\n                             formControlName=\"logo\"></lg-file-input>\n          </lg-flex-column>\n\n          <lg-flex-column size=\"medium\">\n              <lg-title [level]=\"5\">\n                  {{ 'settings.invoices.prefix' | translate }}\n              </lg-title>\n\n              <lg-input formControlName=\"prefix\"></lg-input>\n          </lg-flex-column>\n\n          <lg-flex-column size=\"medium\">\n              <lg-title [level]=\"5\">\n                  {{ 'settings.invoices.precision' | translate }}\n              </lg-title>\n\n              <lg-flex-row>\n                  <lg-flex-column size=\"small\">\n                      <lg-title [flat]=\"true\" [level]=\"6\">\n                          {{ 'settings.invoices.precision-rows' | translate }}\n                      </lg-title>\n                      <lg-number-input formControlName=\"precisionRows\"></lg-number-input>\n                  </lg-flex-column>\n\n                  <lg-flex-column size=\"small\">\n                      <lg-title [flat]=\"true\" [level]=\"6\">\n                          {{ 'settings.invoices.precision-totals' | translate }}\n                      </lg-title>\n                      <lg-number-input formControlName=\"precisionTotals\"></lg-number-input>\n                  </lg-flex-column>\n              </lg-flex-row>\n          </lg-flex-column>\n      </lg-flex-column>\n  `,\n  styles: [`\n    .lg-invoices-settings__logo {\n      width: 100%;\n      max-width: 200px;\n      height: auto;\n      border-radius: 12px;\n      object-fit: cover;\n      background-color: var(--control-bg);\n      padding: 15px;\n\n      img {\n        width: 100%;\n        height: auto;\n      }\n    }\n  `],\n  imports: [\n    FlexColumnComponent,\n    InputComponent,\n    TitleComponent,\n    ReactiveFormsModule,\n    FlexRowComponent,\n    NumberInputComponent,\n    FileInputComponent,\n    TranslatePipe\n  ]\n})\nexport class InvoicesSettingsComponent\n  implements AfterViewInit {\n  constructor(\n    private _settingsService: SettingsService,\n  ) {\n  }\n\n  prefix?: string;\n\n  form = new FormGroup({\n    prefix: new FormControl<string | null>(null),\n    precisionRows: new FormControl<number | null>(null),\n    precisionTotals: new FormControl<number | null>(null),\n    logo: new FormControl<File | null>(null)\n  })\n  logoBase64 = signal<string | null>(null);\n  destroyRef = inject(DestroyRef);\n\n  ngAfterViewInit() {\n    const precisions = this._settingsService.getInvoicePrecision();\n    this.form.patchValue({\n      prefix: this._settingsService.getInvoicePrefix(),\n      precisionRows: precisions[0] ?? 2,\n      precisionTotals: precisions[1] ?? 2,\n    });\n\n    this.logoBase64.set(this._settingsService.getInvoiceLogo() ?? null);\n\n    this.form.valueChanges.pipe(\n      takeUntilDestroyed(this.destroyRef),\n      debounceTime(500),\n    ).subscribe(async value => {\n      if (value.logo) {\n        this.logoBase64.set(await this.resizeAndCropImageToBase64(value.logo));\n      }\n\n      this._settingsService.setInvoiceLogo(this.logoBase64());\n      this._settingsService.setInvoicePrefix(value.prefix ?? '');\n      this._settingsService.setInvoicePrecisions(\n        value.precisionRows ?? 2, value.precisionTotals ?? 2\n      );\n      await this._settingsService.saveSettings();\n    });\n  }\n\n  resizeAndCropImageToBase64(file: File): Promise<string> {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement('canvas');\n          const ctx = canvas.getContext('2d')!;\n          canvas.width = 200;\n          canvas.height = 200;\n\n          const imgWidth = img.width;\n          const imgHeight = img.height;\n\n          const x = (canvas.width - imgWidth) / 2;\n          const y = (canvas.height - imgHeight) / 2;\n\n          ctx.drawImage(img, x, y);\n          const base64 = canvas.toDataURL('image/png');\n          document.body.appendChild(canvas)\n          resolve(base64);\n        };\n        img.onerror = reject;\n        img.src = reader.result as string;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  }\n}\n", "import {Component, effect, input, signal} from '@angular/core';\nimport {FlexColumnComponent} from '../../../../../shared/view/ui/layout/flex-column.component';\nimport {FormArray, FormControl, FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {FlexRowComponent} from '../../../../../shared/view/ui/layout/flex-row.component';\nimport {InputComponent} from '../../../../../shared/view/ui/form/input.component';\nimport {ButtonComponent} from '../../../../../shared/view/ui/layout/button.component';\nimport {SelfCenterDirective} from '../../../../../shared/view/directives/self-center.directive';\nimport {ShrinkDirective} from '../../../../../shared/view/directives/shrink.directive';\nimport {MatIcon} from '@angular/material/icon';\nimport {NotificationsService} from '../../../../../shared/service/services';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {errorHandler} from '../../../../../shared/helpers';\nimport {ExpandDirective} from '../../../../../shared/view/directives/expand.directive';\nimport {CredentialsRepository} from '../../../service/repositories/credentials.repository';\nimport {Credential} from '../../../service/models/Credential';\nimport {CredentialsType} from '../../../service/types/credentials.types';\nimport {ControlComponent} from '../../../../../shared/view/ui/form/control-item/control.component';\nimport {matchMediaSignal} from '../../../../../shared/view/signals/match-media.signal';\nimport {mobileBreakpoint} from '../../../../../shared/view/const/breakpoints';\nimport {NgTemplateOutlet} from '@angular/common';\nimport {ControlBoxComponent} from '../../../../../shared/view/ui/form/control-box.component';\nimport {SelfEndDirective} from '../../../../../shared/view/directives/self-end.directive';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-create-credential',\n  standalone: true,\n  template: `\n    <lg-flex-column>\n      <ng-container [formGroup]=\"form\">\n        <ng-container formArrayName=\"rows\">\n          @for (row of credentials(); track (row.name + row.uuid); let i = $index, odd = $odd, last = $last) {\n            @let tacControl = form.controls.rows.controls[i];\n            <section class=\"credentials\" [formGroupName]=\"i\">\n              @if (isMobile()) {\n                <lg-control-box>\n                  <lg-flex-column style=\"--control-bg: white\">\n                    <ng-container *ngTemplateOutlet=\"rowTpl\"></ng-container>\n                  </lg-flex-column>\n                </lg-control-box>\n              } @else {\n                <div class=\"credentials__row\"\n                     [class.credentials__row--odd]=\"odd\">\n\n                  <lg-flex-row [bottom]=\"true\">\n                    <ng-container *ngTemplateOutlet=\"rowTpl\"></ng-container>\n                  </lg-flex-row>\n                </div>\n              }\n\n              <ng-template #rowTpl>\n                <lg-flex-column size=\"small\"\n                                lgExpand>\n                  <lg-flex-row [mobileMode]=\"true\">\n                    <lg-control [label]=\"'settings.credentials.private-name'|translate\">\n                      <lg-input placeholder=\"\"\n                                formControlName=\"privateName\"></lg-input>\n                    </lg-control>\n                  </lg-flex-row>\n\n                  <lg-flex-row [equal]=\"true\"\n                               [mobileMode]=\"true\"\n                               size=\"small\">\n                    <lg-control [label]=\"'settings.credentials.name'|translate\">\n                      <lg-input formControlName=\"name\"\n                                placeholder=\"\"></lg-input>\n                    </lg-control>\n\n                    <lg-control [label]=\"'settings.credentials.tax-id'|translate\">\n                      <lg-input formControlName=\"taxId\"\n                                placeholder=\"\"></lg-input>\n                    </lg-control>\n                  </lg-flex-row>\n\n                  <lg-flex-row [equal]=\"true\"\n                               [mobileMode]=\"true\"\n                               size=\"small\">\n                    <lg-control [label]=\"'settings.credentials.country'|translate\">\n                      <lg-input formControlName=\"country\"\n                                placeholder=\"\"></lg-input>\n                    </lg-control>\n\n                    <lg-control [label]=\"'settings.credentials.address'|translate\">\n                      <lg-input formControlName=\"address\"\n                                placeholder=\"\"></lg-input>\n                    </lg-control>\n                  </lg-flex-row>\n\n                  <lg-flex-row [equal]=\"true\"\n                               [mobileMode]=\"true\"\n                               size=\"small\">\n                    <lg-control [label]=\"'settings.credentials.phone'|translate\">\n                      <lg-input formControlName=\"phone\"\n                                placeholder=\"\"></lg-input>\n                    </lg-control>\n\n                    <lg-control [label]=\"'settings.credentials.email'|translate\">\n                      <lg-input formControlName=\"email\"\n                                placeholder=\"\"></lg-input>\n                    </lg-control>\n                  </lg-flex-row>\n                </lg-flex-column>\n\n                <lg-button (click)=\"deleteRow(i)\"\n                           [icon]=\"!isMobile()\"\n                           [size]=\"'tiny'\"\n                           [style]=\"'danger'\"\n                           lgSelfEnd\n                           lgShrink>\n                  @if (isMobile()) {\n                    {{ 'settings.credentials.delete-row'|translate }}\n                  } @else {\n                    <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\"\n                              fontIcon=\"close\"></mat-icon>\n                  }\n                </lg-button>\n              </ng-template>\n            </section>\n\n            @if (!last) {\n              <hr color=\"#fafafa\" lgExpand size=\"2\"/>\n            }\n          } @empty {\n            <lg-flex-column position=\"center\"\n                            size=\"medium\">\n              {{ 'settings.credentials.empty-state.text'|translate }}\n\n              <lg-button [size]=\"'medium'\"\n                         (click)=\"addRow()\"\n                         [style]=\"'success'\">\n                {{ 'settings.credentials.empty-state.btn'|translate }}\n              </lg-button>\n            </lg-flex-column>\n          }\n        </ng-container>\n      </ng-container>\n\n      @if (credentials().length) {\n        <lg-flex-row>\n          <lg-button (click)=\"save()\"\n                     [disabled]=\"!form.dirty\"\n                     [style]=\"'success'\"\n                     lgSelfCenter\n                     lgShrink>\n            @if (form.dirty) {\n              {{ 'settings.credentials.save-changes'|translate }}\n            } @else {\n              {{ 'settings.credentials.no-changes'|translate }}\n            }\n          </lg-button>\n\n          <lg-button (click)=\"addRow()\"\n                     [style]=\"'warning'\"\n                     lgSelfCenter\n                     lgShrink>\n            {{ 'settings.credentials.add-row'|translate }}\n          </lg-button>\n        </lg-flex-row>\n      }\n    </lg-flex-column>\n  `,\n  styles: [``],\n  imports: [\n    FlexRowComponent,\n    FormsModule,\n    ButtonComponent,\n    InputComponent,\n    ReactiveFormsModule,\n    SelfCenterDirective,\n    ShrinkDirective,\n    FlexColumnComponent,\n    FlexColumnComponent,\n    ReactiveFormsModule,\n    FlexRowComponent,\n    InputComponent,\n    ButtonComponent,\n    MatIcon,\n    SelfCenterDirective,\n    ShrinkDirective,\n    ExpandDirective,\n    ControlComponent,\n    NgTemplateOutlet,\n    ControlBoxComponent,\n    SelfEndDirective,\n    TranslatePipe\n  ]\n})\nexport class CreateCredentialComponent {\n  constructor(\n    private _credentialsRepository: CredentialsRepository,\n    private _notificationService: NotificationsService,\n  ) {\n  }\n\n  isMobile = matchMediaSignal(mobileBreakpoint);\n  type = input(CredentialsType.system);\n  credentials = signal<Credential[]>([]);\n  form = new FormGroup({\n    rows: new FormArray([\n      this._getRowGroup(),\n    ]),\n  });\n  rowsEffect = effect(() => {\n    this._rowsFormArray.clear();\n    this.credentials().forEach((row, index) => {\n      this._rowsFormArray.push(this._getRowGroup(row));\n    });\n    this.form.updateValueAndValidity();\n    this.form.markAsPristine();\n  });\n  typeEffect = effect(() => {\n    this._credentialsRepository.getAllByType(this.type())\n      .then((credentials) => {\n        this.credentials.set(credentials);\n      });\n  });\n\n  formValues = this.form.valueChanges.pipe(\n    takeUntilDestroyed(),\n  );\n\n  private get _rowsFormArray(): FormArray {\n    return this.form.get('rows') as FormArray;\n  }\n\n  deleteRow(index: number) {\n    const credential = this.form.value.rows?.[index]?.uuid;\n    this._rowsFormArray.removeAt(index);\n    this.credentials.update(current => {\n      return current.filter((_, i) => i !== index);\n    });\n    this.form.markAsDirty();\n    if (credential) {\n      this._credentialsRepository.deleteOne(credential);\n    }\n  }\n\n  addRow() {\n    this._rowsFormArray.push(this._getRowGroup());\n    const newCredential = new Credential({\n      type: this.type()\n    });\n    this.credentials.update(current => [...current, newCredential]);\n    this.form.markAsDirty();\n  }\n\n  async save() {\n    try {\n      await this._credentialsRepository\n        .updateMany(this._formValueToCredentials());\n      this._notificationService.success('Credentials saved successfully');\n      this.form.markAsPristine();\n    } catch (e) {\n      this._notificationService.error(errorHandler(e));\n    }\n  }\n\n  private _formValueToCredentials(): Credential[] {\n    return this._rowsFormArray.controls.map((control) => {\n      const value = control.value;\n      return new Credential({\n        name: value.name,\n        privateName: value.privateName,\n        country: value.country,\n        address: value.address,\n        taxId: value.taxId,\n        phone: value.phone,\n        email: value.email,\n        type: this.type(),\n        uuid: value.uuid,\n      });\n    });\n  }\n\n  private _getRowGroup(\n    value?: Credential,\n  ): FormGroup {\n    return new FormGroup({\n      name: new FormControl(value?.name || ''),\n      privateName: new FormControl(value?.privateName || ''),\n      country: new FormControl(value?.country || ''),\n      address: new FormControl(value?.address || ''),\n      taxId: new FormControl(value?.taxId || ''),\n      phone: new FormControl(value?.phone || ''),\n      email: new FormControl(value?.email || ''),\n      uuid: new FormControl(value?.uuid || ''),\n    });\n  }\n}\n", "import {Component, effect} from '@angular/core';\nimport {NotificationsService} from '../../../../../shared/service/services';\nimport {CredentialsRepository} from '../../../service/repositories/credentials.repository';\nimport {CredentialsType} from '../../../service/types/credentials.types';\nimport {TabsComponent} from '../../../../../shared/view/ui/tabs/tabs.component';\nimport {CreateCredentialComponent} from './create-credential.component';\nimport {TabDirective} from '../../../../../shared/view/ui/tabs/tab.directive';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-credentials-settings',\n  standalone: true,\n  template: `\n      <lg-tabs [flat]=\"true\" [silent]=\"true\">\n          <ng-template alias=\"system\" [label]=\"'settings.credentials.system' | translate\" lgTab>\n              <lg-create-credential [type]=\"CredentialsType.system\"></lg-create-credential>\n          </ng-template>\n\n          <ng-template alias=\"customers\" [label]=\"'settings.credentials.customer' | translate\" lgTab>\n              <lg-create-credential [type]=\"CredentialsType.customer\"></lg-create-credential>\n          </ng-template>\n      </lg-tabs>\n  `,\n  styles: [``],\n  imports: [\n    TabsComponent,\n    CreateCredentialComponent,\n    TabDirective,\n    TranslatePipe\n  ]\n})\nexport class CredentialSettingsComponent {\n  constructor(\n    private _credentialsRepository: CredentialsRepository,\n    private _notificationService: NotificationsService,\n  ) {\n  }\n  protected readonly CredentialsType = CredentialsType;\n}\n", "import {SortStrategy} from '../../../../shared/service/types/sorting.types';\nimport {LogEntryModel} from '../models/LogEntry';\n\nexport class LogsByMinuteGroupingStrategy implements SortStrategy<LogEntryModel> {\n  groupBy(item: LogEntryModel): string {\n    const date = new Date(item.timestamp);\n\n    // Группируем по минуте: YYYY-MM-DD HH:MM\n    const year = date.getFullYear();\n    const month = String(date.getMonth() + 1).padStart(2, '0');\n    const day = String(date.getDate()).padStart(2, '0');\n    const hours = String(date.getHours()).padStart(2, '0');\n    const minutes = String(date.getMinutes()).padStart(2, '0');\n\n    return `${year}-${month}-${day} ${hours}:${minutes}`;\n  }\n\n  innerSort(\n    a: LogEntryModel,\n    b: LogEntryModel,\n    direction: 'asc' | 'desc' = 'desc',\n    field: string = 'timestamp'\n  ): number {\n    const dateA = new Date(a.timestamp);\n    const dateB = new Date(b.timestamp);\n\n    if (direction === 'asc') {\n      return dateA.getTime() - dateB.getTime();\n    } else {\n      return dateB.getTime() - dateA.getTime();\n    }\n  }\n\n  groupingSort(\n    a: string,\n    b: string,\n    direction: 'asc' | 'desc' = 'desc'\n  ): number {\n    const dateA = new Date(a);\n    const dateB = new Date(b);\n\n    if (direction === 'asc') {\n      return dateA.getTime() - dateB.getTime();\n    } else {\n      return dateB.getTime() - dateA.getTime();\n    }\n  }\n}\n", "import {\n  Component,\n  computed,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  signal,\n  SimpleChanges\n} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ButtonComponent} from '../layout/button.component';\nimport {FlexRowComponent} from '../layout/flex-row.component';\nimport {TranslatePipe} from '@ngx-translate/core';\n\nexport interface PaginationConfig {\n  itemsPerPage: number;\n  currentPage: number;\n  totalItems: number;\n}\n\n@Component({\n  selector: 'lg-pagination',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonComponent,\n    FlexRowComponent,\n    TranslatePipe\n  ],\n  template: `\n    @if (totalPages() > 1) {\n      <div class=\"pagination\">\n        <lg-flex-row [center]=\"true\">\n          <lg-button\n            (click)=\"previousPage()\"\n            [disabled]=\"currentPage() === 1\"\n            class=\"pagination__btn\">\n            <span class=\"pagination__icon\">◀</span>\n            {{ 'pagination.previous' | translate }}\n          </lg-button>\n\n          <div class=\"pagination__info\">\n            <span class=\"pagination__current\">{{ currentPage() }}</span>\n            <span class=\"pagination__separator\">/</span>\n            <span class=\"pagination__total\">{{ totalPages() }}</span>\n          </div>\n\n          <lg-button\n            (click)=\"nextPage()\"\n            [disabled]=\"currentPage() === totalPages()\"\n            class=\"pagination__btn\">\n            {{ 'pagination.next' | translate }}\n            <span class=\"pagination__icon\">▶</span>\n          </lg-button>\n        </lg-flex-row>\n      </div>\n    }\n  `,\n  styles: [`\n    .pagination {\n      margin-top: var(--spacing-lg);\n      padding-top: var(--spacing-lg);\n      border-top: 1px solid var(--color-border);\n    }\n\n    .pagination__info {\n      display: flex;\n      align-items: center;\n      gap: var(--spacing-xs);\n      padding: var(--spacing-sm) var(--spacing-lg);\n      background: var(--color-background-secondary);\n      border-radius: var(--border-radius-lg);\n      font-weight: 600;\n    }\n\n    .pagination__current {\n      color: var(--color-primary);\n    }\n\n    .pagination__separator {\n      color: var(--color-text-muted);\n    }\n\n    .pagination__total {\n      color: var(--color-text);\n    }\n\n    .pagination__btn {\n      display: flex;\n      align-items: center;\n      gap: var(--spacing-sm);\n      padding: var(--spacing-sm) var(--spacing-lg);\n      border-radius: var(--border-radius-lg);\n      font-weight: 600;\n      transition: all 0.3s ease;\n    }\n\n    .pagination__icon {\n      font-size: var(--font-size-sm);\n    }\n  `]\n})\nexport class PaginationComponent implements OnInit, OnChanges {\n  @Input() config!: PaginationConfig;\n  @Output() pageChange = new EventEmitter<number>();\n  currentPage = signal(1);\n  totalPages = signal(1);\n  @HostBinding('attr.hidden') hidden = computed(() => this.totalPages() ? null : true);\n  totalItems = signal(0);\n  itemsPerPage = signal(20);\n\n  ngOnInit() {\n    this.updatePagination();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['config']) {\n      this.updatePagination();\n    }\n  }\n\n  updatePagination() {\n    if (!this.config) return;\n\n    this.currentPage.set(this.config.currentPage);\n    this.totalItems.set(this.config.totalItems);\n    this.itemsPerPage.set(this.config.itemsPerPage);\n    this.totalPages.set(Math.ceil(this.config.totalItems / this.config.itemsPerPage));\n  }\n\n  previousPage() {\n    if (this.currentPage() > 1) {\n      const newPage = this.currentPage() - 1;\n      this.currentPage.set(newPage);\n      this.pageChange.emit(newPage);\n    }\n  }\n\n  nextPage() {\n    if (this.currentPage() < this.totalPages()) {\n      const newPage = this.currentPage() + 1;\n      this.currentPage.set(newPage);\n      this.pageChange.emit(newPage);\n    }\n  }\n}\n", "import {Injectable, signal, computed} from '@angular/core';\nimport {PaginationConfig} from '../../view/ui/pagination/pagination.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PaginationService<T> {\n  private readonly _items = signal<T[]>([]);\n  private readonly _currentPage = signal(1);\n  private readonly _itemsPerPage = signal(20);\n\n  // Computed values\n  readonly totalItems = computed(() => this._items().length);\n  readonly totalPages = computed(() => Math.ceil(this.totalItems() / this._itemsPerPage()));\n  readonly currentPage = computed(() => this._currentPage());\n  readonly itemsPerPage = computed(() => this._itemsPerPage());\n\n  readonly paginatedItems = computed(() => {\n    const startIndex = (this.currentPage() - 1) * this.itemsPerPage();\n    const endIndex = startIndex + this.itemsPerPage();\n    return this._items().slice(startIndex, endIndex);\n  });\n\n  readonly config = computed((): PaginationConfig => ({\n    itemsPerPage: this.itemsPerPage(),\n    currentPage: this.currentPage(),\n    totalItems: this.totalItems()\n  }));\n\n  /**\n   * Устанавливает массив элементов для пагинации\n   */\n  setItems(items: T[]) {\n    this._items.set(items);\n    this.resetToFirstPage();\n  }\n\n  /**\n   * Устанавливает количество элементов на странице\n   */\n  setItemsPerPage(itemsPerPage: number) {\n    this._itemsPerPage.set(itemsPerPage);\n    this.resetToFirstPage();\n  }\n\n  /**\n   * Переходит на указанную страницу\n   */\n  goToPage(page: number) {\n    if (page >= 1 && page <= this.totalPages()) {\n      this._currentPage.set(page);\n    }\n  }\n\n  /**\n   * Переходит на следующую страницу\n   */\n  nextPage() {\n    if (this.currentPage() < this.totalPages()) {\n      this._currentPage.set(this.currentPage() + 1);\n    }\n  }\n\n  /**\n   * Переходит на предыдущую страницу\n   */\n  previousPage() {\n    if (this.currentPage() > 1) {\n      this._currentPage.set(this.currentPage() - 1);\n    }\n  }\n\n  /**\n   * Переходит на первую страницу\n   */\n  firstPage() {\n    this._currentPage.set(1);\n  }\n\n  /**\n   * Переходит на последнюю страницу\n   */\n  lastPage() {\n    this._currentPage.set(this.totalPages());\n  }\n\n  /**\n   * Сбрасывает на первую страницу\n   */\n  resetToFirstPage() {\n    this._currentPage.set(1);\n  }\n\n  /**\n   * Проверяет, есть ли следующая страница\n   */\n  hasNextPage(): boolean {\n    return this.currentPage() < this.totalPages();\n  }\n\n  /**\n   * Проверяет, есть ли предыдущая страница\n   */\n  hasPreviousPage(): boolean {\n    return this.currentPage() > 1;\n  }\n\n  /**\n   * Получает информацию о текущем диапазоне элементов\n   */\n  getRangeInfo() {\n    const start = (this.currentPage() - 1) * this.itemsPerPage() + 1;\n    const end = Math.min(this.currentPage() * this.itemsPerPage(), this.totalItems());\n    \n    return {\n      start,\n      end,\n      total: this.totalItems(),\n      currentPage: this.currentPage(),\n      totalPages: this.totalPages()\n    };\n  }\n} ", "import {Component, inject, OnInit, signal} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogCenterService} from '../../service/services/log-center.service';\nimport {LogEntryModel, LogLevel} from '../../service/models/LogEntry';\nimport {TranslatePipe, TranslateService} from '@ngx-translate/core';\nimport {ButtonComponent} from '../../../../shared/view/ui/layout/button.component';\nimport {GroupSortService} from '../../../../shared/service/services/grouping-sorting.service';\nimport {LogsByMinuteGroupingStrategy} from '../../service/providers/logs.grouping';\nimport {GroupingTilesComponent} from '../../../../shared/view/ui/grouping-tiles/grouping-tiles.component';\nimport {GroupingTileDirective} from '../../../../shared/view/ui/grouping-tiles/grouping-tile.directive';\nimport {GroupingHeaderDirective} from '../../../../shared/view/ui/grouping-tiles/grouping-header.directive';\nimport {TitleComponent} from '../../../../shared/view/ui/layout/title/title.component';\nimport {PaginationComponent} from '../../../../shared/view/ui/pagination/pagination.component';\nimport {PaginationService} from '../../../../shared/service/services/pagination.service';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {FlexColumnComponent} from '../../../../shared/view/ui/layout/flex-column.component';\nimport {FlexRowComponent} from '../../../../shared/view/ui/layout/flex-row.component';\nimport {SelfEndDirective} from '../../../../shared/view/directives/self-end.directive';\n\n@Component({\n  selector: 'lg-log-center',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ButtonComponent,\n    TranslatePipe,\n    GroupingTilesComponent,\n    GroupingTileDirective,\n    GroupingHeaderDirective,\n    TitleComponent,\n    PaginationComponent,\n    TimeAgoPipe,\n    FlexColumnComponent,\n    FlexRowComponent,\n    SelfEndDirective\n  ],\n  template: `\n    <div class=\"log-center\">\n      <lg-flex-column>\n        <lg-flex-row size=\"medium\">\n          <lg-button\n            (click)=\"clearLogs()\"\n            [disabled]=\"stats().total === 0\"\n            size=\"small\">\n            {{ 'log-center.clear-all' | translate }}\n          </lg-button>\n        </lg-flex-row>\n\n        <lg-flex-row [mobileMode]=\"true\" size=\"medium\">\n          <ng-container *ngTemplateOutlet=\"statItemTemplate; context: {\n          label: 'log-center.total',\n          value: stats().total,\n          type: 'default'\n        }\"></ng-container>\n          <ng-container *ngTemplateOutlet=\"statItemTemplate; context: {\n          label: 'log-center.errors',\n          value: stats().byLevel.error,\n          type: 'error'\n        }\"></ng-container>\n          <ng-container *ngTemplateOutlet=\"statItemTemplate; context: {\n          label: 'log-center.warnings',\n          value: stats().byLevel.warning,\n          type: 'warning'\n        }\"></ng-container>\n          @if (paginationService.totalPages() > 1) {\n            <ng-container *ngTemplateOutlet=\"statItemTemplate; context: {\n            label: 'log-center.logs',\n            value: paginationService.getRangeInfo().start + '-' + paginationService.getRangeInfo().end + ' / ' + paginationService.totalItems(),\n            type: 'info'\n          }\"></ng-container>\n          }\n        </lg-flex-row>\n\n        <div class=\"log-center__logs\">\n          @if (groupedLogs()?.groups?.length === 0) {\n            <lg-flex-column position=\"center\"\n                            size=\"medium\">\n              <span> {{ 'log-center.no-logs-subtitle' | translate }}</span>\n            </lg-flex-column>\n          } @else {\n            <lg-grouping-tiles [sortResult]=\"groupedLogs()\" [selectable]=\"false\">\n              <ng-template lgGroupingHeader let-field>\n                <lg-title [level]=\"3\">\n                  {{ field|timeAgo }}\n                </lg-title>\n              </ng-template>\n\n              <ng-template lgGroupingTile let-log>\n                <div class=\"log-entry\" [class]=\"'log-entry--' + log.level\">\n                  <div class=\"log-entry__header\">\n                    <div class=\"log-entry__level\">\n                      <span class=\"log-entry__level-badge\">{{ getLocalizedLevel(log.level) }}</span>\n                    </div>\n                    <div class=\"log-entry__time\">\n                      <span class=\"log-entry__time-label\">{{ 'log-center.time' | translate }}:</span>\n                      {{ log.timestamp | date:'shortTime' }}\n                    </div>\n                    @if (log.source) {\n                      <div class=\"log-entry__source\">\n                        <span class=\"log-entry__source-label\">{{ 'log-center.source' | translate }}:</span>\n                        {{ log.source }}\n                      </div>\n                    }\n                  </div>\n                  <div class=\"log-entry__message\">\n                    <span class=\"log-entry__message-label\">{{ 'log-center.message' | translate }}:</span>\n                    {{ log.message }}\n                  </div>\n                  @if (log.url) {\n                    <div class=\"log-entry__url\">\n                      <span class=\"log-entry__url-label\">{{ 'log-center.url' | translate }}:</span>\n                      <span class=\"log-entry__url-value\">{{ log.url }}</span>\n                    </div>\n                  }\n                  @if (log.data) {\n                    <div class=\"log-entry__data\">\n                      <details>\n                        <summary>{{ 'log-center.details' | translate }}</summary>\n                        <pre>{{ formatData(log.data) }}</pre>\n                      </details>\n                    </div>\n                  }\n                </div>\n              </ng-template>\n            </lg-grouping-tiles>\n          }\n        </div>\n\n        <lg-pagination\n          (pageChange)=\"onPageChange($event)\"\n          [config]=\"paginationService.config()\">\n        </lg-pagination>\n      </lg-flex-column>\n    </div>\n    <!-- Stat Item Template -->\n    <ng-template #statItemTemplate let-label=\"label\" let-type=\"type\" let-value=\"value\">\n      <lg-flex-column size=\"tiny\">\n        <span>{{ label | translate }}</span>\n        <b>{{ value }}</b>\n      </lg-flex-column>\n    </ng-template>\n  `,\n  styles: [`\n    .log-center {\n      display: flex;\n      flex-direction: column;\n      gap: var(--spacing-md);\n      overflow: hidden;\n    }\n\n    .log-center__header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      flex-wrap: wrap;\n      gap: var(--spacing-md);\n    }\n\n\n    .log-center__stat {\n      font-size: var(--font-size-sm);\n    }\n\n    .log-center__stat--error {\n      color: var(--color-error);\n      font-weight: bold;\n    }\n\n    .log-center__stat--warning {\n      color: var(--color-warning);\n      font-weight: bold;\n    }\n\n    .log-center__stat--info {\n      color: var(--color-info);\n      font-weight: bold;\n    }\n\n    .log-center__actions {\n      margin-top: var(--spacing-md);\n      padding-top: var(--spacing-md);\n      border-top: 1px solid var(--color-border);\n    }\n\n    .log-center__logs {\n      overflow-y: auto;\n    }\n\n    .log-center__empty {\n      text-align: center;\n      padding: var(--spacing-xl);\n      color: var(--color-text-muted);\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: var(--spacing-md);\n    }\n\n    .log-center__empty-icon {\n      font-size: 3rem;\n      opacity: 0.5;\n    }\n\n    .log-center__empty-title {\n      font-size: var(--font-size-lg);\n      font-weight: bold;\n      color: var(--color-text-muted);\n    }\n\n    .log-center__empty-subtitle {\n      font-size: var(--font-size-sm);\n      color: var(--color-text-muted);\n      opacity: 0.8;\n    }\n\n    .log-entry {\n      border: 1px solid var(--color-border);\n      border-radius: var(--border-radius);\n      padding: var(--spacing-md);\n      background: var(--color-background);\n      margin-bottom: var(--spacing-sm);\n    }\n\n    .log-entry--error {\n      border-left: 4px solid var(--color-error);\n    }\n\n    .log-entry--warning {\n      border-left: 4px solid var(--color-warning);\n    }\n\n    .log-entry--info {\n      border-left: 4px solid var(--color-info);\n    }\n\n    .log-entry--success {\n      border-left: 4px solid var(--color-success);\n    }\n\n    .log-entry__header {\n      display: flex;\n      align-items: center;\n      gap: var(--spacing-md);\n      margin-bottom: var(--spacing-sm);\n      flex-wrap: wrap;\n    }\n\n    .log-entry__level {\n      flex-shrink: 0;\n    }\n\n    .log-entry__level-badge {\n      padding: var(--spacing-xs) var(--spacing-sm);\n      border-radius: var(--border-radius-sm);\n      font-size: var(--font-size-xs);\n      font-weight: bold;\n      text-transform: uppercase;\n    }\n\n    .log-entry--error .log-entry__level-badge {\n      background: var(--color-error, #ff4d4d);\n      color: white;\n    }\n\n    .log-entry--warning .log-entry__level-badge {\n      background: var(--color-warning, #ffcc00);\n      color: white;\n    }\n\n    .log-entry--info .log-entry__level-badge {\n      background: var(--color-info, #007bff);\n      color: white;\n    }\n\n    .log-entry--success .log-entry__level-badge {\n      background: var(--color-success, #28a745);\n      color: white;\n    }\n\n    .log-entry__time {\n      color: var(--color-text-muted);\n      font-size: var(--font-size-sm);\n      display: flex;\n      align-items: center;\n      gap: var(--spacing-xs);\n    }\n\n    .log-entry__time-label {\n      font-weight: bold;\n      color: var(--color-text-muted);\n    }\n\n    .log-entry__source {\n      color: var(--color-text-muted);\n      font-size: var(--font-size-sm);\n      font-style: italic;\n      display: flex;\n      align-items: center;\n      gap: var(--spacing-xs);\n    }\n\n    .log-entry__source-label {\n      font-weight: bold;\n      color: var(--color-text-muted);\n    }\n\n    .log-entry__message {\n      margin-bottom: var(--spacing-sm);\n      word-break: break-word;\n      display: flex;\n      align-items: flex-start;\n      gap: var(--spacing-xs);\n    }\n\n    .log-entry__message-label {\n      font-weight: bold;\n      color: var(--color-text-muted);\n      flex-shrink: 0;\n      margin-top: 2px;\n    }\n\n    .log-entry__url {\n      margin-bottom: var(--spacing-sm);\n      font-size: var(--font-size-sm);\n    }\n\n    .log-entry__url-label {\n      color: var(--color-text-muted);\n      margin-right: var(--spacing-xs);\n    }\n\n    .log-entry__url-value {\n      color: var(--color-primary);\n      word-break: break-all;\n    }\n\n    .log-entry__data {\n      margin-top: var(--spacing-sm);\n    }\n\n    .log-entry__data details {\n      border: 1px solid var(--color-border);\n      border-radius: var(--border-radius-sm);\n      padding: var(--spacing-sm);\n    }\n\n    .log-entry__data summary {\n      cursor: pointer;\n      color: var(--color-primary);\n      font-weight: bold;\n      margin-bottom: var(--spacing-sm);\n    }\n\n    .log-entry__data pre {\n      background: var(--color-background-secondary);\n      padding: var(--spacing-sm);\n      border-radius: var(--border-radius-sm);\n      overflow-x: auto;\n      font-size: var(--font-size-sm);\n      white-space: pre-wrap;\n      word-break: break-word;\n    }\n\n    @media (max-width: 768px) {\n      .log-center__header {\n        flex-direction: column;\n        align-items: flex-start;\n      }\n\n      .log-center__stats {\n        gap: var(--spacing-md);\n      }\n\n      .log-entry__header {\n        flex-direction: column;\n        align-items: flex-start;\n        gap: var(--spacing-sm);\n      }\n    }\n  `]\n})\nexport class LogCenterComponent implements OnInit {\n  readonly paginationService = inject(PaginationService<any>);\n  logs = signal<LogEntryModel[]>([]);\n  paginatedLogs = signal<LogEntryModel[]>([]);\n  groupedLogs = signal<any>(null);\n  stats = signal<{ total: number; byLevel: Record<LogLevel, number> }>({\n    total: 0,\n    byLevel: {info: 0, warning: 0, error: 0, success: 0}\n  });\n\n  private readonly _logCenter = inject(LogCenterService);\n  private readonly _groupSortService = inject(GroupSortService);\n  private readonly _translateService = inject(TranslateService);\n\n  ngOnInit() {\n    this.loadLogs();\n  }\n\n  loadLogs() {\n    // Получаем все логи и сортируем по времени (новые сверху)\n    const allLogs = this._logCenter.getLogs().sort((a, b) =>\n      new Date(b.timestamp).getTime() - new Date(a.timestamp).getTime()\n    );\n\n    this.logs.set(allLogs);\n    this.stats.set(this._logCenter.getLogStats());\n\n    // Устанавливаем отсортированные логи в сервис пагинации\n    this.paginationService.setItems(allLogs);\n    this.paginationService.setItemsPerPage(10); // 10 логов на страницу\n\n    // Обновляем пагинированные логи и группируем их\n    this.updatePaginatedAndGroupedLogs();\n  }\n\n  async updatePaginatedAndGroupedLogs() {\n    debugger\n    const paginatedLogs = this.paginationService.paginatedItems();\n    this.paginatedLogs.set(paginatedLogs);\n\n    // Группируем пагинированные логи по минуте\n    const groupingStrategy = new LogsByMinuteGroupingStrategy();\n    const grouped = await this._groupSortService.groupItems(\n      paginatedLogs,\n      groupingStrategy,\n      'desc', // новые группы сверху\n      'timestamp'\n    );\n\n    this.groupedLogs.set(grouped);\n  }\n\n  onPageChange(page: number) {\n    this.paginationService.goToPage(page);\n    this.updatePaginatedAndGroupedLogs();\n  }\n\n  clearLogs() {\n    if (confirm('Are you sure you want to clear all logs?')) {\n      this._logCenter.clearLogs();\n      this.loadLogs();\n    }\n  }\n\n  formatData(data: any): string {\n    if (typeof data === 'object') {\n      return JSON.stringify(data, null, 2);\n    }\n    return String(data);\n  }\n\n  getLocalizedLevel(level: string): string {\n    return this._translateService.instant('log-center.level.' + level);\n  }\n}\n", "import {Component} from '@angular/core';\nimport {LogCenterComponent} from './log-center.component';\n\n@Component({\n  selector: 'lg-log-center-page',\n  standalone: true,\n  imports: [LogCenterComponent],\n  template: `\n    <lg-log-center></lg-log-center>\n  `\n})\nexport class LogCenterPageComponent {} ", "import {Component, OnInit, inject} from '@angular/core';\nimport {ContainerComponent} from '../../../shared/view/ui/layout/container/container.component';\nimport {FlexRowComponent} from '../../../shared/view/ui/layout/flex-row.component';\nimport {TitleComponent} from '../../../shared/view/ui/layout/title/title.component';\nimport {RouterLink, RouterLinkActive} from '@angular/router';\nimport {FadeInComponent} from '../../../shared/view/ui/fade-in.component';\nimport {ExpandDirective} from '../../../shared/view/directives/expand.directive';\nimport {LocalisationSettingsComponent} from './localisation/localisation-settings.component';\nimport {BackupSettingsComponent} from './backup/backup-settings.component';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {TabDirective} from '../../../shared/view/ui/tabs/tab.directive';\nimport {TabsComponent} from '../../../shared/view/ui/tabs/tabs.component';\n\nimport {SettingsService} from '../service/services/settings.service';\nimport {InvoicesSettingsComponent} from \"./finance-settings/invoices-settings/invoices-settings.component\";\nimport {CredentialSettingsComponent} from './finance-settings/credentials/credential-settings.component';\nimport {TaxesSettingsComponent} from './finance-settings/taxes/taxes-settings.component';\nimport {OnboardingService} from '../../onboarding/onboarding.service';\nimport {LogCenterPageComponent} from './log-center/log-center-page.component';\n\n@Component({\n  selector: 'lg-settings',\n  standalone: true,\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss'],\n  imports: [\n    ContainerComponent,\n    FlexRowComponent,\n    TitleComponent,\n    RouterLink,\n    RouterLinkActive,\n    FadeInComponent,\n    ExpandDirective,\n    LocalisationSettingsComponent,\n    BackupSettingsComponent,\n    TranslatePipe,\n    TabDirective,\n    TabsComponent,\n    InvoicesSettingsComponent,\n    CredentialSettingsComponent,\n    TaxesSettingsComponent,\n    LogCenterPageComponent\n  ]\n})\nexport class SettingsComponent implements OnInit {\n  private _onboardingService = inject(OnboardingService);\n\n  constructor(\n    public settingsService: SettingsService,\n  ) {\n  }\n\n  ngOnInit() {\n    // Отмечаем шаг настроек как завершённый при посещении страницы\n    this._onboardingService.markSettingsDone();\n  }\n}\n", "<lg-fade-in>\n  <lg-container>\n    <lg-title>{{ 'settings.title'|translate }}</lg-title>\n\n    <lg-tabs>\n      <ng-template alias=\"language\" label=\"{{ 'language.settings-title'|translate }}\" lgTab>\n        <lg-language-settings></lg-language-settings>\n      </ng-template>\n\n      <ng-template alias=\"categoires\" label=\"{{ 'categories.settings-title'|translate }}\" lgTab>\n        <lg-flex-row [mobileMode]=\"true\" [top]=\"true\">\n          <a lgExpand routerLink=\"/settings/categories/products\" routerLinkActive=\"active\">\n            {{ 'categories.products.link-label'|translate }}\n          </a>\n\n          <a lgExpand routerLink=\"/settings/categories/recipes\" routerLinkActive=\"active\">\n            {{ 'categories.recipes.link-label'|translate }}\n          </a>\n        </lg-flex-row>\n      </ng-template>\n\n      <ng-template [label]=\"'settings.invoice.title' | translate\" alias=\"invoice\" lgTab>\n        <lg-invoices-settings></lg-invoices-settings>\n      </ng-template>\n\n      <ng-template [label]=\"'settings.credentials.title' | translate\" alias=\"credentials\" lgTab>\n        <lg-credentials-settings></lg-credentials-settings>\n      </ng-template>\n\n      <ng-template [label]=\"'settings.taxes.title' | translate\" alias=\"taxes\" lgTab>\n        <lg-taxes-settings></lg-taxes-settings>\n      </ng-template>\n\n      <ng-template alias=\"backup\" label=\"{{ 'backup.settings-title'|translate }}\" lgTab>\n        <lg-backup-settings></lg-backup-settings>\n      </ng-template>\n\n      <ng-template alias=\"logs\" label=\"{{ 'log-center.title'|translate }}\" lgTab>\n        <lg-log-center-page></lg-log-center-page>\n      </ng-template>\n    </lg-tabs>\n  </lg-container>\n</lg-fade-in>\n\n"],
  "mappings": "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",
  "names": ["_forTrack0", "_c0", "_c1", "_c2"]
}
