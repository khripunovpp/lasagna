{
  "version": 3,
  "sources": ["src/app/shared/view/directives/self-center.directive.ts", "src/app/shared/view/ui/form/control-box.component.ts", "src/app/shared/view/directives/self-end.directive.ts", "src/app/features/settings/view/finance-settings/taxes/taxes-settings.component.ts"],
  "sourcesContent": ["import {Directive, HostBinding} from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[lgSelfCenter]',\n})\nexport class SelfCenterDirective {\n  constructor() {\n  }\n\n  @HostBinding('style.align-self') selfAlign = 'center';\n}\n", "import {Component} from '@angular/core';\n\n@Component({\n  selector: 'lg-control-box',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex: 1;\n        background-color: var(--control-bg);\n        border-radius: 12px;\n        gap: 8px;\n        padding: 16px;\n      }\n    `,\n  ],\n})\nexport class ControlBoxComponent {\n\n}\n", "import {Directive, HostBinding} from '@angular/core';\n\n@Directive({\n  standalone: true,\n  selector: '[lgSelfEnd]',\n})\nexport class SelfEndDirective {\n  constructor() {\n  }\n\n  @HostBinding('style.align-self') selfAlign = 'end';\n}\n", "import {Component, computed, effect, signal} from '@angular/core';\nimport {FlexColumnComponent} from '../../../../../shared/view/ui/layout/flex-column.component';\n\nimport {FormArray, FormControl, FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {FlexRowComponent} from '../../../../../shared/view/ui/layout/flex-row.component';\n\nimport {InputComponent} from '../../../../../shared/view/ui/form/input.component';\nimport {TextareaComponent} from '../../../../../shared/view/ui/form/textarea.component';\nimport {CheckboxComponent} from '../../../../../shared/view/ui/form/chckbox.component';\nimport {NumberInputComponent} from '../../../../../shared/view/ui/form/number-input.component';\nimport {ButtonComponent} from '../../../../../shared/view/ui/layout/button.component';\nimport {ShrinkDirective} from '../../../../../shared/view/directives/shrink.directive';\n\nimport {MatIcon} from '@angular/material/icon';\nimport {ParseMathDirective} from '../../../../../shared/view/directives/parse-math.directive';\nimport {WidthDirective} from '../../../../../shared/view/directives/width.directive';\nimport {TaxesRepository} from '../../../service/repositories/taxes.repository';\nimport {NotificationsService} from '../../../../../shared/service/services';\nimport {Tax} from '../../../service/models/Tax';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {errorHandler, taxDTOFromFormValue} from '../../../../../shared/helpers';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {ControlComponent} from '../../../../../shared/view/ui/form/control-item/control.component';\nimport {SelfStartDirective} from '../../../../../shared/view/directives/self-start.directive';\nimport {SelfCenterDirective} from '../../../../../shared/view/directives/self-center.directive';\nimport {matchMediaSignal} from '../../../../../shared/view/signals/match-media.signal';\nimport {mobileBreakpoint} from '../../../../../shared/view/const/breakpoints';\nimport {ControlBoxComponent} from '../../../../../shared/view/ui/form/control-box.component';\nimport {NgTemplateOutlet} from '@angular/common';\nimport {SelfEndDirective} from '../../../../../shared/view/directives/self-end.directive';\n\n@Component({\n  selector: 'lg-taxes-settings',\n  standalone: true,\n  template: `\n    <lg-flex-column>\n      <ng-container [formGroup]=\"taxesForm\">\n        <ng-container formArrayName=\"rows\">\n          {{ 'settings.taxes.title' | translate }}\n          @for (taxRow of taxesAndFees(); track (taxRow.name + taxRow.uuid + i); let i = $index, odd = $odd) {\n            @let tacControl = taxesForm.controls.rows.controls[i];\n\n            @if (feesIndex() === i) {\n              {{ 'settings.taxes.fees' | translate }}\n            }\n\n            <section [formGroupName]=\"i\" class=\"taxes\">\n              @if (isMobile()) {\n                <lg-control-box>\n                  <lg-flex-column style=\"--control-bg: white\">\n                    <ng-container *ngTemplateOutlet=\"rowTpl\"></ng-container>\n                  </lg-flex-column>\n                </lg-control-box>\n              } @else {\n                <div [class.taxes__row--odd]=\"odd\"\n                     class=\"taxes__row\">\n                  <ng-container *ngTemplateOutlet=\"rowTpl\"></ng-container>\n                </div>\n              }\n\n              <ng-template #rowTpl>\n                <lg-flex-row [fit]=\"true\"\n                             [mobileMode]=\"true\"\n                             [top]=\"true\">\n                  <lg-control [label]=\"'settings.taxes.name' | translate\"\n                              lgShrink\n                              lgWidth=\"35%\">\n                    <lg-input formControlName=\"name\"\n                              placeholder=\"\"></lg-input>\n                  </lg-control>\n\n                  <lg-control [label]=\"'settings.taxes.description' | translate\"\n                              lgShrink\n                              lgWidth=\"35%\">\n                    <lg-textarea [rows]=\"4\"\n                                 formControlName=\"description\"\n                                 placeholder=\"\"></lg-textarea>\n                  </lg-control>\n\n                  <lg-control [label]=\"'settings.taxes.percentage' | translate\"\n                              lgShrink\n                              lgWidth=\"15%\">\n                    <lg-checkbox\n                      (onCheckboxChanged)=\"onTaxValueChange(i)\"\n                      [customMark]=\"'%'\"\n                      [name]=\"taxRow.name+i\"\n                      formControlName=\"percentage\"\n                    ></lg-checkbox>\n                  </lg-control>\n\n\n                  <lg-control [label]=\"'settings.taxes.value' | translate\"\n                              lgWidth=\"15%\">\n                    <lg-number-input\n                      (onInputChange)=\"onTaxValueChange(i)\"\n                      formControlName=\"value\"\n                      lgParseMath\n                      placeholder=\"\"></lg-number-input>\n                  </lg-control>\n\n                  <lg-button (click)=\"deleteTxRow(i)\"\n                             [icon]=\"!isMobile()\"\n                             [size]=\"'tiny'\"\n                             [style]=\"'danger'\"\n                             lgSelfEnd\n                             lgShrink>\n                    @if (isMobile()) {\n                      Delete this row\n                    } @else {\n                      <mat-icon aria-hidden=\"false\" aria-label=\"Example home icon\"\n                                fontIcon=\"close\"></mat-icon>\n                    }\n                  </lg-button>\n                </lg-flex-row>\n              </ng-template>\n            </section>\n          }\n        </ng-container>\n      </ng-container>\n\n      <lg-flex-row>\n        <lg-button (click)=\"saveTaxes()\"\n                   [disabled]=\"!taxesForm.dirty\"\n                   [style]=\"'success'\"\n                   lgSelfCenter\n                   lgShrink>\n          @if (taxesForm.dirty) {\n            {{ 'settings.taxes.save-changes' | translate }}\n          } @else {\n            {{ 'settings.taxes.no-changes' | translate }}\n          }\n        </lg-button>\n\n        <lg-button (click)=\"addTaxRow()\"\n                   [style]=\"'warning'\"\n                   lgSelfCenter\n                   lgShrink>\n          {{ 'settings.taxes.add-tax' | translate }}\n        </lg-button>\n      </lg-flex-row>\n    </lg-flex-column>\n  `,\n  styles: [``],\n  imports: [\n    FlexRowComponent,\n    CheckboxComponent,\n    FormsModule,\n    ButtonComponent,\n    InputComponent,\n    MatIcon,\n    NumberInputComponent,\n    ParseMathDirective,\n    ReactiveFormsModule,\n    SelfCenterDirective,\n    ShrinkDirective,\n    TextareaComponent,\n    WidthDirective,\n    FlexColumnComponent,\n    FlexColumnComponent,\n    ReactiveFormsModule,\n    FlexRowComponent,\n    InputComponent,\n    TextareaComponent,\n    CheckboxComponent,\n    NumberInputComponent,\n    ButtonComponent,\n    MatIcon,\n    SelfCenterDirective,\n    ShrinkDirective,\n    TranslatePipe,\n    ControlComponent,\n    SelfStartDirective,\n    ControlBoxComponent,\n    NgTemplateOutlet,\n    SelfEndDirective\n  ]\n})\nexport class TaxesSettingsComponent {\n  constructor(\n    private _taxesRepository: TaxesRepository,\n    private _notificationService: NotificationsService,\n  ) {\n  }\n\n  taxesAndFees = signal<Tax[]>([]);\n  feesIndex = computed(() => {\n    return this.taxesAndFees().findIndex((tax) => !tax.percentage);\n  });\n  isMobile = matchMediaSignal(mobileBreakpoint);\n  taxesForm = new FormGroup({\n    rows: new FormArray([\n      this._getRowGroup(),\n    ]),\n  });\n  rowsEffect = effect(() => {\n    this._rowsFormArray.clear();\n    this.taxesAndFees().forEach((row, index) => {\n      this._rowsFormArray.push(this._getRowGroup(row));\n    });\n    this.taxesForm.updateValueAndValidity();\n    this.taxesForm.markAsPristine();\n  });\n\n  totalTaxes = signal(0);\n\n  formValues = this.taxesForm.valueChanges.pipe(\n    takeUntilDestroyed(),\n  );\n\n  private get _rowsFormArray(): FormArray {\n    return this.taxesForm.get('rows') as FormArray;\n  }\n\n  ngOnInit() {\n    this._taxesRepository.getAll().then((taxes) => {\n      this.taxesAndFees.set(taxes.toSorted((a, b) => a.name.localeCompare(b.name) && +b.percentage - +a.percentage));\n    });\n  }\n\n  onTaxValueChange(\n    index: number,\n  ) {\n\n  }\n\n  deleteTxRow(index: number) {\n    const tax = this.taxesForm.value.rows?.[index]?.uuid;\n    this._rowsFormArray.removeAt(index);\n    this.taxesAndFees.update(current => current.filter(t => t.uuid !== tax));\n    this.taxesForm.markAsDirty();\n    if (tax) {\n      this._taxesRepository.deleteOne(tax);\n    }\n  }\n\n  addTaxRow() {\n    const tax = Tax.empty();\n    this._rowsFormArray.push(this._getRowGroup(tax));\n    this.taxesAndFees.update(current => [...current, tax]);\n    this.taxesForm.markAsDirty();\n  }\n\n  async saveTaxes() {\n    try {\n      const taxes = this.taxesForm.value.rows?.map((item) => Tax.fromRaw(taxDTOFromFormValue(item))) ?? [];\n      await this._taxesRepository\n        .addMany(taxes);\n      this._notificationService.success('settings.taxes.saved-success');\n      this.taxesForm.markAsPristine();\n    } catch (e) {\n      this._notificationService.error(errorHandler(e));\n    }\n  }\n\n\n  private _getRowGroup(\n    value?: Tax,\n  ): FormGroup {\n    return new FormGroup({\n      name: new FormControl(value?.name || ''),\n      description: new FormControl(value?.description || ''),\n      value: new FormControl(value?.amount || 0),\n      amount: new FormControl(0),\n      percentage: new FormControl(value?.percentage || false),\n      uuid: new FormControl(value?.uuid || ''),\n    });\n  }\n\n}\n"],
  "mappings": "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",
  "names": []
}
