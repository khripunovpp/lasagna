{
  "version": 3,
  "sources": ["src/app/features/settings/view/categories/category-product/add-category/add-category-form.component.ts", "src/app/features/settings/view/categories/category-product/add-category/add-category.component.ts"],
  "sourcesContent": ["import {Component, effect, input, OnInit, signal} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\nimport {ControlComponent} from '../../../../../controls/form/control-item/control.component';\nimport {InputComponent} from '../../../../../controls/form/input.component';\nimport {ButtonComponent} from '../../../../../../shared/view/ui/layout/button.component';\nimport {FlexRowComponent} from '../../../../../../shared/view/ui/layout/flex-row.component';\nimport {ExpandDirective} from '../../../../../../shared/view/directives/expand.directive';\nimport {NoWrapDirective} from '../../../../../../shared/view/directives/no-wrap.directive';\nimport {CategoryProductsRepository} from '../../../../../../shared/service/repositories';\nimport {NotificationsService} from '../../../../../../shared/service/services';\nimport {CategoryProduct} from '../../../../service/models/CategoryProduct';\nimport {categoryProductDTOFromFormValue, categoryProductToFormValue} from '../../../../../../shared/helpers';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-add-category-form',\n  standalone: true,\n  template: `\n    <form [formGroup]=\"form\">\n      <lg-flex-row [bottom]=\"true\" [mobileMode]=\"true\">\n        <lg-control [label]=\"'settings.category.name' | translate\"\n                    lgExpand>\n          <lg-input (onEnter)=\"onEnter()\"\n                    [placeholder]=\"'settings.category.placeholder' | translate\"\n                    formControlName=\"name\"></lg-input>\n        </lg-control>\n\n        <div lgNoWrap>\n          @if (uuid()) {\n            <lg-button [disabled]=\"!form.dirty\"\n                       (click)=\"editCategory()\">\n              @if (form.dirty) {\n                {{ 'settings.category.save' | translate }}\n              } @else {\n                {{ 'settings.category.no-changes' | translate }}\n              }\n            </lg-button>\n          } @else {\n            <lg-button [disabled]=\"!form.dirty\" (click)=\"addCategory()\">\n              @if (form.dirty) {\n                {{ 'settings.category.add' | translate }}\n              } @else {\n                {{ 'settings.category.enter-name' | translate }}\n              }\n            </lg-button>\n          }</div>\n      </lg-flex-row>\n    </form>\n  `,\n  imports: [\n    ReactiveFormsModule,\n    InputComponent,\n    ControlComponent,\n    ButtonComponent,\n    FlexRowComponent,\n    ExpandDirective,\n    NoWrapDirective,\n    TranslatePipe\n  ],\n  styles: [\n    `\n    `\n  ],\n})\nexport class AddCategoryFormComponent\n  implements OnInit {\n  constructor(\n    public _categoryRepository: CategoryProductsRepository,\n    private _notificationsService: NotificationsService,\n  ) {\n  }\n\n  form = new FormGroup({\n    name: new FormControl('', Validators.required),\n  });\n  category = signal<CategoryProduct | undefined>(undefined);\n  uuid = input<string>('');\n  private uuidEffect = effect(() => {\n    if (!this.uuid()) {\n      this.category.set(CategoryProduct.empty());\n      return;\n    }\n    this._categoryRepository.getOne(this.uuid()).then(category => {\n      this.reset(category);\n    });\n  });\n\n  reset(\n    category: CategoryProduct,\n  ) {\n    this.form.reset(categoryProductToFormValue(category));\n    this.category.set(category);\n    this.form.markAsPristine();\n  }\n\n  ngOnInit() {\n    this.form.valueChanges.subscribe(values => {\n      this.category()?.update(categoryProductDTOFromFormValue(values));\n    })\n  }\n\n  addCategory() {\n    if (!this.category() || !this.form.dirty) {\n      return Promise.resolve();\n    }\n    return this._categoryRepository.addOne(this.category()!).then(() => {\n      this.form.reset({\n        name: '',\n      });\n      this._notificationsService.success('settings.category.added');\n      this.form.markAsPristine();\n    });\n  }\n\n  editCategory() {\n    if (!this.category() || !this.form.dirty) {\n      return Promise.resolve();\n    }\n    return this._categoryRepository.updateOne(this.uuid(), this.category()!).then(() => {\n      this._notificationsService.success('settings.category.edited');\n      this.form.markAsPristine();\n    });\n  }\n\n  onEnter() {\n    if (this.uuid()) {\n      this.editCategory();\n    } else {\n      this.addCategory();\n    }\n  }\n}\n", "import {Component, signal} from '@angular/core';\nimport {AddCategoryFormComponent} from './add-category-form.component';\nimport {ActivatedRoute} from '@angular/router';\nimport {ContainerComponent} from '../../../../../../shared/view/ui/layout/container/container.component';\nimport {CardComponent} from '../../../../../../shared/view/ui/card/card.component';\nimport {TitleComponent} from '../../../../../../shared/view/ui/layout/title/title.component';\nimport {FlexRowComponent} from '../../../../../../shared/view/ui/layout/flex-row.component';\nimport {FadeInComponent} from '../../../../../../shared/view/ui/fade-in.component';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-add-category',\n  standalone: true,\n  imports: [\n    ContainerComponent,\n    CardComponent,\n    TitleComponent,\n    AddCategoryFormComponent,\n    FlexRowComponent,\n    FadeInComponent,\n    TranslatePipe\n  ],\n  template: `\n      <lg-fade-in>\n          <lg-container>\n              <lg-flex-row [center]=\"true\">\n                  <lg-title>{{ uuid() ? ('categories.edit-product' | translate) : ('categories.add-product' | translate) }}</lg-title>\n              </lg-flex-row>\n\n              <lg-card>\n                  <lg-add-category-form [uuid]=\"uuid()\"></lg-add-category-form>\n              </lg-card>\n          </lg-container>\n      </lg-fade-in>\n  `,\n  styles: [\n    `\n    `\n  ]\n})\nexport class AddCategoryComponent {\n  constructor(\n    private _aRoute: ActivatedRoute,\n  ) {\n  }\n\n  uuid = signal('')\n\n  ngOnInit() {\n    this._aRoute.params.subscribe(params => {\n      this.uuid.set(params['uuid']);\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
