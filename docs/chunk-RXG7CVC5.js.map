{
  "version": 3,
  "sources": ["src/app/features/products/service/categorized-products-list.token.ts", "src/app/features/products/service/Product.scheme.ts", "src/app/features/products/view/list/draft-products-list.compoent.ts", "src/app/features/products/view/list/product-list.component.ts"],
  "sourcesContent": ["import {inject, InjectionToken} from '@angular/core';\nimport {from, map, mergeMap, Observable, switchMap} from 'rxjs';\nimport {groupBy} from '../../../shared/helpers/grouping.helper';\nimport {ProductsRepository} from './products.repository';\nimport {CategoryProductsRepository} from '../../settings/service/repositories/category-products.repository';\nimport {Product} from './Product';\nimport {catchError} from 'rxjs/operators';\nimport {NotificationsService} from '../../../shared/service/services';\nimport {errorHandler} from '../../../shared/helpers';\nimport {SortResult} from '../../../shared/service/types/sorting.types';\n\nexport const CATEGORIZED_PRODUCTS_LIST = new InjectionToken<Observable<SortResult<Product>>>('CategorizedProductsList', {\n  factory: () => {\n    const productsRepository = inject(ProductsRepository);\n    const categoryRepository = inject(CategoryProductsRepository);\n    const notificationsService = inject(NotificationsService);\n    const products = from(productsRepository.loadAll()).pipe(\n      switchMap(() => productsRepository.products$),\n    );\n\n    return products.pipe(\n      map((products: Product[]) => products.toSorted((a: Product, b: Product) => a?.name?.localeCompare(b?.name))),\n      map((products: Product[]) => groupBy(products, 'category_id')),\n      mergeMap(async (grouped: Record<string, Product[]>) => {\n        const list: {\n          category: string\n          products: Product[]\n        }[] = [];\n        const withoutGroup: Product[] = [];\n        const uuids = Object.keys(grouped).filter(uuid => uuid !== ''); // исключаем пустые категории\n        const categories = await categoryRepository.getMany(uuids);\n\n        for (const groupKey in grouped) {\n          const products = grouped[groupKey];\n          if (products && products.length) {\n            const category = categories.find(c => c.uuid === groupKey);\n            const group = {\n              category: category?.name || '',\n              products: products,\n            };\n\n            if (category?.name) {\n              list.push(group)\n            } else {\n              withoutGroup.push(...products)\n            }\n          }\n        }\n\n        const sortedList = list.toSorted((a, b) => a.category > b.category ? 1 : -1);\n\n        if (withoutGroup.length) {\n          return [{\n            category: '',\n            products: withoutGroup,\n          }].concat(sortedList);\n        }\n\n        return sortedList;\n      }),\n      map(list => new SortResult(list.map(c => ({\n        field: c.category || '',\n        items: c.products || [],\n      })) ?? [])),\n      catchError((error, caught) => {\n        notificationsService.error(errorHandler(error));\n        return caught;\n      }),\n    );\n  }\n})\n", "import {z} from 'zod';\nimport {UnitScheme} from '../../recipes/service/schemes/Unit.scheme';\n\nexport const ProductScheme = z.object({\n  name: z.string(),\n  price: z.number().or(z.string()),\n  amount: z.number().or(z.string()),\n  source: z.string(),\n  brand: z.string(),\n  notes: z.string(),\n  category_id: z.string().nullable().optional(),\n  uuid: z.string().optional(),\n  unit: UnitScheme.or(z.string()).optional(),\n  createdAt: z.union([z.string(), z.number()]).optional(),\n  updatedAt: z.union([z.string(), z.number()]).optional(),\n  color: z.string().optional(),\n  system: z.boolean().optional(),\n});\n\n\nexport type ProductDTO = z.infer<typeof ProductScheme>;\n", "import {Component, HostBinding, OnInit, signal} from '@angular/core';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {CardListComponent} from '../../../../shared/view/ui/card/card-list.component';\nimport {CardListItemDirective} from '../../../../shared/view/ui/card/card-list-item.directive';\nimport {RouterLink} from '@angular/router';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {PullDirective} from '../../../../shared/view/directives/pull.directive';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {ExpanderComponent} from '../../../../shared/view/ui/expander.component';\nimport {DraftForm, NotificationsService, SelectionZoneService} from '../../../../shared/service/services';\nimport {ProductsRepository} from '../../../../shared/service/repositories';\nimport {ProductDTO, ProductScheme} from '../../service/Product.scheme';\nimport {\n  InlineSeparatedGroupComponent,\n  InlineSeparatedGroupDirective\n} from '../../../../shared/view/ui/inline-separated-group.component';\n\n@Component({\n  selector: 'lg-draft-products-list',\n  standalone: true,\n  template: `\n    @if (drafts()?.length) {\n      <lg-expander [closeLabel]=\"'drafts-close-label'|translate\"\n                   [openLabel]=\"'drafts-label'|translate:{length:drafts()?.length}\">\n\n        <lg-inline-separated-group>\n          <ng-template lgInlineSeparatedGroup>\n            <lg-button (click)=\"selectionZoneService.onSelection()\"\n                       [flat]=\"true\"\n                       [size]=\"'small'\"\n                       [style]=\"'success'\">\n              {{ 'select-many-label'|translate }}\n            </lg-button>\n          </ng-template>\n\n          <ng-template lgInlineSeparatedGroup>\n            <lg-button [flat]=\"true\"\n                       [size]=\"'small'\"\n                       [style]=\"'danger'\"\n                       (click)=\"deleteAllDrafts()\">\n              {{ 'delete-all-label' | translate }}\n            </lg-button>\n          </ng-template>\n\n          @if (selectionZoneService.selected(); as selected) {\n            <ng-template lgInlineSeparatedGroup>\n              <lg-button [flat]=\"true\"\n                         [disabled]=\"!selected?.size\"\n                         [size]=\"'small'\"\n                         [style]=\"'danger'\"\n                         (click)=\"deletedSelectedDrafts()\">\n                {{ 'delete-selected-label' | translate }}\n              </lg-button>\n            </ng-template>\n          }\n        </lg-inline-separated-group>\n\n        <lg-card-list [mode]=\"selectionZoneService.selectionMode()\"\n                      (onSelected)=\"selectionZoneService.putSelected($event)\"\n                      (onDeleteOne)=\"deleteDraft($event?.uuid)\"\n                      [selectAll]=\"selectionZoneService.selectAll()\"\n                      [deselectAll]=\"selectionZoneService.deselectAll()\"\n                      style=\"--card-bg: var(--card-bg-draft)\">\n          @for (item of drafts(); track item.uuid) {\n            <ng-template lgCardListItem [uuid]=\"item.uuid\" type=\"draft\">\n              <lg-flex-row [center]=\"true\">\n                <a [routerLink]=\"'/products/draft/' + item?.uuid\" lgExpand>\n                  @if (item?.meta?.['uuid']) {\n                    {{ 'draft.list-prefix.existing'|translate }}\n                  } @else {\n                    {{ 'draft.list-prefix.new'|translate }}\n                  }\n                  {{ item?.data?.name || 'Unknown' }}\n                </a>\n\n                <small class=\"text-muted text-cursive\" lgPull>\n                  {{ 'edited-at-label'|translate }} {{ (item?.updatedAt || item?.createdAt) | timeAgo }}\n                </small>\n              </lg-flex-row>\n            </ng-template>\n          }\n        </lg-card-list>\n      </lg-expander>\n    }\n  `,\n  imports: [\n    FlexRowComponent,\n    ButtonComponent,\n    CardListComponent,\n    CardListItemDirective,\n    RouterLink,\n    TimeAgoPipe,\n    ExpandDirective,\n    PullDirective,\n    TranslatePipe,\n    ExpanderComponent,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective\n  ],\n  providers: [\n    SelectionZoneService,\n  ],\n  styles: [\n    ``\n  ]\n})\nexport class DraftProductsListCompoent\n  implements OnInit {\n  constructor(\n    public _productsRepository: ProductsRepository,\n    private _notificationsService: NotificationsService,\n    public selectionZoneService: SelectionZoneService,\n  ) {\n  }\n\n  drafts = signal<(DraftForm<ProductDTO>)[]>([]);\n  protected readonly ProductDbInputScheme = ProductScheme;\n\n  @HostBinding('attr.hidden') get hidden() {\n    return this.drafts()?.length === 0 ? true : null;\n  }\n\n  deleteDraft(\n    draftUUID?: string\n  ) {\n    if (!draftUUID) {\n      return;\n    }\n    this._productsRepository.removeDraftProduct(draftUUID);\n    this.drafts.update((drafts) => {\n      return drafts.filter((item) => item?.uuid !== draftUUID);\n    });\n  }\n\n\n  deleteAllDrafts() {\n    this._productsRepository.removeDraftMany(this.drafts().map((item) => item.uuid)).then(() => {\n      this.drafts.set([]);\n      this._notificationsService.success('notifications.drafts.deleted');\n    })\n  }\n\n  deletedSelectedDrafts() {\n    const selected = this.selectionZoneService.selected();\n    if (!selected) return;\n    this._productsRepository.removeDraftMany(Array.from(selected)).then(() => {\n      this.drafts.update((drafts) => {\n        return drafts.filter((item) => !selected.has(item.uuid));\n      });\n      this._notificationsService.success('notifications.drafts.deleted');\n    })\n  }\n\n\n  ngOnInit() {\n    const draft = this._productsRepository.getDraftProducts();\n    if (draft) {\n      this.drafts.set(draft);\n    }\n  }\n\n}\n", "import {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  DestroyRef,\n  inject,\n  linkedSignal,\n  OnInit,\n  Signal\n} from '@angular/core';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {ProductsRepository} from '../../service/products.repository';\nimport {MatIcon} from '@angular/material/icon';\nimport {ContainerComponent} from '../../../../shared/view/layout/container.component';\nimport {TitleComponent} from '../../../../shared/view/layout/title.component';\nimport {CurrencyPipe} from '@angular/common';\nimport {TransferDataService} from '../../../../shared/service/services/transfer-data.service';\nimport {Stores} from '../../../../shared/service/db/const/stores';\nimport {ImportComponent} from '../../../../shared/view/ui/import/import.component';\nimport {RouterLink} from '@angular/router';\nimport {takeUntilDestroyed, toSignal} from '@angular/core/rxjs-interop';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {ImportRowTplDirective} from '../../../../shared/view/ui/import/import-row-tpl.directive';\nimport {CATEGORIZED_PRODUCTS_LIST} from '../../service/categorized-products-list.token';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {ControlsBarComponent} from '../../../../shared/view/ui/controls-bar/controls-bar.component';\nimport {SelectionZoneService} from '../../../../shared/service/services/selection-zone.service';\nimport {SelectionToolsComponent} from '../../../controls/form/selection-tools.component';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {Product} from '../../service/Product';\nimport {ProductScheme} from '../../service/Product.scheme';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {TranslateDirective, TranslatePipe} from '@ngx-translate/core';\nimport {DraftProductsListCompoent} from './draft-products-list.compoent';\nimport {\n  InlineSeparatedGroupComponent,\n  InlineSeparatedGroupDirective\n} from '../../../../shared/view/ui/inline-separated-group.component';\nimport {UserCurrencyPipe} from '../../../../shared/view/pipes/userCurrency.pipe';\nimport {FlexColumnComponent} from '../../../../shared/view/layout/flex-column.component';\nimport {UnitStringPipe} from '../../../../shared/view/pipes/unitString.pipe';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {GroupingTileDirective} from '../../../../shared/view/ui/grouping-tiles/grouping-tile.directive';\nimport {GroupingTilesComponent} from '../../../../shared/view/ui/grouping-tiles/grouping-tiles.component';\nimport {SortResult} from '../../../../shared/service/types/sorting.types';\nimport {errorHandler, hasMicroPrice} from '../../../../shared/helpers';\nimport {SettingsKeysConst} from '../../../settings/const/settings-keys.const';\nimport {SettingsService} from '../../../settings/service/services/settings.service';\nimport {productLabelFactoryProvider} from '../../../../shared/factories/entity-labels/product.label.factory';\nimport {CurrencySymbolPipe} from '../../../../shared/view/pipes/currency-symbol.pipe';\nimport {SETTINGS} from '../../../settings/service/providers/settings.token';\n\n@Component({\n  selector: 'lg-product-list',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    @if (products()?.length) {\n      <lg-controls-bar>\n        <lg-button [icon]=\"true\"\n                   [link]=\"'/products/add'\"\n                   [size]=\"'medium'\"\n                   [style]=\"'primary'\">\n          <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n        </lg-button>\n\n        <lg-inline-separated-group>\n          <ng-template lgInlineSeparatedGroup>\n            <lg-button (click)=\"exportProducts(selectionZoneService.selected())\"\n                       [flat]=\"true\"\n                       [size]=\"'small'\"\n                       [style]=\"'solid'\">\n              {{ 'export-label'|translate }}\n            </lg-button>\n          </ng-template>\n\n          <ng-template lgInlineSeparatedGroup>\n            <lg-import (onDone)=\"loadProducts()\"\n                       [label]=\"('import-label'|translate)\"\n                       [schema]=\"ProductScheme\"\n                       [storeName]=\"Stores.PRODUCTS\">\n              <ng-template let-flow=\"flow\" let-row lgImportRowTpl>\n                <span>{{ row?.name }}</span>\n              </ng-template>\n            </lg-import>\n          </ng-template>\n        </lg-inline-separated-group>\n      </lg-controls-bar>\n    }\n\n    <lg-fade-in>\n      <lg-container>\n        <lg-title>\n          {{ 'products.list-title'|translate }}\n\n          <span [translateParams]=\"{length:products()?.length}\"\n                [translate]=\"'filters.results.length'\"\n                class=\"text-muted text-small\"></span>\n        </lg-title>\n\n        <lg-draft-products-list></lg-draft-products-list>\n\n        @if (!groupingTiles.empty()) {\n          <lg-flex-column [size]=\"'medium'\">\n            <lg-selection-tools [selectionTypes]=\"['product']\"></lg-selection-tools>\n          </lg-flex-column>\n        }\n\n        <lg-grouping-tiles #groupingTiles\n                           [selectable]=\"true\"\n                           [sortResult]=\"products()\">\n          <ng-template let-product lgGroupingTile>\n            <lg-card>\n              <lg-flex-column size=\"medium\">\n                <lg-flex-row [center]=\"true\" lgExpand>\n                  <a [routerLink]=\"'/products/edit/' + product.uuid\">\n                    {{ productLabelFactory(product) }}\n                  </a>\n\n                  <div>\n                    @if (hasMicroPrice(product.pricePerUnit)) {\n                      {{ 'micro-amount'|translate }}\n                      {{ userSettings()['currency']|currencySymbol }}\n                    } @else {\n                      {{ $any(product).pricePerUnit | userCurrency: pipesDigits() }}\n                    }\n                    <span [translateParams]=\"{unit:$any(product)?.unit | unitString | translate}\"\n                          [translate]=\"'per-unit.label'\"></span>\n                  </div>\n                </lg-flex-row>\n\n                <small class=\"text-muted text-cursive\">\n                  {{ 'edited-at-label'|translate }} {{ (product?.updatedAt || product?.createdAt) | timeAgo }}\n                </small>\n              </lg-flex-column>\n            </lg-card>\n          </ng-template>\n\n          <lg-flex-column empty-state\n                          position=\"center\"\n                          size=\"medium\">\n            {{ 'products.empty-state.text'|translate }}\n\n            <lg-button [link]=\"'/products/add'\"\n                       [size]=\"'medium'\"\n                       [style]=\"'primary'\">\n              {{ 'products.empty-state.btn'|translate }}\n            </lg-button>\n          </lg-flex-column>\n        </lg-grouping-tiles>\n      </lg-container>\n    </lg-fade-in>\n  `,\n  imports: [\n    FlexRowComponent,\n    ButtonComponent,\n    MatIcon,\n    ContainerComponent,\n    TitleComponent,\n    ImportComponent,\n    RouterLink,\n    ImportRowTplDirective,\n    FadeInComponent,\n    ControlsBarComponent,\n    SelectionToolsComponent,\n    TimeAgoPipe,\n    ExpandDirective,\n    TranslatePipe,\n    DraftProductsListCompoent,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective,\n    UserCurrencyPipe,\n    FlexColumnComponent,\n    UnitStringPipe,\n    TranslateDirective,\n    CardComponent,\n    GroupingTileDirective,\n    GroupingTilesComponent,\n    CurrencySymbolPipe\n  ],\n  providers: [\n    SelectionZoneService,\n    CurrencyPipe,\n  ],\n  styles: [\n    `:host {\n      display: block;\n    }\n    `\n  ]\n})\nexport class ProductListComponent\n  implements OnInit {\n  constructor(\n    public _productsRepository: ProductsRepository,\n    private _transferDataService: TransferDataService,\n    private _notificationsService: NotificationsService,\n    public selectionZoneService: SelectionZoneService,\n    private _settingsService: SettingsService,\n  ) {\n    this.selectionZoneService.onDelete.pipe(\n      takeUntilDestroyed(this.destroyRef),\n    ).subscribe(key => {\n      this.deleteProduct(key);\n    });\n  }\n\n  readonly userSettings = inject(SETTINGS);\n  readonly precisions = computed(() => this._settingsService.settingsSignal()?.getSetting(SettingsKeysConst.pricePrecision)?.data ?? 2);\n  readonly pipesDigits = computed(() => `1.0-${this.precisions()}`);\n  readonly destroyRef = inject(DestroyRef);\n  readonly products = toSignal(inject(CATEGORIZED_PRODUCTS_LIST));\n  protected readonly ProductDbInputScheme = ProductScheme;\n  protected readonly Stores = Stores;\n  protected readonly ProductScheme = ProductScheme;\n  protected readonly productLabelFactory = inject(productLabelFactoryProvider);\n  protected readonly hasMicroPrice = hasMicroPrice;\n\n  exportProducts(\n    selected: Set<string>,\n  ) {\n    this._transferDataService.exportTable(Stores.PRODUCTS, 'json', {\n      selected: Array.from(selected ?? []),\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n\n  deleteProduct(uuid: string | undefined) {\n    if (!uuid) {\n      return;\n    }\n    this._productsRepository.deleteProduct(uuid).then(() => {\n      this._notificationsService.success('notifications.product.deleted');\n      this.loadProducts();\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n\n  ngOnInit() {\n    this.loadProducts();\n  }\n\n  loadProducts() {\n    this._productsRepository.loadAll().catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": ["products", "_c0"]
}
