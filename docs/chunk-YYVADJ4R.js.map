{
  "version": 3,
  "sources": ["src/app/shared/service/services/analytics.service.ts"],
  "sourcesContent": ["import {Injectable} from '@angular/core';\n\nexport interface AnalyticsEvent {\n  event_category: string;\n  event_label?: string;\n  value?: number;\n\n  [key: string]: any;\n}\n\nexport interface AnalyticsGoal {\n  goal_id: string;\n  goal_name: string;\n  event_category: string;\n  event_label?: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnalyticsService {\n  constructor() {\n  }\n\n  private readonly GOALS = {\n    RECIPE_CREATED: {\n      goal_id: 'recipe_created',\n      goal_name: 'Recipe Created',\n      event_category: 'recipe',\n      event_label: 'recipe_creation'\n    },\n    PRODUCT_CREATED: {\n      goal_id: 'product_created',\n      goal_name: 'Product Created',\n      event_category: 'product',\n      event_label: 'product_creation'\n    },\n    RECIPE_CALCULATED: {\n      goal_id: 'recipe_calculated',\n      goal_name: 'Recipe Calculated',\n      event_category: 'recipe',\n      event_label: 'recipe_calculation'\n    },\n    INVOICE_CREATED: {\n      goal_id: 'invoice_created',\n      goal_name: 'Invoice Created',\n      event_category: 'invoice',\n      event_label: 'invoice_creation'\n    },\n    PWA_INSTALL_ACCEPTED: {\n      goal_id: 'pwa_install_accepted',\n      goal_name: 'PWA Install Accepted',\n      event_category: 'pwa',\n      event_label: 'install_accepted'\n    },\n    PWA_INSTALL_DECLINED: {\n      goal_id: 'pwa_install_declined',\n      goal_name: 'PWA Install Declined',\n      event_category: 'pwa',\n      event_label: 'install_declined'\n    },\n    SUPPORT_MESSAGE_SENT: {\n      goal_id: 'support_message_sent',\n      goal_name: 'Support Message Sent',\n      event_category: 'support',\n      event_label: 'message_sent'\n    }\n  };\n\n  /**\n   * Track a custom event\n   */\n  trackEvent(eventName: string, parameters: AnalyticsEvent): void {\n    if (typeof window !== 'undefined' && window.gtag && window.gtagLoaded) {\n      // Check if analytics storage is granted\n      const consent = localStorage.getItem('cookie-consent');\n      if (consent === 'all' || consent === 'analytics') {\n        window.gtag('event', eventName, {\n          ...parameters,\n          user_weak_uuid: this._getUserUUID(),\n        });\n        console.log('Analytics event tracked:', eventName, parameters);\n      } else {\n        console.warn('Analytics consent not granted for event:', eventName);\n      }\n    } else {\n      console.warn('Google Analytics not available for event:', eventName);\n    }\n  }\n\n  /**\n   * Track recipe creation\n   */\n  trackRecipeCreated(recipeName?: string, additionalData?: any): void {\n    const eventData: AnalyticsEvent = {\n      event_category: this.GOALS.RECIPE_CREATED.event_category,\n      event_label: this.GOALS.RECIPE_CREATED.event_label,\n      value: 1\n    };\n\n    if (recipeName) {\n      eventData['recipe_name'] = recipeName;\n    }\n\n    if (additionalData) {\n      Object.assign(eventData, additionalData);\n    }\n\n    this.trackEvent('recipe_created', eventData);\n  }\n\n  /**\n   * Track product creation\n   */\n  trackProductCreated(productName?: string, additionalData?: any): void {\n    const eventData: AnalyticsEvent = {\n      event_category: this.GOALS.PRODUCT_CREATED.event_category,\n      event_label: this.GOALS.PRODUCT_CREATED.event_label,\n      value: 1\n    };\n\n    if (productName) {\n      eventData['product_name'] = productName;\n    }\n\n    if (additionalData) {\n      Object.assign(eventData, additionalData);\n    }\n\n    this.trackEvent('product_created', eventData);\n  }\n\n  /**\n   * Track recipe calculation\n   */\n  trackRecipeCalculated(recipeName?: string, servings?: number, additionalData?: any): void {\n    const eventData: AnalyticsEvent = {\n      event_category: this.GOALS.RECIPE_CALCULATED.event_category,\n      event_label: this.GOALS.RECIPE_CALCULATED.event_label,\n      value: 1\n    };\n\n    if (recipeName) {\n      eventData['recipe_name'] = recipeName;\n    }\n\n    if (servings) {\n      eventData['servings'] = servings;\n    }\n\n    if (additionalData) {\n      Object.assign(eventData, additionalData);\n    }\n\n    this.trackEvent('recipe_calculated', eventData);\n  }\n\n  /**\n   * Track invoice creation\n   */\n  trackInvoiceCreated(invoiceNumber?: string, totalAmount?: number, additionalData?: any): void {\n    const eventData: AnalyticsEvent = {\n      event_category: this.GOALS.INVOICE_CREATED.event_category,\n      event_label: this.GOALS.INVOICE_CREATED.event_label,\n      value: 1\n    };\n\n    if (invoiceNumber) {\n      eventData['invoice_number'] = invoiceNumber;\n    }\n\n    if (totalAmount) {\n      eventData['total_amount'] = totalAmount;\n    }\n\n    if (additionalData) {\n      Object.assign(eventData, additionalData);\n    }\n\n    this.trackEvent('invoice_created', eventData);\n  }\n\n  /**\n   * Track user engagement\n   */\n  trackUserEngagement(action: string, category: string, label?: string, value?: number): void {\n    this.trackEvent('user_engagement', {\n      event_category: category,\n      event_label: label,\n      action: action,\n      value: value\n    });\n  }\n\n  /**\n   * Track PWA install acceptance\n   */\n  trackPwaInstallAccepted(additionalData?: any): void {\n    const eventData: AnalyticsEvent = {\n      event_category: this.GOALS.PWA_INSTALL_ACCEPTED.event_category,\n      event_label: this.GOALS.PWA_INSTALL_ACCEPTED.event_label,\n      value: 1\n    };\n\n    if (additionalData) {\n      Object.assign(eventData, additionalData);\n    }\n\n    this.trackEvent('pwa_install_accepted', eventData);\n  }\n\n  /**\n   * Track PWA install decline\n   */\n  trackPwaInstallDeclined(additionalData?: any): void {\n    const eventData: AnalyticsEvent = {\n      event_category: this.GOALS.PWA_INSTALL_DECLINED.event_category,\n      event_label: this.GOALS.PWA_INSTALL_DECLINED.event_label,\n      value: 1\n    };\n\n    if (additionalData) {\n      Object.assign(eventData, additionalData);\n    }\n\n    this.trackEvent('pwa_install_declined', eventData);\n  }\n\n  /**\n   * Track support message sent\n   */\n  trackSupportMessageSent(additionalData?: any): void {\n    const eventData: AnalyticsEvent = {\n      event_category: this.GOALS.SUPPORT_MESSAGE_SENT.event_category,\n      event_label: this.GOALS.SUPPORT_MESSAGE_SENT.event_label,\n      value: 1,\n    };\n\n    if (additionalData) {\n      Object.assign(eventData, additionalData);\n    }\n\n    this.trackEvent('support_message_sent', eventData);\n  }\n\n  /**\n   * Track error events\n   */\n  trackError(errorType: string, errorMessage: string, additionalData?: any): void {\n    const eventData: AnalyticsEvent = {\n      event_category: 'error',\n      event_label: errorType,\n      error_message: errorMessage\n    };\n\n    if (additionalData) {\n      Object.assign(eventData, additionalData);\n    }\n\n    this.trackEvent('exception', eventData);\n  }\n\n  /**\n   * Get available goals\n   */\n  getGoals(): Record<string, AnalyticsGoal> {\n    return this.GOALS;\n  }\n\n  /**\n   * Check if analytics is available and consented\n   */\n  isAnalyticsAvailable(): boolean {\n    if (typeof window === 'undefined') return false;\n\n    const consent = localStorage.getItem('cookie-consent');\n    const hasConsent = consent === 'all' || consent === 'analytics';\n    const hasGtag = typeof window.gtag === 'function';\n\n    return hasConsent && hasGtag;\n  }\n\n  /**\n   * Get analytics status for debugging\n   */\n  getAnalyticsStatus(): { available: boolean; consent: string | null; gtag: boolean } {\n    if (typeof window === 'undefined') {\n      return {available: false, consent: null, gtag: false};\n    }\n\n    const consent = localStorage.getItem('cookie-consent');\n    const hasGtag = typeof window.gtag === 'function';\n\n    return {\n      available: (consent === 'all' || consent === 'analytics') && hasGtag,\n      consent,\n      gtag: hasGtag\n    };\n  }\n\n  private _getUserUUID(): string {\n    try {\n      return String(localStorage.getItem('userUUID')).trim() || 'unknown';\n    } catch {\n      return 'unknown';\n    }\n  }\n}\n\n// Extend Window interface for TypeScript\ndeclare global {\n  interface Window {\n    gtag: (...args: any[]) => void\n    gtagLoaded: boolean\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
