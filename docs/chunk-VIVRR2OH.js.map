{"version":3,"sources":["src/app/features/widgets/amount-widgets.component.ts","src/app/features/controls/form/autocomplete.component.ts","node_modules/chart.js/auto/auto.js","src/app/features/products/view/price-chnages-chart.component.ts","src/app/features/products/view/price-changes.component.ts","src/app/features/products/view/add-product/add-product-form.component.ts","src/app/features/products/view/add-product/add-product-form.component.html","src/app/features/products/view/add-product/add-product.component.ts"],"sourcesContent":["import {Component, output, signal, viewChild} from '@angular/core';\nimport {EggsWidgetComponent} from './eggs-widget/eggs-widget.component';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {DialogComponent} from '../../shared/view/ui/dialogs/dialog.component';\nimport {ButtonComponent} from '../../shared/view/ui/button.component';\nimport {MatIcon} from '@angular/material/icon';\n\n@Component({\n  selector: 'lg-amount-widgets',\n  standalone: true,\n  template: `\n    <lg-button (click)=\"open()\"\n               [flat]=\"true\"\n               [icon]=\"true\"\n               [style]=\"'success'\">\n      <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n    </lg-button>\n\n    <lg-dialog #dialog\n               (onCancel)=\"onCancel()\"\n               (onConfirm)=\"onConfirm()\"\n               [centerButtons]=\"true\"\n               [showConfirmButton]=\"false\"\n               [displayFooter]=\"false\"\n               [columnButtons]=\"false\">\n      <div [class.selected]=\"selectedWidget() != null\"\n           class=\"amount-widgets\">\n        <div class=\"amount-widgets__buttons\">\n          <button (click)=\"onWidgetSelect('eggs')\"\n                  class=\"amount-widgets__button\">{{ 'widgets.eggs.title' | translate }}\n          </button>\n        </div>\n        @if (selectedWidget() === 'eggs') {\n          <div class=\"amount-widgets__wrapper\">\n            <lg-eggs-widget (changed)=\"onEggsChanged($event)\"></lg-eggs-widget>\n          </div>\n        }\n      </div>\n    </lg-dialog>\n  `,\n  imports: [\n    EggsWidgetComponent,\n    TranslatePipe,\n    DialogComponent,\n    ButtonComponent,\n    MatIcon,\n    MatIcon,\n  ],\n  styles: [\n    `\n      .amount-widgets {\n        display: flex;\n        gap: 16px;\n        flex-direction: column;\n      }\n\n      .amount-widgets__input {\n        flex: 1;\n      }\n\n      .amount-widgets__buttons {\n        display: flex;\n        gap: 16px;\n        flex-wrap: wrap;\n        padding: 16px;\n        background-color: #fafafa;\n        border-radius: 12px;\n        margin: -16px;\n      }\n\n      .amount-widgets.selected .amount-widgets__buttons {\n        margin-bottom: 0;\n      }\n\n      .amount-widgets__button {\n        display: flex;\n        padding: 8px 16px;\n        border-radius: 16px;\n        background-color: #e5de38;\n        appearance: none;\n        border: none;\n        font-family: inherit;\n        font-size: inherit;\n      }\n    `\n  ]\n})\n\nexport class AmountWidgetsComponent {\n  constructor() {\n  }\n\n  eggsChanged = output<number | null>();\n  selectedWidget = signal<string | null>(null);\n  readonly dialog = viewChild(DialogComponent);\n\n  onWidgetSelect(event: any) {\n    this.selectedWidget.set(event);\n  }\n\n\n  onEggsChanged(event: any) {\n    if (!event) return;\n    this.eggsChanged.emit(event);\n  }\n\n  onConfirm() {\n\n  }\n\n  onCancel() {\n\n  }\n\n  open() {\n    this.dialog()?.open();\n  }\n\n  close() {\n    this.dialog()?.close();\n  }\n}\n","import {\n  Component,\n  forwardRef,\n  Input,\n  input,\n  OnInit,\n  Optional,\n  output,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NgLabelTemplateDirective,\n  NgOptionTemplateDirective,\n  NgSelectComponent,\n  NgTagTemplateDirective\n} from '@ng-select/ng-select';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {SelectResourcesService} from '../../../shared/service/services/select-resources.service';\nimport {debounceTime, of, Subject, switchMap} from 'rxjs';\nimport {MultiselectItem} from './multiselect.component';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n\nexport interface autocompleteItem {\n  value: unknown\n}\n\n@Component({\n  selector: 'lg-autocomplete',\n  standalone: true,\n  template: `\n    <div class=\"autocomplete\">\n      <ng-select (blur)=\"onBlur()\"\n                 (change)=\"onChangeSelect($event)\"\n                 (search)=\"onSearch($event)\"\n                 [addTag]=\"true\"\n                 [bindValue]=\"key()\"\n                 [appendTo]=\"appendTo()\"\n                 [compareWith]=\"compareWith\"\n                 [editableSearchTerm]=\"true\"\n                 [items]=\"loadedList()\"\n                 [multiple]=\"multi()\"\n                 [ngModel]=\"value\"\n                 [placeholder]=\"placeholder\"\n                 [searchFn]=\"searchFn\"\n                 bindLabel=\"name\"\n                 [notFoundText]=\"'search.not-found' | translate\">\n        <ng-template let-item=\"item\" ng-label-tmp>\n          {{ item?.name ?? item?.value ?? item }}\n        </ng-template>\n        <ng-template let-item=\"item\" ng-option-tmp>\n          {{ item?.name ?? item?.value ?? item }}\n        </ng-template>\n        <ng-template let-searchTerm=\"searchTerm\" ng-tag-tmp>\n          {{ searchTerm }}\n        </ng-template>\n      </ng-select>\n    </div>\n  `,\n  imports: [\n    NgSelectComponent,\n    FormsModule,\n    NgOptionTemplateDirective,\n    NgLabelTemplateDirective,\n    NgTagTemplateDirective,\n    TranslatePipe\n  ],\n  styles: [\n    `\n      lg-autocomplete {\n        display: flex;\n        flex: 1;\n        min-width: 150px;\n      }\n\n      .autocomplete {\n        flex: 1;\n        width: 100%;\n\n        .ng-select.ng-select-single .ng-select-container {\n          height: 51px;\n        }\n\n        .ng-select.ng-select-focused .ng-select-container {\n          outline: none;\n          box-shadow: var(--focus-shadow);\n          border-radius: 12px;\n        }\n\n        .ng-select .ng-select-container {\n          border: none;\n          border-radius: 12px;\n          background-color: var(--control-bg);\n\n          .ng-input {\n            top: 16px !important;\n            padding-right: 10px !important;\n\n            & > input {\n              color: var(--text);\n              font-family: inherit;\n              font-size: inherit;\n            }\n          }\n        }\n\n        .ng-dropdown-panel {\n          border: none;\n          box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);\n          border-radius: 12px;\n          overflow: hidden;\n\n          .ng-option {\n            padding: 16px;\n            border-radius: 12px;\n          }\n        }\n\n        .ng-arrow-wrapper {\n          display: none;\n        }\n\n        .ng-clear-wrapper {\n          display: none;\n        }\n      }\n\n    `\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AutocompleteComponent\n  implements ControlValueAccessor, OnInit {\n  constructor(\n    @Optional() private _selectResourcesService: SelectResourcesService,\n  ) {\n  }\n\n  @Input() placeholder = '';\n  noLoad = input<boolean>(false);\n  resource = input<string>('');\n  key = input<string>('');\n  appendTo = input<string>('');\n  strict = input<boolean>(false);\n  multi = input<boolean>(false);\n  loadedList = signal([]);\n  onSelected = output<unknown>();\n  selectComponent = viewChild(NgSelectComponent);\n  value?: unknown = null\n  initialList = signal<unknown[]>([]);\n  private _onSearch$ = new Subject<{\n    term: string\n    items: unknown[]\n  }>();\n  private _currentSearchTerm: string | null = null;\n\n  onChange: (value: unknown) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  searchFn = (term: string, item: MultiselectItem) => {\n    const val = item as any;\n    if (typeof val === 'string') {\n      return val.toLowerCase().includes(term?.toLowerCase() ?? '');\n    }\n    return val.name?.toLowerCase().includes(term?.toLowerCase() ?? '')\n  }\n\n  compareWith = (a: autocompleteItem, b: autocompleteItem) => {\n    const valA = a as any;\n    const valB = b as any;\n\n    if (!a || !b) {\n      return false;\n    }\n\n    if (typeof valA !== 'string' && typeof valB !== 'string') {\n      return valA?.name === valB?.name\n        || valA?.uuid === valB?.uuid;\n    }\n\n    if (typeof valA === 'string' && typeof valB !== 'string') {\n      return valA === valB?.name\n        || valA === valB?.uuid;\n    }\n\n    if (typeof valA !== 'string' && typeof valB === 'string') {\n      return valA?.name === valB\n        || valA?.uuid === valB;\n    }\n\n    return false;\n  }\n\n  writeValue(value: unknown): void {\n    this.change(value);\n    this.selectComponent()!.searchTerm = '';\n  }\n\n  change(value: unknown) {\n    this.value = value;\n    this.onChange(this.value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeInput(value: unknown) {\n    this.change(value);\n  }\n\n  onChangeSelect(value: unknown) {\n    const val = typeof value === 'string' ? value : (value as any)?.[this.key()];\n    this.change(val);\n    this.onSelected.emit(val);\n  }\n\n  onSearch(event: { term: string, items: unknown[] }) {\n    if (!event.term) {\n      this.writeValue('');\n      return;\n    }\n\n    this._currentSearchTerm = event.term;\n\n    if (!this.noLoad()) {\n      this._onSearch$.next(event);\n    }\n\n    // Устанавливаем текущий запрос как тег, если нет найденных элементов\n    if (event.items.length === 0) {\n      this.loadedList.set([{name: event.term, value: event.term}] as any);\n    } else {\n      this.loadedList.set(event.items as any);\n    }\n\n    // Устанавливаем правильный текст в поиске\n    this.selectComponent()!.searchTerm = this._capitalizeFirstLetter(event.term);\n  }\n\n  onBlur() {\n    const select = this.selectComponent();\n    if (select?.searchTerm) {\n      // Принудительно добавить текущий searchTerm как тег\n      const searchValue = select.searchTerm.trim();\n      if (searchValue) {\n        const tag = {name: searchValue, value: searchValue};\n        this.loadedList.set([tag] as any)// заменить список, если нужно\n        this.change(searchValue);   // обновить модель формы\n        this.onSelected.emit(searchValue); // эмитнуть наружу\n      }\n    }\n  }\n\n  ngOnInit() {\n    this._selectResourcesService.register(this.resource());\n\n    this._onSearch$.asObservable().pipe(\n      debounceTime(300),\n    ).subscribe(event => {\n      this._selectResourcesService.autocomplete(this.resource(), this.key(), event.term);\n    });\n    this._selectResourcesService.registryStream.pipe(\n      switchMap((registry) => {\n        const res = registry.get(this.resource());\n        return res?.stream ?? of([]);\n      }),\n    ).subscribe(items => {\n      this.loadedList.set(items as any);\n      if (this.initialList().length) return;\n      this.initialList.set(items as any);\n    });\n  }\n\n  reload() {\n    // return this._selectResourcesService.load([this.resource()]);\n  }\n\n  focus() {\n    const select = this.selectComponent();\n    if (select) {\n      select.focus();\n    }\n  }\n\n  private _capitalizeFirstLetter(string: string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n}\n","import {Chart, registerables} from '../dist/chart.js';\n\nChart.register(...registerables);\n\nexport * from '../dist/chart.js';\nexport default Chart;\n","import {Component, inject, Input, OnChanges, SimpleChanges, ViewChild} from '@angular/core';\nimport {Chart, ChartConfiguration, ChartDataset} from 'chart.js/auto';\nimport {ChangeLogEntry} from '../../history/changes-log.service';\nimport {ProductFactory} from '../service/product.factory';\nimport {UserCurrencyPipe} from '../../../shared/view/pipes/userCurrency.pipe';\nimport {DecimalPipe} from '@angular/common';\nimport {TranslatePipe, TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-product-changes-chart',\n  template: `\n    <canvas #chartCanvas [hidden]=\"!changes.length\"></canvas>\n\n    @if (!changes.length) {\n      <p class=\"text-muted no-margin\">\n        {{ 'price-change-history.no-changes' | translate }}\n      </p>\n    }\n  `,\n  styles: [`\n    canvas {\n    }\n  `],\n  imports: [\n    TranslatePipe\n  ],\n  providers: [\n    UserCurrencyPipe,\n    DecimalPipe,\n  ]\n})\nexport class ProductChangesChartComponent\n  implements OnChanges {\n  constructor(\n    private _translateService: TranslateService,\n  ) {\n  }\n\n  @Input() changes: ChangeLogEntry[] = [];\n  @ViewChild('chartCanvas') chartCanvas: any;\n  chart: Chart | null = null;\n  readonly pipesDigits = '1.0-4';\n  private _productFactory = inject(ProductFactory);\n  private _decimalPipe = inject(DecimalPipe);\n  private _userCurrencyPipe = inject(UserCurrencyPipe);\n\n  private get _labels() {\n    return {\n      price: this._translateService.instant('price-change-history.chart.price'),\n      amount: this._translateService.instant('price-change-history.chart.amount'),\n      pricePerUnit: this._translateService.instant('price-change-history.chart.price-per-unit'),\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['changes']) {\n      this.buildChart();\n    }\n  }\n\n  private buildChart() {\n    if (this.chart) {\n      this.chart.destroy();\n    }\n\n    // Фильтруем изменения по интересующим полям\n    const priceChanges = this.changes\n      .filter(c => c.entity === 'product' && 'price' in c.newValue);\n    const amountChanges = this.changes\n      .filter(c => c.entity === 'product' && 'amount' in c.newValue);\n    const pricePerUnitChanges = this.changes\n      .filter(c => c.entity === 'product' && c.newValue.price && c.newValue.amount);\n\n    // Подготовка данных\n    const timestamps = Array.from(new Set([\n      ...priceChanges.map(c => c.timestamp),\n      ...amountChanges.map(c => c.timestamp),\n      ...pricePerUnitChanges.map(c => c.timestamp)\n    ])).sort((a, b) => a - b);\n\n    const priceData = timestamps.map(ts => {\n      const entry = priceChanges.find(c => c.timestamp <= ts);\n      return entry ? Number(entry.newValue.price) : null;\n    });\n\n    const amountData = timestamps.map(ts => {\n      const entry = amountChanges.find(c => c.timestamp <= ts);\n      return entry ? Number(entry.newValue.amount) : null;\n    });\n\n    const pricePerUnitData = timestamps.map(ts => {\n      const entry = pricePerUnitChanges.find(c => c.timestamp <= ts);\n      return entry ? this._productFactory.fromRaw(entry.newValue).pricePerUnit : null;\n    });\n\n    const normalizedPrice = this.normalizeArray(priceData);\n    const normalizedAmount = this.normalizeArray(amountData);\n    const normalizedPricePerUnit = this.normalizeArray(pricePerUnitData);\n    const labelPrice = this._labels.price;\n    const labelAmount = this._labels.amount;\n    const labelPricePerUnit = this._labels.pricePerUnit;\n\n    const datasets: ChartDataset<'line'>[] = [\n      {\n        label: labelPrice,\n        data: normalizedPrice,\n        borderColor: '#ea5454',\n        pointStyle: 'circle',\n        pointRadius: 5,\n        pointBackgroundColor: '#ea5454',\n        pointBorderColor: 'white',\n        fill: false,\n        tension: 0.4,\n        yAxisID: 'yPrice'\n      },\n      {\n        label: labelAmount,\n        data: normalizedAmount,\n        borderColor: '#6874e4',\n        pointStyle: 'triangle',\n        pointRadius: 5,\n        pointBackgroundColor: '#6874e4',\n        pointBorderColor: 'white',\n        fill: false,\n        tension: 0.4,\n        yAxisID: 'yAmount'\n      },\n      {\n        label: labelPricePerUnit,\n        data: normalizedPricePerUnit,\n        borderColor: '#3a9747',\n        pointStyle: 'rectRot',\n        pointRadius: 5,\n        pointBackgroundColor: '#3a9747',\n        pointBorderColor: 'white',\n        fill: false,\n        tension: 0.4,\n        yAxisID: 'yPrice'\n      },\n    ];\n\n    const config: ChartConfiguration<'line'> = {\n      type: 'line',\n      data: {\n        labels: timestamps.map(ts => new Date(ts).toLocaleString()),\n        datasets,\n      },\n      options: {\n        animation: false,\n        responsive: true,\n        interaction: {\n          intersect: false\n        },\n        plugins: {\n          legend: {display: true},\n          tooltip: {\n            callbacks: {\n              label: (context) => {\n                const index = context.dataIndex!;\n                switch (context.dataset.label) {\n                  case labelPrice:\n                    return `${labelPrice}: ${this._decimalPipe.transform(priceData[index], this.pipesDigits)}`;\n                  case labelAmount:\n                    return `${labelAmount}: ${this._decimalPipe.transform(amountData[index], this.pipesDigits)}`;\n                  case labelPricePerUnit:\n                    return `${labelPricePerUnit}: ${this._userCurrencyPipe.transform(pricePerUnitData[index] ?? '', this.pipesDigits)}`;\n                  default:\n                    return '';\n                }\n              }\n            }\n          }\n        },\n        scales: {\n          x: {\n            title: {display: false},\n            ticks: {\n              display: false // убираем все подписи на оси X\n            },\n            grid: {\n              drawTicks: true, // можно оставить только засечки\n              tickLength: 8\n            }\n          },\n          yAmount: {\n            type: 'linear',\n            position: 'left',\n            title: {display: false},\n            ticks: {\n              display: false // убираем все подписи на оси Y\n            },\n          },\n          yPrice: {\n            type: 'linear',\n            ticks: {\n              display: false // убираем все подписи на оси Y\n            },\n            position: 'right',\n            title: {display: false},\n            grid: {drawOnChartArea: false} // чтобы сетка не мешала\n          }\n        }\n      }\n    };\n\n    this.chart = new Chart(this.chartCanvas.nativeElement, config);\n  }\n\n\n  private normalizeArray(arr: (number | null)[]): Array<number | null> {\n    const valid = arr.filter(v => v !== null) as number[];\n    if (valid.length === 0) return arr.map(() => 0);\n    const min = Math.min(...valid);\n    const max = Math.max(...valid);\n    const range = max - min || 1;\n    return arr.map(v => v === null ? null : (v - min) / range);\n  }\n}\n","import {Component, computed, inject, input, signal, viewChild} from '@angular/core';\nimport {DialogComponent} from '../../../shared/view/ui/dialogs/dialog.component';\nimport {ProductsRepository} from '../service/products.repository';\nimport {NotificationsService} from '../../../shared/service/services';\nimport {errorHandler} from '../../../shared/helpers';\nimport {DatePipe, NgClass} from '@angular/common';\nimport {Product} from '../service/Product';\nimport {ProductFactory} from '../service/product.factory';\nimport {ProductChangesChartComponent} from './price-chnages-chart.component';\nimport {ChangeLogEntry} from '../../history/changes-log.service';\nimport {TitleComponent} from '../../../shared/view/layout/title.component';\nimport {FlexColumnComponent} from '../../../shared/view/layout/flex-column.component';\nimport {TranslateDirective, TranslatePipe} from '@ngx-translate/core';\nimport {UnitStringPipe} from '../../../shared/view/pipes/unitString.pipe';\nimport {UserCurrencyPipe} from '../../../shared/view/pipes/userCurrency.pipe';\nimport {TableCardComponent} from '../../../shared/view/ui/card/table-card.component';\n\nexport interface PriceChange {\n  timestamp: number\n  isIncrease: boolean | null\n  isAmountChange?: boolean\n  oldProduct: Product\n  newProduct: Product\n}\n\n@Component({\n  selector: 'lg-price-changes',\n  host: {\n    class: 'lg-price-changes'\n  },\n  template: `\n    <lg-dialog [showCancelButton]=\"false\"\n               [showConfirmButton]=\"false\">\n      <lg-flex-column>\n        <lg-flex-column [size]=\"'small'\">\n          <lg-title [level]=\"2\">\n            {{ 'price-change-history.title' | translate }}\n          </lg-title>\n          <p class=\"text-muted no-margin\">\n            {{ 'price-change-history.description' | translate }}\n          </p>\n        </lg-flex-column>\n\n        <lg-flex-column [size]=\"'medium'\">\n          <lg-product-changes-chart [changes]=\"changesEntries()\"></lg-product-changes-chart>\n\n          @if (changes().length) {\n            <lg-table-card [size]=\"'medium'\">\n              <table class=\"lg-price-changes__table\">\n                <colgroup>\n                  <col span=\"1\" style=\"width: 6%;\">\n                  <col span=\"1\" style=\"width: 30%;\">\n                  <col span=\"1\" style=\"width: 4%;\">\n                  <col span=\"1\" style=\"width: 30%;\">\n                  <col span=\"1\" style=\"width: 30%;\">\n                </colgroup>\n                <tbody>\n                  @for (change of changes(); track change; ) {\n                    <tr>\n                      <td class=\"text-small text-muted text-no-wrap\">\n                        {{ change.timestamp | date }}<br>\n                        {{ change.timestamp | date:'HH:mm' }}\n                      </td>\n                      <td class=\"text-center\">\n                        {{ change.oldProduct.price  | userCurrency: pipesDigits() }}\n                        @if (change.isAmountChange) {\n                          <div class=\"text-small text-muted\">\n                            {{ change.oldProduct.amount }}\n                            <span [translateParams]=\"{unit: change.oldProduct.unit | unitString | translate}\"\n                                  [translate]=\"'per-unit.label'\"></span>\n                          </div>\n                        }\n                      </td>\n                      <td class=\"text-center\">→</td>\n                      <td class=\"text-center\">\n                        {{ change.newProduct.price  | userCurrency: pipesDigits() }}\n                        @if (change.isAmountChange) {\n                          <div class=\"text-small text-muted\">\n                            {{ change.newProduct.amount }}\n                            <span [translateParams]=\"{unit: change.newProduct.unit | unitString | translate}\"\n                                  [translate]=\"'per-unit.label'\"></span>\n                          </div>\n                        }\n                      </td>\n                      <td [class]=\"[change.isIncrease ? 'text-danger' : 'text-success','text-center']\">\n                        {{ change.newProduct.pricePerUnit | userCurrency: pipesDigits() }}\n                        <span [translateParams]=\"{unit: change.newProduct.unit | unitString | translate}\"\n                              [translate]=\"'per-unit.label'\"></span>\n                      </td>\n                    </tr>\n                  }</tbody>\n              </table>\n            </lg-table-card>\n          }\n        </lg-flex-column>\n      </lg-flex-column>\n    </lg-dialog>\n  `,\n  imports: [\n    DialogComponent,\n    DatePipe,\n    NgClass,\n    ProductChangesChartComponent,\n    TitleComponent,\n    FlexColumnComponent,\n    TranslatePipe,\n    UnitStringPipe,\n    UserCurrencyPipe,\n    TranslateDirective,\n    TableCardComponent\n  ],\n  styles: [`\n    :host {\n      display: block;\n    }\n  `]\n})\nexport class PriceChangesComponent {\n  constructor() {\n  }\n\n  changes = signal<PriceChange[]>([]);\n  changesEntries = signal<ChangeLogEntry[]>([]);\n  uuid = input<string>();\n  dialog = viewChild(DialogComponent);\n  readonly pipesDigits = computed(() => `1.0-4`);\n  private readonly _productsRepository = inject(ProductsRepository);\n  private readonly _productFactory = inject(ProductFactory);\n  private readonly _notificationsService = inject(NotificationsService);\n\n  open() {\n    if (!this.uuid()) {\n      throw new Error('UUID is required to load price changes');\n    }\n    this._loadChanges(this.uuid()!);\n    this.dialog()?.open();\n  }\n\n  close() {\n    this.dialog()?.close();\n  }\n\n  private _loadChanges(\n    uuid: string,\n  ) {\n    this._productsRepository.getChanges(uuid).then(changes => {\n      this.changesEntries.set(changes);\n      this.changes.set(changes.map(change => ({\n        timestamp: change.timestamp,\n        isIncrease: change.oldValue && change.newValue\n          ? change.newValue.price > change.oldValue.price\n          : null,\n        oldProduct: this._productFactory.fromRaw(change.oldValue),\n        newProduct: this._productFactory.fromRaw(change.newValue),\n        isAmountChange: change.oldValue && change.newValue\n          ? change.newValue.amount !== change.oldValue.amount\n          : false,\n      })));\n    }).catch(err => {\n      this._notificationsService.error(errorHandler(err));\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  computed,\n  effect,\n  inject,\n  input,\n  OnInit,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\n\nimport {FlexColumnComponent} from '../../../../shared/view/layout/flex-column.component';\nimport {ProductsRepository} from '../../service/products.repository';\nimport {SelectResourcesService} from '../../../../shared/service/services/select-resources.service';\nimport {Router} from '@angular/router';\nimport {MultiselectComponent} from '../../../controls/form/multiselect.component';\nimport {NumberInputComponent} from '../../../controls/form/number-input.component';\nimport {AmountWidgetsComponent} from '../../../widgets/amount-widgets.component';\nimport {ParseMathDirective} from '../../../../shared/view/directives/parse-math.directive';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {ChipsListComponent} from '../../../controls/form/chips-list.component';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {AutocompleteComponent} from '../../../controls/form/autocomplete.component';\nimport {Product} from '../../service/Product';\nimport {hasMicroPrice, productToFormValue} from '../../../../shared/helpers/product.helpers';\nimport {debounceTime} from 'rxjs';\nimport {TranslateDirective, TranslatePipe} from '@ngx-translate/core';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {MatIcon} from '@angular/material/icon';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {WidthDirective} from '../../../../shared/view/directives/width.directive';\nimport {UnitSwitcherComponent} from '../../../../shared/view/ui/unit-switcher.component';\nimport {SETTINGS} from '../../../settings/service/providers/settings.token';\nimport {CurrencySymbolPipe} from '../../../../shared/view/pipes/currency-symbol.pipe';\nimport {smaller} from 'mathjs';\nimport {InputComponent} from '../../../controls/form/input.component';\nimport {ControlExtraTemplateDirective} from \"../../../controls/form/control-extra-template.directive\";\nimport {ControlComponent} from '../../../controls/form/control-item/control.component';\nimport {UnitValue} from \"../../../../shared/view/const/units.const\";\nimport {ReadonlyControlComponent} from '../../../controls/form/readonly-control.component';\nimport {UnitStringPipe} from '../../../../shared/view/pipes/unitString.pipe';\nimport {ControlLabelTemplateDirective} from '../../../controls/form/control-item/control-label-template.directive';\nimport {DecimalPipe} from '@angular/common';\nimport {TextareaComponent} from '../../../controls/form/textarea.component';\nimport {SettingsKeysConst} from '../../../settings/const/settings-keys.const';\nimport {SettingsService} from '../../../settings/service/services/settings.service';\nimport {errorHandler} from '../../../../shared/helpers';\nimport {PriceChangesComponent} from '../price-changes.component';\n\n\n@Component({\n  selector: 'lg-add-product-form',\n  templateUrl: './add-product-form.component.html',\n  imports: [\n    ReactiveFormsModule,\n    FlexColumnComponent,\n    MultiselectComponent,\n    NumberInputComponent,\n    AmountWidgetsComponent,\n    ParseMathDirective,\n    FlexRowComponent,\n    ExpandDirective,\n    ChipsListComponent,\n    AutocompleteComponent,\n    TranslatePipe,\n    CardComponent,\n    MatIcon,\n    ButtonComponent,\n    WidthDirective,\n    UnitSwitcherComponent,\n    CurrencySymbolPipe,\n    InputComponent,\n    ControlExtraTemplateDirective,\n    ControlComponent,\n    ReadonlyControlComponent,\n    UnitStringPipe,\n    ControlLabelTemplateDirective,\n    TranslateDirective,\n    DecimalPipe,\n    TextareaComponent,\n    PriceChangesComponent,\n  ],\n  styles: [\n    `\n      lg-eggs-widget {\n        min-width: 300px;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n\n})\nexport class AddProductFormComponent\n  implements OnInit,\n    AfterViewInit {\n  constructor(\n    public _productsRepository: ProductsRepository,\n    public _selectResourcesService: SelectResourcesService,\n    private _router: Router,\n    private _notificationsService: NotificationsService,\n    private _settingsService: SettingsService,\n  ) {\n  }\n\n  readonly precisions = computed(() => this._settingsService.settingsSignal()?.getSetting(SettingsKeysConst.pricePrecision)?.data ?? 2);\n  readonly pipesDigits = computed(() => `1.0-${this.precisions()}`);\n  form = new FormGroup({\n    name: new FormControl<string | null>(null, Validators.required),\n    amount: new FormControl<number | null>(null, Validators.required),\n    price: new FormControl<number | null>(null, Validators.required),\n    unit: new FormControl('gram'),\n    source: new FormControl<string | null>(null),\n    brand: new FormControl<string | null>(null),\n    notes: new FormControl<string | null>(null),\n    category_id: new FormControl<any>(null),\n  });\n  userSettings = inject(SETTINGS)\n  product = input<Product | null>(null);\n  readonly hasMicroPrice = computed(() => {\n    return hasMicroPrice(this.product()?.pricePerUnit ?? 0)\n  });\n  editMode = input(false);\n  topCategories = signal<{\n    label: string\n    value: string\n    color: string\n  }[]>([]);\n  topSources = signal<any[]>([]);\n  topBrands = signal<any[]>([]);\n  nameField = viewChild<InputComponent>('nameField');\n  amountField = viewChild<NumberInputComponent>('amountField');\n  priceField = viewChild<NumberInputComponent>('priceField');\n  protected readonly smaller = smaller;\n  protected readonly UnitValue = UnitValue;\n  private productEffect = effect(() => {\n    if (!this.product() || this.form.dirty) {\n      return;\n    }\n    this.form.reset(productToFormValue(this.product()!));\n    this.form.markAsPristine();\n  });\n\n  private get _defFormValue() {\n    return {\n      name: null,\n      amount: null,\n      price: null,\n      source: null,\n      brand: null,\n      notes: null,\n      category_id: null,\n      unit: 'gram',\n    };\n  }\n\n  private get _formValid() {\n    return this.form.valid;\n  }\n\n  eggsChanged(event: any) {\n    this.form.patchValue({\n      amount: event\n    });\n  }\n\n  ngOnInit() {\n    this._loadUsingHistory();\n    this.form.valueChanges.pipe(\n      debounceTime(100),\n    ).subscribe(values => {\n      if (!this.form.dirty) {\n        return\n      }\n      this.product()?.update(values);\n    })\n  }\n\n  resetForm(\n    value?: Product\n  ) {\n    this.form.reset(value ? productToFormValue(value) : this._defFormValue);\n    this.form.markAsPristine();\n    this._loadUsingHistory();\n  }\n\n  validateForm() {\n    if (!this._formValid) {\n      this._notificationsService.error(this._notificationsService.parseFormErrors(this.form).join(', '));\n      return false;\n    }\n    return true\n  }\n\n  ngAfterViewInit() {\n    this._selectResourcesService.load().then(resources => {\n      this._focusFirstEmptyControl();\n      this.form.markAsPristine()\n    }).catch(err => {\n      this._notificationsService.error(errorHandler(err));\n    });\n  }\n\n  private _focusFirstEmptyControl() {\n    if (this.editMode()) {\n      return\n    }\n\n    if (!this.form.value.name?.length) {\n      this.nameField()!.focus();\n    } else if (!this.form.value.amount) {\n      this.amountField()!.focus();\n    } else if (!this.form.value.price) {\n      this.priceField()!.focus();\n    } else {\n      this.nameField()!.focus();\n    }\n  }\n\n  private _loadUsingHistory() {\n    this._productsRepository.getTopCategories().then(categories => {\n      this.topCategories.set(categories.map(category => ({\n        label: category.name,\n        value: category.uuid ?? '',\n        color: category.ownColor,\n      })));\n    });\n\n    this._productsRepository.getTopSources().then(sources => {\n      this.topSources.set(sources.map(source => ({\n        label: source,\n        value: source,\n      })));\n    });\n\n    this._productsRepository.getTopBrands().then(brands => {\n      this.topBrands.set(brands.map(brand => ({\n        label: brand,\n        value: brand,\n      })));\n    });\n  }\n}\n","<form [formGroup]=\"form\">\n  <lg-flex-column>\n    <lg-card>\n      <lg-flex-column>\n        <lg-control [label]=\"'product.form.name.placeholder'|translate\">\n          <lg-input #nameField\n                    formControlName=\"name\"\n                    placeholder=\"\"></lg-input>\n        </lg-control>\n\n        <lg-flex-row [center]=\"true\" [mobileMode]=\"true\">\n          <lg-control\n            [label]=\"'product.form.amount.placeholder'|translate:{unit:('unit.long.'+(form.value.unit || UnitValue.GRAM)|translate)}\"\n            lgExpand>\n            <lg-number-input #amountField\n                             (onInputChange)=\"priceField.focus()\"\n                             formControlName=\"amount\"\n                             lgParseMath\n                             placeholder=\"\">\n              <ng-template lgExtraTpl place=\"after\">\n                <lg-flex-row [center]=\"true\" [size]=\"'small'\">\n                  <lg-amount-widgets (eggsChanged)=\"eggsChanged($event)\"></lg-amount-widgets>\n\n                  <lg-unit-switcher formControlName=\"unit\">\n                  </lg-unit-switcher>\n                </lg-flex-row>\n              </ng-template>\n            </lg-number-input>\n          </lg-control>\n\n          <lg-control [label]=\"'product.form.price.placeholder'|translate:{currency:'EUR'}\"\n                      lgWidth=\"40%\">\n            <lg-number-input #priceField\n                             formControlName=\"price\"\n                             lgParseMath\n                             placeholder=\"\">\n              <ng-template lgExtraTpl place=\"after\">\n                <span>{{ userSettings()['currency']|currencySymbol }}</span>\n              </ng-template>\n            </lg-number-input>\n          </lg-control>\n\n          <lg-control lgWidth=\"40%\">\n            <ng-template lgControlLabelTemplate>\n              <span>{{ userSettings()['currency']|currencySymbol }}</span>\n              <span [translateParams]=\"{unit:product()?.unit | unitString | translate}\"\n                    [translate]=\"'per-unit.label'\"></span>\n            </ng-template>\n\n            <lg-readonly-control [placeholder]=\"''\"\n                                 [value]=\"hasMicroPrice() ? ('micro-amount'|translate) : (product()?.pricePerUnit | number:pipesDigits())\">\n              <lg-button (click)=\"priceChangesComponent.open()\"\n                         [flat]=\"true\"\n                         [icon]=\"true\"\n                         [style]=\"'success'\"\n                         ngProjectAs=\"after\">\n                <mat-icon aria-hidden=\"false\" fontIcon=\"bar_chart\"></mat-icon>\n              </lg-button>\n            </lg-readonly-control>\n          </lg-control>\n        </lg-flex-row>\n      </lg-flex-column>\n    </lg-card>\n\n    <lg-price-changes #priceChangesComponent [uuid]=\"product()?.uuid\"></lg-price-changes>\n\n    <lg-flex-row [equal]=\"true\" [mobileMode]=\"true\" [top]=\"true\" style=\"--control-bg: var(--hr-bg-strong)\">\n      <lg-control [label]=\"'product.form.source.placeholder'|translate\">\n        <lg-flex-column size=\"small\">\n          <lg-autocomplete #sourceInput\n                           (onSelected)=\"sourceChips.clearSelected()\"\n                           [noLoad]=\"true\"\n                           [resource]=\"'sources'\"\n                           appendTo=\"body\"\n                           formControlName=\"source\"\n                           placeholder=\"\"></lg-autocomplete>\n          <div [hidden]=\"!topSources().length\">\n            <lg-chips-list #sourceChips [control]=\"sourceInput\" [items]=\"topSources()\"></lg-chips-list>\n          </div>\n        </lg-flex-column>\n      </lg-control>\n\n      <lg-control [label]=\"'product.form.brand.placeholder'|translate\">\n        <lg-flex-column size=\"small\">\n          <lg-autocomplete #brandInput\n                           (onSelected)=\"brandChips.clearSelected()\"\n                           [noLoad]=\"true\"\n                           [resource]=\"'brands'\"\n                           appendTo=\"body\"\n                           formControlName=\"brand\"\n                           placeholder=\"\"></lg-autocomplete>\n          <div [hidden]=\"!topBrands().length\">\n            <lg-chips-list #brandChips [control]=\"brandInput\" [items]=\"topBrands()\"></lg-chips-list>\n          </div>\n        </lg-flex-column>\n      </lg-control>\n    </lg-flex-row>\n\n    <lg-flex-row [equal]=\"true\" [mobileMode]=\"true\" [top]=\"true\" style=\"--control-bg: var(--hr-bg-strong)\">\n      <lg-control [label]=\"'product.form.notes.placeholder'|translate\">\n        <lg-textarea [rows]=\"3\"\n                     formControlName=\"notes\"\n                     placeholder=\"\"></lg-textarea>\n      </lg-control>\n\n      <lg-control [label]=\"'product.form.category_id.placeholder'|translate\">\n        <lg-flex-column size=\"small\">\n          <lg-multiselect #categorySelect\n                          [resource]=\"'product-categories'\"\n                          appendTo=\"body\"\n                          formControlName=\"category_id\"\n                          placeholder=\"\">\n          </lg-multiselect>\n\n          @if (topCategories().length) {\n            <lg-chips-list [control]=\"categorySelect\" [items]=\"topCategories()\"></lg-chips-list>\n          }\n        </lg-flex-column>\n      </lg-control>\n    </lg-flex-row>\n  </lg-flex-column>\n</form>\n","import {AfterViewInit, Component, computed, inject, OnInit, signal, viewChild} from '@angular/core';\n\nimport {TitleComponent} from '../../../../shared/view/layout/title.component';\nimport {AddProductFormComponent} from './add-product-form.component';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {DraftForm} from '../../../../shared/service/services/draft-forms.service';\nimport {ProductsRepository} from '../../service/products.repository';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {combineLatest, debounceTime, take} from 'rxjs';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {ShrinkDirective} from '../../../../shared/view/directives/shrink.directive';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {CurrencyPipe} from '@angular/common';\nimport {Product} from '../../service/Product';\nimport {ProductDTO} from '../../service/Product.scheme';\nimport {ContainerComponent} from '../../../../shared/view/layout/container.component';\nimport {TranslatePipe, TranslateService} from '@ngx-translate/core';\nimport {FlexColumnComponent} from '../../../../shared/view/layout/flex-column.component';\nimport {\n  InlineSeparatedGroupComponent,\n  InlineSeparatedGroupDirective\n} from '../../../../shared/view/ui/inline-separated-group.component';\nimport {ROUTER_MANAGER} from '../../../../shared/service/providers/router-manager.provider';\nimport {AnalyticsService} from '../../../../shared/service/services/analytics.service';\nimport {SelfStartDirective} from '../../../../shared/view/directives/self-start.directive';\nimport {ControlsBarComponent} from '../../../../shared/view/ui/controls-bar/controls-bar.component';\nimport {MatIcon} from '@angular/material/icon';\nimport {errorHandler} from '../../../../shared/helpers';\nimport {\n  DeleteConfirmationService\n} from '../../../../shared/view/ui/delete-confirmation-popover/delete-confirmation.service';\nimport {\n  DeleteConfirmationPopoverComponent\n} from '../../../../shared/view/ui/delete-confirmation-popover/delete-confirmation-popover.component';\n\n@Component({\n  selector: 'lg-add-product',\n  standalone: true,\n  imports: [\n    ContainerComponent,\n    TitleComponent,\n    AddProductFormComponent,\n    FlexRowComponent,\n    FadeInComponent,\n    ButtonComponent,\n    ShrinkDirective,\n    TimeAgoPipe,\n    TranslatePipe,\n    FlexColumnComponent,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective,\n    SelfStartDirective,\n    ControlsBarComponent,\n    MatIcon,\n    DeleteConfirmationPopoverComponent,\n  ],\n  template: `\n    @if (editMode()) {\n      <lg-controls-bar>\n        <lg-button [icon]=\"true\"\n                   [link]=\"'/products/add'\"\n                   [size]=\"'medium'\"\n                   [style]=\"'primary'\">\n          <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n        </lg-button>\n      </lg-controls-bar>\n    }\n\n    <lg-fade-in>\n      <lg-container>\n        <lg-flex-column size=\"medium\">\n          <lg-flex-row [center]=\"true\" [mobileMode]=\"true\">\n            @if ((product()?.uuid && !draftRef()) || (draftRef() && draftByExistingProduct())) {\n              <lg-title lgSelfStart>\n                {{ product()?.name }}\n              </lg-title>\n            } @else {\n              <lg-title lgSelfStart>\n                {{ 'product.form.title'|translate }}\n              </lg-title>\n            }\n          </lg-flex-row>\n\n          <lg-inline-separated-group>\n            @if (draftRef() && formComponent()?.form?.dirty) {\n              <ng-template lgInlineSeparatedGroup>\n                <lg-fade-in>\n                  <span class=\"text-success\">{{ 'saved-draft-label'|translate }}</span>\n                </lg-fade-in>\n              </ng-template>\n            }\n\n            @if (isDraftRoute()) {\n              <ng-template lgInlineSeparatedGroup>\n                <lg-button lgShrink [style]=\"'danger'\"\n                           [flat]=\"true\"\n                           (click)=\"onRemoveDraft()\">\n                  {{ 'product.form.delete-draft-btn'|translate }}\n                </lg-button>\n              </ng-template>\n            } @else if (product()?.uuid) {\n              <ng-template lgInlineSeparatedGroup>\n                <lg-button lgShrink [style]=\"'danger'\"\n                           [flat]=\"true\"\n                           (click)=\"onDeleteProduct()\">\n                  {{ 'product.form.delete-btn'|translate }}\n                </lg-button>\n              </ng-template>\n            }\n          </lg-inline-separated-group>\n\n          @if (editMode() && product()?.updatedAt) {\n            <small class=\"text-muted text-cursive\">\n              {{ 'edited-at-label'|translate }} {{ product()?.updatedAt | timeAgo }}\n            </small>\n          }\n\n        </lg-flex-column>\n\n        <lg-add-product-form [editMode]=\"editMode()\"\n                             [product]=\"product()\"></lg-add-product-form>\n\n        <lg-flex-row [mobileMode]=\"true\" [relaxed]=\"true\">\n          @if ((product() && !draftRef()) || (draftRef() && draftByExistingProduct())) {\n            <lg-button [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                       lgShrink\n                       [style]=\"'primary'\"\n                       (click)=\"onEditProduct()\">\n              @if (formComponent()?.form?.dirty || draftRef()) {\n                {{ 'product.form.save-btn.edit.active'|translate }}\n              } @else {\n                {{ 'product.form.save-btn.edit.disabled'|translate }}\n              }\n            </lg-button>\n          } @else {\n            <lg-button lgShrink\n                       [style]=\"'primary'\"\n                       [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                       (click)=\"onAddProduct()\">\n              @if (formComponent()?.form?.dirty || draftRef()) {\n                {{ 'product.form.save-btn.add.active'|translate }}\n              } @else {\n                {{ 'product.form.save-btn.add.disabled'|translate }}\n              }\n            </lg-button>\n          }\n\n        </lg-flex-row>\n      </lg-container>\n    </lg-fade-in>\n\n    <lg-delete-confirmation-popover></lg-delete-confirmation-popover>\n  `,\n  styles: [\n    `\n    `\n  ],\n  providers: [\n    CurrencyPipe,\n    DeleteConfirmationService\n  ],\n})\nexport class AddProductComponent\n  implements OnInit, AfterViewInit {\n  constructor(\n    public _router: Router,\n    private _aRoute: ActivatedRoute,\n    private _productsRepository: ProductsRepository,\n    private _notificationsService: NotificationsService,\n    private _analyticsService: AnalyticsService,\n    private _translateService: TranslateService,\n  ) {\n  }\n\n  readonly deleteConfirmationService = inject(DeleteConfirmationService);\n  draftOrProductUUID = signal<string | undefined>(undefined);\n  product = signal<Product | null>(null);\n  formComponent = viewChild<AddProductFormComponent | null>(AddProductFormComponent);\n  draftRef = signal<DraftForm<ProductDTO> | null>(null);\n  draftByExistingProduct = computed(() => {\n    return this.draftRef()!.meta?.['uuid'];\n  });\n  isDraftRoute = signal(false);\n  readonly editMode = computed(() => {\n    return Boolean((this.product()?.uuid && !this.draftRef())\n      || (this.draftRef() && this.draftByExistingProduct()))\n  })\n  private _routerManager = inject(ROUTER_MANAGER);\n\n  ngOnDestroy() {\n  }\n\n  ngOnInit() {\n    combineLatest([\n      this._aRoute.params,\n      this._aRoute.data,\n    ]).pipe(take(1)).subscribe(([params, data]) => {\n      this.draftOrProductUUID.set(params['uuid']);\n      if (data['draft']) {\n        this.draftRef.set(data['draft']);\n        this.product.set(Product.fromRaw(data['draft'].data));\n      } else if (this.draftOrProductUUID()) {\n        this._loadProduct(this.draftOrProductUUID());\n      } else {\n        this.product.set(Product.empty());\n      }\n      this.isDraftRoute.set(!!data['draftRoute']);\n    });\n  }\n\n  ngAfterViewInit() {\n\n    this.formComponent()?.form.valueChanges.pipe(\n      debounceTime(500),\n    ).subscribe((value) => {\n      if (!this.formComponent()!.form.dirty || !this.product()) {\n        return\n      }\n\n      if (this.draftRef()?.uuid) {\n        this._productsRepository.updateDraftProduct(\n          this.draftRef()!.uuid,\n          this.product()!,\n          this.draftRef()!.meta?.['uuid']\n        );\n      } else if (this.product()) {\n        this.draftRef.set(this._productsRepository.saveDraftProduct(\n          this.product()!,\n          this.draftOrProductUUID() ?? ''));\n\n        // if (!this.isDraftRoute()) {\n        //   this._routerManager.replace(['products/draft/' + this.draftRef()!.uuid]);\n        // }\n      }\n    });\n  }\n\n  onAddProduct() {\n    if (!this.formComponent()?.validateForm()\n      || !this.product()) {\n      return;\n    }\n    this._addProduct(this.product()!);\n  }\n\n  onEditProduct() {\n    if (!this.formComponent()?.validateForm()\n      || !this.product()) {\n      return;\n    }\n    this._editProduct(this.product()!);\n  }\n\n  onRemoveDraft() {\n    this._removeDraft();\n    this._routerManager.navigate(['products']);\n  }\n\n  onDeleteProduct() {\n    if (!this.product()?.uuid) {\n      return;\n    }\n\n\n    this.deleteConfirmationService.configure({\n      message: this._translateService.instant('product.form.delete-confirm-message'),\n      onSuccess: () => {\n        this._productsRepository.deleteProduct(this.product()!.uuid!).then(() => {\n          this._notificationsService.success('notifications.product.deleted');\n          this._routerManager.navigate(['products']);\n        }).catch(error => {\n          this._notificationsService.error(errorHandler(error));\n        });\n      },\n      onCancel: () => {\n      }\n    });\n\n  }\n\n  private _addProduct(product: Product) {\n    this._productsRepository.addOne(product).then((newUUID) => {\n      // Track product creation analytics\n      this._analyticsService.trackProductCreated(product.name, {\n        product_uuid: newUUID,\n        price_per_unit: product.pricePerUnit,\n        unit: product.unit,\n        category: product.category_id?.name\n      });\n\n      this.formComponent()?.resetForm();\n      this._notificationsService.success('notifications.product.added');\n      this.product.set(null);\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.replace(['products/edit/' + newUUID]);\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n\n  private _editProduct(product: Product) {\n    if (!this.draftOrProductUUID()) {\n      return;\n    }\n    let productUUID = this.draftRef()?.meta?.['uuid'] ?? this.draftOrProductUUID();\n    this._productsRepository.updateOne(productUUID as string, product).then(() => {\n      this.formComponent()?.resetForm(product);\n      this._notificationsService.success('notifications.product.edited');\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.replace(['products', 'edit', productUUID]);\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n\n  private _removeDraft() {\n    if (!this.draftRef()) {\n      return;\n    }\n    this._productsRepository.removeDraftProduct(this.draftRef()!.uuid)\n    this.draftRef.set(null);\n  }\n\n  private _loadProduct(uuid?: string) {\n    if (!uuid) {\n      return;\n    }\n    this._productsRepository.getOne(uuid, true).then(product => {\n      if (!product) {\n        return;\n      }\n      this.product.set(product);\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n}\n"],"mappings":"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","names":["_c0"],"x_google_ignoreList":[2]}