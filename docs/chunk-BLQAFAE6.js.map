{
  "version": 3,
  "sources": ["src/app/shared/view/ui/tooltip.component.ts", "src/app/features/widgets/amount-widgets.component.ts", "src/app/features/controls/form/autocomplete.component.ts", "src/app/features/products/view/add-product/add-product-form.component.ts", "src/app/features/products/view/add-product/add-product-form.component.html", "src/app/features/products/view/add-product/add-product.component.ts"],
  "sourcesContent": ["import {\n  Component,\n  effect,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  output,\n  Renderer2,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\nimport {PortalComponent} from './portal.component';\n\n@Component({\n  selector: 'lg-tooltip',\n  standalone: true,\n  template: `\n    <div [class.fullscreen]=\"full()\"\n         [ngClass]=\"position()\"\n         [style.--gap.px]=\"gap()\"\n         class=\"tooltip\">\n      <div class=\"tooltip__anchor\">\n        <div (click)=\"toggle($event)\">\n          <ng-content></ng-content>\n        </div>\n        @if (displayed()) {\n          <div class=\"tooltip__content\" #element>\n            <ng-content select=\"content\"></ng-content>\n          </div>\n          <lg-portal [appendTarget]=\"'body'\"\n                     [targetElement]=\"element\"\n                     [wrapClass]=\"'tooltip tooltip--ejected'\">\n          </lg-portal>\n        }\n\n      </div>\n    </div>\n  `,\n  imports: [\n    NgClass,\n    PortalComponent\n  ],\n  styles: [\n\n    `\n      lg-tooltip {\n        flex: 1;\n        display: flex;\n      }\n\n      .tooltip {\n        display: inline-block;\n      }\n\n      .tooltip--ejected {\n\n        .tooltip__content {\n          top: calc(var(--tooltip-y) + 16px);\n          left: calc(var(--tooltip-x) + 16px);\n          position: fixed;\n          z-index: 6;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n        }\n      }\n\n      .tooltip__anchor {\n        position: relative;\n      }\n\n      .tooltip__content {\n        position: absolute;\n        background-color: #ffffff;\n        border-radius: 16px;\n        padding: 16px;\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n        z-index: 100;\n      }\n\n      .tooltip.top .tooltip__content {\n        bottom: calc(100% + var(--gap));\n        right: 50%;\n        transform: translateX(50%);\n      }\n\n      .tooltip.bottom .tooltip__content {\n        bottom: calc(100% + var(--gap));\n        right: 50%;\n        transform: translateX(50%);\n      }\n\n      .tooltip.left .tooltip__content {\n        bottom: 50%;\n        right: calc(100% + var(--gap));\n        transform: translateY(50%);\n      }\n\n      .tooltip.right .tooltip__content {\n        bottom: 50%;\n        left: calc(100% + var(--gap));\n        transform: translateY(-50%);\n      }\n\n\n      .tooltip.fullscreen .tooltip__content {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: #ffffff;\n        border-radius: 0;\n        padding: 32px;\n        transform: none;\n        overflow-y: auto;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\n\nexport class TooltipComponent {\n  constructor() {\n    setInterval(() => {\n      this._calculateBoundaries();\n    }, 500);\n  }\n\n  renderer = inject(Renderer2);\n  gap = input<number>(16);\n  displayed = signal<boolean>(false);\n  full = input<boolean>(false);\n  position = input<\n    'top' | 'bottom' | 'left' | 'right'\n  >('top');\n  element = viewChild<ElementRef>('element');\n  onClose = output<void>();\n  coordinates = signal<{ x: number, y: number }>({x: 0, y: 0});\n  maxWidth = signal<number>(0);\n  coordinatesEffect = effect(() => {\n\n    // [style.--tooltip-x]=\"coordinates().x\"\n    // [style.--tooltip-y]=\"coordinates().y\"\n\n    this.renderer.setProperty(document.body, 'style',\n      `\n      --tooltip-x: ${this.coordinates().x}px;\n      --tooltip-y: ${this.coordinates().y}px;\n      --tooltip-width: ${this.maxWidth()}px;\n      `);\n  });\n\n  toggle(\n    event?: MouseEvent,\n  ) {\n    this.displayed.set(!this.displayed());\n    if (!this.displayed()) {\n      this.onClose.emit();\n    }\n\n    if (event) {\n      event.stopPropagation();\n      const [x, y] = [event.clientX, event.clientY];\n\n      console.log('x', x, 'y', y);\n      setTimeout(() => {\n        this.coordinates.set({x, y});\n        this._calculateBoundaries();\n      })\n    }\n  }\n\n  close() {\n    this.displayed.set(false);\n    this.onClose.emit();\n  }\n\n  @HostListener('document:click', ['$event'])\n  onClick(event: MouseEvent) {\n    if (event.target instanceof HTMLElement) {\n      if (!event.target.closest('.tooltip')) {\n        this.displayed.set(false);\n        this.onClose.emit();\n      }\n    }\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  onKeydown(event: KeyboardEvent) {\n    if (event.key === 'Escape') {\n      this.displayed.set(false);\n      this.onClose.emit();\n    }\n  }\n\n  // hide on scroll\n  @HostListener('window:scroll', ['$event'])\n  onScroll(event: Event) {\n    this.displayed.set(false);\n    this.onClose.emit();\n  }\n\n  private _calculateBoundaries() {\n    const tooltip = this.element()?.nativeElement;\n    if (!tooltip) return;\n\n    const tooltipRect = tooltip.getBoundingClientRect();\n    const tooltipWidth = tooltipRect.width;\n    const tooltipHeight = tooltipRect.height;\n    const screenWidth = window.innerWidth;\n    const screenHeight = window.innerHeight;\n    const offset = 16;\n\n    let newX = this.coordinates().x;\n    let newY = this.coordinates().y;\n    console.log({\n      newX, newY, tooltipWidth, tooltipHeight, screenWidth, screenHeight\n    })\n\n    if (newX + tooltipWidth + offset > screenWidth) {\n      newX = screenWidth - tooltipWidth - offset;\n    }\n    if (newY + tooltipHeight + offset > screenHeight) {\n      newY = screenHeight - tooltipHeight - offset;\n    }\n    if (newX - tooltipWidth - offset < 0) {\n      newX = offset;\n    }\n    if (newY - tooltipHeight - offset < 0) {\n      newY = offset;\n    }\n\n    this.coordinates.set({x: newX, y: newY});\n  }\n}\n", "import {Component, output, signal} from '@angular/core';\nimport {EggsWidgetComponent} from './eggs-widget/eggs-widget.component';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n@Component({\n  selector: 'lg-amount-widgets',\n  standalone: true,\n  template: `\n      <div [class.selected]=\"selectedWidget() != null\"\n           class=\"amount-widgets\">\n          <div class=\"amount-widgets__buttons\">\n              <button (click)=\"onWidgetSelect('eggs')\"\n                      class=\"amount-widgets__button\">{{ 'widgets.eggs.title' | translate }}\n              </button>\n          </div>\n          @if (selectedWidget() === 'eggs') {\n              <div class=\"amount-widgets__wrapper\">\n                  <lg-eggs-widget (changed)=\"onEggsChanged($event)\"></lg-eggs-widget>\n              </div>\n          }\n      </div>\n  `,\n  imports: [\n    EggsWidgetComponent,\n    TranslatePipe\n  ],\n  styles: [\n    `\n      .amount-widgets {\n        display: flex;\n        gap: 16px;\n        flex-direction: column;\n      }\n\n      .amount-widgets__input {\n        flex: 1;\n      }\n\n      .amount-widgets__buttons {\n        display: flex;\n        gap: 16px;\n        flex-wrap: wrap;\n        padding: 16px;\n        background-color: #fafafa;\n        border-radius: 12px;\n        margin: -16px;\n      }\n\n      .amount-widgets.selected .amount-widgets__buttons {\n        margin-bottom: 0;\n      }\n\n      .amount-widgets__button {\n        display: flex;\n        padding: 8px 16px;\n        border-radius: 16px;\n        background-color: #e5de38;\n        appearance: none;\n        border: none;\n        font-family: inherit;\n        font-size: inherit;\n      }\n    `\n  ]\n})\n\nexport class AmountWidgetsComponent {\n  constructor() {\n  }\n\n  eggsChanged = output<number | null>();\n  selectedWidget = signal<string | null>(null);\n  onWidgetSelect(event: any) {\n    this.selectedWidget.set(event);\n  }\n\n\n  onEggsChanged(event: any) {\n    if (!event) return;\n    this.eggsChanged.emit(event);\n  }\n}\n", "import {\n  Component,\n  forwardRef,\n  Input,\n  input,\n  OnInit,\n  Optional,\n  output,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  NgLabelTemplateDirective,\n  NgOptionTemplateDirective,\n  NgSelectComponent,\n  NgTagTemplateDirective\n} from '@ng-select/ng-select';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {SelectResourcesService} from '../../../shared/service/services/select-resources.service';\nimport {debounceTime, of, Subject, switchMap} from 'rxjs';\nimport {MultiselectItem} from './multiselect.component';\nimport {TranslatePipe} from '@ngx-translate/core';\n\n\nexport interface autocompleteItem {\n  value: unknown\n}\n\n@Component({\n  selector: 'lg-autocomplete',\n  standalone: true,\n  template: `\n    <div class=\"autocomplete\">\n      <ng-select (blur)=\"onBlur()\"\n                 (change)=\"onChangeSelect($event)\"\n                 (search)=\"onSearch($event)\"\n                 [addTag]=\"true\"\n                 [bindValue]=\"key()\"\n                 [appendTo]=\"appendTo()\"\n                 [compareWith]=\"compareWith\"\n                 [editableSearchTerm]=\"true\"\n                 [items]=\"loadedList()\"\n                 [multiple]=\"multi()\"\n                 [ngModel]=\"value\"\n                 [placeholder]=\"placeholder\"\n                 [searchFn]=\"searchFn\"\n                 bindLabel=\"name\"\n                 [notFoundText]=\"'search.not-found' | translate\">\n        <ng-template let-item=\"item\" ng-label-tmp>\n          {{ item?.name ?? item?.value ?? item }}\n        </ng-template>\n        <ng-template let-item=\"item\" ng-option-tmp>\n          {{ item?.name ?? item?.value ?? item }}\n        </ng-template>\n        <ng-template let-searchTerm=\"searchTerm\" ng-tag-tmp>\n          {{ searchTerm }}\n        </ng-template>\n      </ng-select>\n    </div>\n  `,\n  imports: [\n    NgSelectComponent,\n    FormsModule,\n    NgOptionTemplateDirective,\n    NgLabelTemplateDirective,\n    NgTagTemplateDirective,\n    TranslatePipe\n  ],\n  styles: [\n    `\n      lg-autocomplete {\n        display: flex;\n        flex: 1;\n        min-width: 150px;\n      }\n\n      .autocomplete {\n        flex: 1;\n        width: 100%;\n\n        .ng-select.ng-select-single .ng-select-container {\n          height: 51px;\n        }\n\n        .ng-select.ng-select-focused .ng-select-container {\n          outline: none;\n          box-shadow: var(--focus-shadow);\n          border-radius: 12px;\n        }\n\n        .ng-select .ng-select-container {\n          border: none;\n          border-radius: 12px;\n          background-color: var(--control-bg);\n\n          .ng-input {\n            top: 16px !important;\n            padding-right: 10px !important;\n\n            & > input {\n              color: var(--text);\n              font-family: inherit;\n              font-size: inherit;\n            }\n          }\n        }\n\n        .ng-dropdown-panel {\n          border: none;\n          box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.1);\n          border-radius: 12px;\n          overflow: hidden;\n\n          .ng-option {\n            padding: 16px;\n            border-radius: 12px;\n          }\n        }\n\n        .ng-arrow-wrapper {\n          display: none;\n        }\n\n        .ng-clear-wrapper {\n          display: none;\n        }\n      }\n\n    `\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AutocompleteComponent),\n      multi: true\n    }\n  ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AutocompleteComponent\n  implements ControlValueAccessor, OnInit {\n  constructor(\n    @Optional() private _selectResourcesService: SelectResourcesService,\n  ) {\n  }\n\n  @Input() placeholder = '';\n  noLoad = input<boolean>(false);\n  resource = input<string>('');\n  key = input<string>('');\n  appendTo = input<string>('');\n  strict = input<boolean>(false);\n  multi = input<boolean>(false);\n  loadedList = signal([]);\n  onSelected = output<unknown>();\n  selectComponent = viewChild(NgSelectComponent);\n  value?: unknown = null\n  initialList = signal<unknown[]>([]);\n  private _onSearch$ = new Subject<{\n    term: string\n    items: unknown[]\n  }>();\n  private _currentSearchTerm: string | null = null;\n\n  onChange: (value: unknown) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  searchFn = (term: string, item: MultiselectItem) => {\n    const val = item as any;\n    if (typeof val === 'string') {\n      return val.toLowerCase().includes(term?.toLowerCase() ?? '');\n    }\n    return val.name?.toLowerCase().includes(term?.toLowerCase() ?? '')\n  }\n\n  compareWith = (a: autocompleteItem, b: autocompleteItem) => {\n    const valA = a as any;\n    const valB = b as any;\n\n    if (!a || !b) {\n      return false;\n    }\n\n    if (typeof valA !== 'string' && typeof valB !== 'string') {\n      return valA?.name === valB?.name\n        || valA?.uuid === valB?.uuid;\n    }\n\n    if (typeof valA === 'string' && typeof valB !== 'string') {\n      return valA === valB?.name\n        || valA === valB?.uuid;\n    }\n\n    if (typeof valA !== 'string' && typeof valB === 'string') {\n      return valA?.name === valB\n        || valA?.uuid === valB;\n    }\n\n    return false;\n  }\n\n  writeValue(value: unknown): void {\n    this.change(value);\n    this.selectComponent()!.searchTerm = '';\n  }\n\n  change(value: unknown) {\n    this.value = value;\n    this.onChange(this.value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeInput(value: unknown) {\n    this.change(value);\n  }\n\n  onChangeSelect(value: unknown) {\n    const val = typeof value === 'string' ? value : (value as any)?.[this.key()];\n    this.change(val);\n    this.onSelected.emit(val);\n  }\n\n  onSearch(event: { term: string, items: unknown[] }) {\n    if (!event.term) {\n      this.writeValue('');\n      return;\n    }\n\n    this._currentSearchTerm = event.term;\n\n    if (!this.noLoad()) {\n      this._onSearch$.next(event);\n    }\n\n    // Устанавливаем текущий запрос как тег, если нет найденных элементов\n    if (event.items.length === 0) {\n      this.loadedList.set([{name: event.term, value: event.term}] as any);\n    } else {\n      this.loadedList.set(event.items as any);\n    }\n\n    // Устанавливаем правильный текст в поиске\n    this.selectComponent()!.searchTerm = this._capitalizeFirstLetter(event.term);\n  }\n\n  onBlur() {\n    const select = this.selectComponent();\n    if (select?.searchTerm) {\n      // Принудительно добавить текущий searchTerm как тег\n      const searchValue = select.searchTerm.trim();\n      if (searchValue) {\n        const tag = {name: searchValue, value: searchValue};\n        this.loadedList.set([tag] as any)// заменить список, если нужно\n        this.change(searchValue);   // обновить модель формы\n        this.onSelected.emit(searchValue); // эмитнуть наружу\n      }\n    }\n  }\n\n  ngOnInit() {\n    this._selectResourcesService.register(this.resource());\n\n    this._onSearch$.asObservable().pipe(\n      debounceTime(300),\n    ).subscribe(event => {\n      this._selectResourcesService.autocomplete(this.resource(), this.key(), event.term);\n    });\n    this._selectResourcesService.registryStream.pipe(\n      switchMap((registry) => {\n        const res = registry.get(this.resource());\n        return res?.stream ?? of([]);\n      }),\n    ).subscribe(items => {\n      this.loadedList.set(items as any);\n      if (this.initialList().length) return;\n      this.initialList.set(items as any);\n    });\n  }\n\n  reload() {\n    // return this._selectResourcesService.load([this.resource()]);\n  }\n\n  focus() {\n    const select = this.selectComponent();\n    if (select) {\n      select.focus();\n    }\n  }\n\n  private _capitalizeFirstLetter(string: string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n}\n", "import {\n  AfterViewInit,\n  Component,\n  computed,\n  effect,\n  inject,\n  input,\n  OnInit,\n  signal,\n  viewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {FormControl, FormGroup, ReactiveFormsModule, Validators} from '@angular/forms';\n\nimport {FlexColumnComponent} from '../../../../shared/view/layout/flex-column.component';\nimport {ProductsRepository} from '../../service/products.repository';\nimport {SelectResourcesService} from '../../../../shared/service/services/select-resources.service';\nimport {Router} from '@angular/router';\nimport {MultiselectComponent} from '../../../controls/form/multiselect.component';\nimport {NumberInputComponent} from '../../../controls/form/number-input.component';\nimport {TooltipComponent} from '../../../../shared/view/ui/tooltip.component';\nimport {AmountWidgetsComponent} from '../../../widgets/amount-widgets.component';\nimport {ParseMathDirective} from '../../../../shared/view/directives/parse-math.directive';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {ExpandDirective} from '../../../../shared/view/directives/expand.directive';\nimport {ChipsListComponent} from '../../../controls/form/chips-list.component';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {AutocompleteComponent} from '../../../controls/form/autocomplete.component';\nimport {Product} from '../../service/Product';\nimport {hasMicroPrice, productToFormValue} from '../../../../shared/helpers/product.helpers';\nimport {debounceTime} from 'rxjs';\nimport {TranslateDirective, TranslatePipe} from '@ngx-translate/core';\nimport {CardComponent} from '../../../../shared/view/ui/card/card.component';\nimport {MatIcon} from '@angular/material/icon';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {WidthDirective} from '../../../../shared/view/directives/width.directive';\nimport {UnitSwitcherComponent} from '../../../../shared/view/ui/unit-switcher.component';\nimport {SETTINGS} from '../../../settings/service/providers/settings.token';\nimport {CurrencySymbolPipe} from '../../../../shared/view/pipes/currency-symbol.pipe';\nimport {smaller} from 'mathjs';\nimport {InputComponent} from '../../../controls/form/input.component';\nimport {ControlExtraTemplateDirective} from \"../../../controls/form/control-extra-template.directive\";\nimport {ControlComponent} from '../../../controls/form/control-item/control.component';\nimport {UnitValue} from \"../../../../shared/view/const/units.const\";\nimport {ReadonlyControlComponent} from '../../../controls/form/readonly-control.component';\nimport {UnitStringPipe} from '../../../../shared/view/pipes/unitString.pipe';\nimport {ControlLabelTemplateDirective} from '../../../controls/form/control-item/control-label-template.directive';\nimport {DecimalPipe} from '@angular/common';\nimport {TextareaComponent} from '../../../controls/form/textarea.component';\nimport {SettingsKeysConst} from '../../../settings/const/settings-keys.const';\nimport {SettingsService} from '../../../settings/service/services/settings.service';\n\n\n@Component({\n  selector: 'lg-add-product-form',\n  templateUrl: './add-product-form.component.html',\n  imports: [\n    ReactiveFormsModule,\n    FlexColumnComponent,\n    MultiselectComponent,\n    NumberInputComponent,\n    TooltipComponent,\n    AmountWidgetsComponent,\n    ParseMathDirective,\n    FlexRowComponent,\n    ExpandDirective,\n    ChipsListComponent,\n    AutocompleteComponent,\n    TranslatePipe,\n    CardComponent,\n    MatIcon,\n    ButtonComponent,\n    WidthDirective,\n    UnitSwitcherComponent,\n    CurrencySymbolPipe,\n    InputComponent,\n    ControlExtraTemplateDirective,\n    ControlComponent,\n    ReadonlyControlComponent,\n    UnitStringPipe,\n    ControlLabelTemplateDirective,\n    TranslateDirective,\n    DecimalPipe,\n    TextareaComponent,\n  ],\n  styles: [\n    `\n      lg-eggs-widget {\n        min-width: 300px;\n      }\n    `\n  ],\n  encapsulation: ViewEncapsulation.None,\n\n})\nexport class AddProductFormComponent\n  implements OnInit,\n    AfterViewInit {\n  constructor(\n    public _productsRepository: ProductsRepository,\n    public _selectResourcesService: SelectResourcesService,\n    private _router: Router,\n    private _notificationsService: NotificationsService,\n    private _settingsService: SettingsService,\n  ) {\n  }\n\n  readonly hasMicroPrice = computed(() => {\n    return hasMicroPrice(this.product()?.pricePerUnit ?? 0)\n  });\n  readonly precisions = computed(() => this._settingsService.settingsSignal()?.getSetting(SettingsKeysConst.pricePrecision)?.data ?? 2);\n  readonly pipesDigits = computed(() => `1.0-${this.precisions()}`);\n  form = new FormGroup({\n    name: new FormControl<string | null>(null, Validators.required),\n    amount: new FormControl<number | null>(null, Validators.required),\n    price: new FormControl<number | null>(null, Validators.required),\n    unit: new FormControl('gram'),\n    source: new FormControl<string | null>(null),\n    brand: new FormControl<string | null>(null),\n    notes: new FormControl<string | null>(null),\n    category_id: new FormControl<any>(null),\n  });\n  userSettings = inject(SETTINGS)\n  product = input<Product | null>(null);\n  topCategories = signal<{\n    label: string\n    value: string\n    color: string\n  }[]>([]);\n  topSources = signal<any[]>([]);\n  topBrands = signal<any[]>([]);\n  nameField = viewChild<InputComponent>('nameField');\n  amountField = viewChild<NumberInputComponent>('amountField');\n  priceField = viewChild<NumberInputComponent>('priceField');\n  protected readonly smaller = smaller;\n  protected readonly UnitValue = UnitValue;\n  private productEffect = effect(() => {\n    if (!this.product() || this.form.dirty) {\n      return;\n    }\n    this.form.reset(productToFormValue(this.product()!));\n    this.form.markAsPristine();\n  });\n\n  private get _defFormValue() {\n    return {\n      name: null,\n      amount: null,\n      price: null,\n      source: null,\n      brand: null,\n      notes: null,\n      category_id: null,\n      unit: 'gram',\n    };\n  }\n\n  private get _formValid() {\n    return this.form.valid;\n  }\n\n  eggsChanged(event: any) {\n    this.form.patchValue({\n      amount: event\n    });\n  }\n\n  ngOnInit() {\n    this._loadUsingHistory();\n    this.form.valueChanges.pipe(\n      debounceTime(100),\n    ).subscribe(values => {\n      if (!this.form.dirty) {\n        return\n      }\n      this.product()?.update(values);\n    })\n  }\n\n  resetForm(\n    value?: Product\n  ) {\n    this.form.reset(value ? productToFormValue(value) : this._defFormValue);\n    this.form.markAsPristine();\n    this._loadUsingHistory();\n  }\n\n  validateForm() {\n    if (!this._formValid) {\n      this._notificationsService.error(this._notificationsService.parseFormErrors(this.form).join(', '));\n      return false;\n    }\n    return true\n  }\n\n  ngAfterViewInit() {\n    this._selectResourcesService.load().then(resources => {\n    });\n\n    this._focusFirstEmptyControl();\n    this.form.markAsPristine()\n  }\n\n  private _focusFirstEmptyControl() {\n    if (!this.form.value.name?.length) {\n      this.nameField()!.focus();\n    } else if (!this.form.value.amount) {\n      this.amountField()!.focus();\n    } else if (!this.form.value.price) {\n      this.priceField()!.focus();\n    } else {\n      this.nameField()!.focus();\n    }\n  }\n\n  private _loadUsingHistory() {\n    this._productsRepository.getTopCategories().then(categories => {\n      this.topCategories.set(categories.map(category => ({\n        label: category.name,\n        value: category.uuid ?? '',\n        color: category.ownColor,\n      })));\n    });\n\n    this._productsRepository.getTopSources().then(sources => {\n      this.topSources.set(sources.map(source => ({\n        label: source,\n        value: source,\n      })));\n    });\n\n    this._productsRepository.getTopBrands().then(brands => {\n      this.topBrands.set(brands.map(brand => ({\n        label: brand,\n        value: brand,\n      })));\n    });\n  }\n}\n", "<form [formGroup]=\"form\">\n  <lg-flex-column>\n    <lg-card>\n      <lg-flex-column>\n        <lg-control [label]=\"'product.form.name.placeholder'|translate\">\n          <lg-input #nameField\n                    formControlName=\"name\"\n                    placeholder=\"\"></lg-input>\n        </lg-control>\n\n        <lg-flex-row [center]=\"true\" [mobileMode]=\"true\">\n          <lg-control\n            [label]=\"'product.form.amount.placeholder'|translate:{unit:('unit.long.'+(form.value.unit || UnitValue.GRAM)|translate)}\"\n            lgExpand>\n            <lg-number-input #amountField\n                             (onInputChange)=\"priceField.focus()\"\n                             formControlName=\"amount\"\n                             lgParseMath\n                             placeholder=\"\">\n              <ng-template lgExtraTpl place=\"after\">\n                <lg-flex-row [center]=\"true\" [size]=\"'small'\">\n                  <lg-tooltip [position]=\"'left'\">\n                    <lg-button [flat]=\"true\"\n                               [icon]=\"true\"\n                               [style]=\"'success'\">\n                      <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n                    </lg-button>\n\n                    <div ngProjectAs=\"content\">\n                      <lg-amount-widgets (eggsChanged)=\"eggsChanged($event)\"></lg-amount-widgets>\n                    </div>\n                  </lg-tooltip>\n                  <lg-unit-switcher formControlName=\"unit\">\n                  </lg-unit-switcher>\n                </lg-flex-row>\n              </ng-template>\n            </lg-number-input>\n          </lg-control>\n\n          <lg-control [label]=\"'product.form.price.placeholder'|translate:{currency:'EUR'}\"\n                      lgWidth=\"40%\">\n            <lg-number-input #priceField\n                             formControlName=\"price\"\n                             lgParseMath\n                             placeholder=\"\">\n              <ng-template lgExtraTpl place=\"after\">\n                <span>{{ userSettings()['currency']|currencySymbol }}</span>\n\n              </ng-template>\n            </lg-number-input>\n          </lg-control>\n\n          <lg-control lgWidth=\"40%\">\n            <ng-template lgControlLabelTemplate>\n              <span>{{ userSettings()['currency']|currencySymbol }}</span>\n              <span [translateParams]=\"{unit:product()?.unit | unitString | translate}\"\n                    [translate]=\"'per-unit.label'\"></span>\n            </ng-template>\n\n            @if (hasMicroPrice()) {\n              <lg-readonly-control [placeholder]=\"''\"\n                                   [value]=\"'micro-amount'|translate \">\n              </lg-readonly-control>\n            } @else {\n              <lg-readonly-control [placeholder]=\"''\"\n                                   [value]=\"product()?.pricePerUnit | number:pipesDigits() \">\n              </lg-readonly-control>\n            }\n          </lg-control>\n        </lg-flex-row>\n      </lg-flex-column>\n    </lg-card>\n\n    <lg-flex-row [equal]=\"true\" [mobileMode]=\"true\" [top]=\"true\" style=\"--control-bg: var(--hr-bg-strong)\">\n      <lg-control [label]=\"'product.form.source.placeholder'|translate\">\n        <lg-flex-column size=\"small\">\n          <lg-autocomplete #sourceInput\n                           (onSelected)=\"sourceChips.clearSelected()\"\n                           [noLoad]=\"true\"\n                           [resource]=\"'sources'\"\n                           appendTo=\"body\"\n                           formControlName=\"source\"\n                           placeholder=\"\"></lg-autocomplete>\n          <div [hidden]=\"!topSources().length\">\n            <lg-chips-list #sourceChips [control]=\"sourceInput\" [items]=\"topSources()\"></lg-chips-list>\n          </div>\n        </lg-flex-column>\n      </lg-control>\n\n      <lg-control [label]=\"'product.form.brand.placeholder'|translate\">\n        <lg-flex-column size=\"small\">\n          <lg-autocomplete #brandInput\n                           (onSelected)=\"brandChips.clearSelected()\"\n                           [noLoad]=\"true\"\n                           [resource]=\"'brands'\"\n                           appendTo=\"body\"\n                           formControlName=\"brand\"\n                           placeholder=\"\"></lg-autocomplete>\n          <div [hidden]=\"!topBrands().length\">\n            <lg-chips-list #brandChips [control]=\"brandInput\" [items]=\"topBrands()\"></lg-chips-list>\n          </div>\n        </lg-flex-column>\n      </lg-control>\n    </lg-flex-row>\n\n    <lg-flex-row [equal]=\"true\" [mobileMode]=\"true\" [top]=\"true\" style=\"--control-bg: var(--hr-bg-strong)\">\n      <lg-control [label]=\"'product.form.notes.placeholder'|translate\">\n        <lg-textarea [rows]=\"3\"\n                     formControlName=\"notes\"\n                     placeholder=\"\"></lg-textarea>\n      </lg-control>\n\n      <lg-control [label]=\"'product.form.category_id.placeholder'|translate\">\n        <lg-flex-column size=\"small\">\n          <lg-multiselect #categorySelect\n                          [resource]=\"'product-categories'\"\n                          appendTo=\"body\"\n                          formControlName=\"category_id\"\n                          placeholder=\"\">\n          </lg-multiselect>\n\n          @if (topCategories().length) {\n            <lg-chips-list [control]=\"categorySelect\" [items]=\"topCategories()\"></lg-chips-list>\n          }\n        </lg-flex-column>\n      </lg-control>\n    </lg-flex-row>\n  </lg-flex-column>\n</form>\n", "import {AfterViewInit, Component, computed, inject, OnInit, signal, viewChild} from '@angular/core';\n\nimport {TitleComponent} from '../../../../shared/view/layout/title.component';\nimport {AddProductFormComponent} from './add-product-form.component';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {FlexRowComponent} from '../../../../shared/view/layout/flex-row.component';\nimport {FadeInComponent} from '../../../../shared/view/ui/fade-in.component';\nimport {DraftForm} from '../../../../shared/service/services/draft-forms.service';\nimport {ProductsRepository} from '../../service/products.repository';\nimport {NotificationsService} from '../../../../shared/service/services/notifications.service';\nimport {combineLatest, debounceTime, take} from 'rxjs';\nimport {ButtonComponent} from '../../../../shared/view/ui/button.component';\nimport {ShrinkDirective} from '../../../../shared/view/directives/shrink.directive';\nimport {TimeAgoPipe} from '../../../../shared/view/pipes/time-ago.pipe';\nimport {CurrencyPipe} from '@angular/common';\nimport {Product} from '../../service/Product';\nimport {ProductDTO} from '../../service/Product.scheme';\nimport {ContainerComponent} from '../../../../shared/view/layout/container.component';\nimport {TranslatePipe} from '@ngx-translate/core';\nimport {FlexColumnComponent} from '../../../../shared/view/layout/flex-column.component';\nimport {\n  InlineSeparatedGroupComponent,\n  InlineSeparatedGroupDirective\n} from '../../../../shared/view/ui/inline-separated-group.component';\nimport {ROUTER_MANAGER} from '../../../../shared/service/providers/router-manager.provider';\nimport {AnalyticsService} from '../../../../shared/service/services/analytics.service';\nimport {SelfStartDirective} from '../../../../shared/view/directives/self-start.directive';\nimport {ControlsBarComponent} from '../../../../shared/view/ui/controls-bar/controls-bar.component';\nimport {MatIcon} from '@angular/material/icon';\nimport {errorHandler} from '../../../../shared/helpers';\n\n@Component({\n  selector: 'lg-add-product',\n  standalone: true,\n  imports: [\n    ContainerComponent,\n    TitleComponent,\n    AddProductFormComponent,\n    FlexRowComponent,\n    FadeInComponent,\n    ButtonComponent,\n    ShrinkDirective,\n    TimeAgoPipe,\n    TranslatePipe,\n    FlexColumnComponent,\n    InlineSeparatedGroupComponent,\n    InlineSeparatedGroupDirective,\n    SelfStartDirective,\n    ControlsBarComponent,\n    MatIcon,\n  ],\n  template: `\n    @if (editMode()) {\n      <lg-controls-bar>\n        <lg-button [icon]=\"true\"\n                   [link]=\"'/products/add'\"\n                   [size]=\"'medium'\"\n                   [style]=\"'primary'\">\n          <mat-icon aria-hidden=\"false\" fontIcon=\"add\"></mat-icon>\n        </lg-button>\n      </lg-controls-bar>\n    }\n\n    <lg-fade-in>\n      <lg-container>\n        <lg-flex-column size=\"medium\">\n          <lg-flex-row [center]=\"true\" [mobileMode]=\"true\">\n            @if ((product()?.uuid && !draftRef()) || (draftRef() && draftByExistingProduct())) {\n              <lg-title lgSelfStart>\n                {{ product()?.name }}\n              </lg-title>\n            } @else {\n              <lg-title lgSelfStart>\n                {{ 'product.form.title'|translate }}\n              </lg-title>\n            }\n          </lg-flex-row>\n\n          <lg-inline-separated-group>\n            @if (draftRef() && formComponent()?.form?.dirty) {\n              <ng-template lgInlineSeparatedGroup>\n                <lg-fade-in>\n                  <span class=\"text-success\">{{ 'saved-draft-label'|translate }}</span>\n                </lg-fade-in>\n              </ng-template>\n            }\n\n            @if (isDraftRoute()) {\n              <ng-template lgInlineSeparatedGroup>\n                <lg-button lgShrink [style]=\"'danger'\"\n                           [flat]=\"true\"\n                           (click)=\"onRemoveDraft()\">\n                  {{ 'product.form.delete-draft-btn'|translate }}\n                </lg-button>\n              </ng-template>\n            } @else if (product()?.uuid) {\n              <ng-template lgInlineSeparatedGroup>\n                <lg-button lgShrink [style]=\"'danger'\"\n                           [flat]=\"true\"\n                           (click)=\"onDeleteProduct()\">\n                  {{ 'product.form.delete-btn'|translate }}\n                </lg-button>\n              </ng-template>\n            }\n          </lg-inline-separated-group>\n\n          @if (editMode() && product()?.updatedAt) {\n            <small class=\"text-muted text-cursive\">\n              {{ 'edited-at-label'|translate }} {{ product()?.updatedAt | timeAgo }}\n            </small>\n          }\n\n        </lg-flex-column>\n\n        <lg-add-product-form [product]=\"product()\"></lg-add-product-form>\n\n        <lg-flex-row [mobileMode]=\"true\" [relaxed]=\"true\">\n          @if ((product() && !draftRef()) || (draftRef() && draftByExistingProduct())) {\n            <lg-button [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                       lgShrink\n                       [style]=\"'primary'\"\n                       (click)=\"onEditProduct()\">\n              @if (formComponent()?.form?.dirty || draftRef()) {\n                {{ 'product.form.save-btn.edit.active'|translate }}\n              } @else {\n                {{ 'product.form.save-btn.edit.disabled'|translate }}\n              }\n            </lg-button>\n          } @else {\n            <lg-button lgShrink\n                       [style]=\"'primary'\"\n                       [disabled]=\"!formComponent()?.form?.dirty && !draftRef()\"\n                       (click)=\"onAddProduct()\">\n              @if (formComponent()?.form?.dirty || draftRef()) {\n                {{ 'product.form.save-btn.add.active'|translate }}\n              } @else {\n                {{ 'product.form.save-btn.add.disabled'|translate }}\n              }\n            </lg-button>\n          }\n\n        </lg-flex-row>\n      </lg-container>\n    </lg-fade-in>\n  `,\n  styles: [\n    `\n    `\n  ],\n  providers: [\n    CurrencyPipe,\n  ]\n})\nexport class AddProductComponent\n  implements OnInit, AfterViewInit {\n  constructor(\n    public _router: Router,\n    private _aRoute: ActivatedRoute,\n    private _productsRepository: ProductsRepository,\n    private _notificationsService: NotificationsService,\n    private _analyticsService: AnalyticsService,\n  ) {\n  }\n\n  draftOrProductUUID = signal<string | undefined>(undefined);\n  product = signal<Product | null>(null);\n  formComponent = viewChild<AddProductFormComponent | null>(AddProductFormComponent);\n  draftRef = signal<DraftForm<ProductDTO> | null>(null);\n  draftByExistingProduct = computed(() => {\n    return this.draftRef()!.meta?.['uuid'];\n  });\n  isDraftRoute = signal(false);\n  readonly editMode = computed(() => {\n    return (this.product()?.uuid && !this.draftRef()) || (this.draftRef() && this.draftByExistingProduct())\n  })\n  private _routerManager = inject(ROUTER_MANAGER);\n\n  ngOnDestroy() {\n  }\n\n  ngOnInit() {\n    combineLatest([\n      this._aRoute.params,\n      this._aRoute.data,\n    ]).pipe(take(1)).subscribe(([params, data]) => {\n      this.draftOrProductUUID.set(params['uuid']);\n      if (data['draft']) {\n        this.draftRef.set(data['draft']);\n        this.product.set(Product.fromRaw(data['draft'].data));\n      } else if (this.draftOrProductUUID()) {\n        this._loadProduct(this.draftOrProductUUID());\n      } else {\n        this.product.set(Product.empty());\n      }\n      this.isDraftRoute.set(!!data['draftRoute']);\n    });\n  }\n\n  ngAfterViewInit() {\n\n    this.formComponent()?.form.valueChanges.pipe(\n      debounceTime(500),\n    ).subscribe((value) => {\n      if (!this.formComponent()!.form.dirty || !this.product()) {\n        return\n      }\n\n      if (this.draftRef()?.uuid) {\n        this._productsRepository.updateDraftProduct(\n          this.draftRef()!.uuid,\n          this.product()!,\n          this.draftRef()!.meta?.['uuid']\n        );\n      } else if (this.product()) {\n        this.draftRef.set(this._productsRepository.saveDraftProduct(\n          this.product()!,\n          this.draftOrProductUUID() ?? ''));\n\n        // if (!this.isDraftRoute()) {\n        //   this._routerManager.replace(['products/draft/' + this.draftRef()!.uuid]);\n        // }\n      }\n    });\n  }\n\n  onAddProduct() {\n    if (!this.formComponent()?.validateForm()\n      || !this.product()) {\n      return;\n    }\n    this._addProduct(this.product()!);\n  }\n\n  onEditProduct() {\n    if (!this.formComponent()?.validateForm()\n      || !this.product()) {\n      return;\n    }\n    this._editProduct(this.product()!);\n  }\n\n  onRemoveDraft() {\n    this._removeDraft();\n    this._routerManager.navigate(['products']);\n  }\n\n  onDeleteProduct() {\n    if (!this.product()?.uuid) {\n      return;\n    }\n    this._productsRepository.deleteProduct(this.product()!.uuid!).then(() => {\n      this._notificationsService.success('notifications.product.deleted');\n      this._routerManager.navigate(['products']);\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n\n  private _addProduct(product: Product) {\n    this._productsRepository.addOne(product).then((newUUID) => {\n      // Track product creation analytics\n      this._analyticsService.trackProductCreated(product.name, {\n        product_uuid: newUUID,\n        price_per_unit: product.pricePerUnit,\n        unit: product.unit,\n        category: product.category_id?.name\n      });\n\n      this.formComponent()?.resetForm();\n      this._notificationsService.success('notifications.product.added');\n      this.product.set(null);\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.replace(['products/edit/' + newUUID]);\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n\n  private _editProduct(product: Product) {\n    if (!this.draftOrProductUUID()) {\n      return;\n    }\n    let productUUID = this.draftRef()?.meta?.['uuid'] ?? this.draftOrProductUUID();\n    this._productsRepository.updateOne(productUUID as string, product).then(() => {\n      this.formComponent()?.resetForm(product);\n      this._notificationsService.success('notifications.product.edited');\n\n      if (this.draftRef()) {\n        this._removeDraft();\n      }\n\n      this._routerManager.replace(['products', 'edit', productUUID]);\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n\n  private _removeDraft() {\n    if (!this.draftRef()) {\n      return;\n    }\n    this._productsRepository.removeDraftProduct(this.draftRef()!.uuid)\n    this.draftRef.set(null);\n  }\n\n  private _loadProduct(uuid?: string) {\n    if (!uuid) {\n      return;\n    }\n    this._productsRepository.getOne(uuid, true).then(product => {\n      if (!product) {\n        return;\n      }\n      this.product.set(product);\n    }).catch(error => {\n      this._notificationsService.error(errorHandler(error));\n    });\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
