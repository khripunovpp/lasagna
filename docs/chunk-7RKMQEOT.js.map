{
  "version": 3,
  "sources": ["src/app/shared/view/ui/form/input.component.ts"],
  "sourcesContent": ["import {\n  AfterViewInit,\n  Component,\n  computed,\n  contentChildren,\n  ElementRef,\n  forwardRef,\n  HostBinding,\n  input,\n  output,\n  signal,\n  ViewChild\n} from '@angular/core';\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {ControlExtraTemplateDirective} from './control-extra-template.directive';\nimport {NgTemplateOutlet} from '@angular/common';\n\n@Component({\n  selector: 'lg-input',\n  standalone: true,\n  template: `\n      <div [class.contrast]=\"theme() === 'contrast'\"\n           class=\"lg-input\">\n          @if (beforeExtraTpl()?.templateRef) {\n              <div class=\"lg-input__before\">\n                  <ng-container *ngTemplateOutlet=\"beforeExtraTpl()!.templateRef\"></ng-container>\n              </div>\n          }\n          <input #input\n                 (blur)=\"focused.set(false)\"\n                 (change)=\"onInputChanged.emit(value)\"\n                 (focus)=\"focused.set(true)\"\n                 (input)=\"onChangeInput($event)\"\n                 (keydown.enter)=\"onEnter.emit(value)\"\n                 [disabled]=\"disable()\"\n                 [placeholder]=\"placeholder()\"\n                 [value]=\"value\"\n                 class=\"input\"\n                 type=\"text\">\n\n          @if (afterExtraTpl()?.templateRef) {\n              <div class=\"lg-input__after\">\n                  <ng-container *ngTemplateOutlet=\"afterExtraTpl()!.templateRef\"></ng-container>\n              </div>\n          }\n      </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n        flex: 1;\n\n        &.focused {\n          box-shadow: var(--focus-shadow);\n          border-radius: 12px;\n        }\n      }\n\n      .lg-input {\n        display: flex;\n        flex: 1;\n        background-color: var(--control-bg);\n        border-radius: 12px;\n        gap: 16px;\n      }\n\n      .lg-input__after {\n        display: flex;\n        align-items: center;\n        gap: 16px;\n        padding: 0 16px;\n        white-space: nowrap;\n        flex: 0 0 auto;\n      }\n\n      .lg-input__before {\n        display: flex;\n        align-items: center;\n        gap: 16px;\n        padding: 0 16px;\n        white-space: nowrap;\n        flex: 0 0 auto;\n      }\n\n      .input {\n        flex: 1;\n        border: none;\n        padding: 16px;\n        border-radius: 12px;\n        font-family: inherit;\n        font-size: inherit;\n        background-color: transparent;\n        width: 100%;\n      }\n\n      .input::placeholder {\n        color: var(--placeholder);\n      }\n\n      .input:focus {\n        outline: none;\n      }\n    `\n  ],\n  imports: [\n    FormsModule,\n    NgTemplateOutlet,\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\n\nexport class InputComponent\n  implements ControlValueAccessor, AfterViewInit {\n  constructor() {\n  }\n\n  @ViewChild('input', {static: true}) input: ElementRef<HTMLInputElement> | undefined;\n  value: string = '';\n  focused = signal<boolean>(false);\n  placeholder = input('Enter text here');\n  autoFocus = input(false);\n  disable = input(false);\n  onInputChanged = output<string>();\n  onEnter = output<string>();\n  theme = input<\n    'default' | 'contrast'\n  >('default');\n  noAfter = signal(false);\n  extraTpl = contentChildren(ControlExtraTemplateDirective, {descendants: true});\n  afterExtraTpl = computed(() => {\n    return this.extraTpl().find(tpl => tpl.place() === 'after');\n  });\n  beforeExtraTpl = computed(() => {\n    return this.extraTpl().find(tpl => tpl.place() === 'before');\n  });\n\n  @HostBinding('class.focused') get focusedClass() {\n    return this.focused();\n  }\n\n  onChange: (value: string) => void = () => {\n  };\n\n  onTouched: () => void = () => {\n  };\n\n  writeValue(value: string): void {\n    this._change(value);\n  }\n\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  onChangeInput(\n    event: Event\n  ) {\n    this._change((event.target as HTMLInputElement).value);\n  }\n\n  focus() {\n    this.input?.nativeElement.focus();\n  }\n\n\n  ngAfterViewInit() {\n    if (this.autoFocus()) {\n      this.focus();\n    }\n  }\n\n  private _change(value: string) {\n    this.value = String(value || '').trim();\n    this.onChange(this.value);\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBkB,IAAA,6BAAA,CAAA;;;;;AADJ,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,OAAA,eAAA,EAAA,WAAA;;;;;AAiBf,IAAA,6BAAA,CAAA;;;;;AADJ,IAAA,yBAAA,GAAA,OAAA,CAAA;AACI,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,CAAA;AACJ,IAAA,uBAAA;;;;AADmB,IAAA,oBAAA;AAAA,IAAA,qBAAA,oBAAA,OAAA,cAAA,EAAA,WAAA;;;AA4E3B,IAAO,iBAAP,MAAO,gBAAc;EAEzB,cAAA;EACA;EAEoC;EACpC,QAAgB;EAChB,UAAU,OAAgB,KAAK;EAC/B,cAAc,MAAM,iBAAiB;EACrC,YAAY,MAAM,KAAK;EACvB,UAAU,MAAM,KAAK;EACrB,iBAAiB,OAAM;EACvB,UAAU,OAAM;EAChB,QAAQ,MAEN,SAAS;EACX,UAAU,OAAO,KAAK;EACtB,WAAW,gBAAgB,+BAA+B,EAAC,aAAa,KAAI,CAAC;EAC7E,gBAAgB,SAAS,MAAK;AAC5B,WAAO,KAAK,SAAQ,EAAG,KAAK,SAAO,IAAI,MAAK,MAAO,OAAO;EAC5D,CAAC;EACD,iBAAiB,SAAS,MAAK;AAC7B,WAAO,KAAK,SAAQ,EAAG,KAAK,SAAO,IAAI,MAAK,MAAO,QAAQ;EAC7D,CAAC;EAED,IAAkC,eAAY;AAC5C,WAAO,KAAK,QAAO;EACrB;EAEA,WAAoC,MAAK;EACzC;EAEA,YAAwB,MAAK;EAC7B;EAEA,WAAW,OAAa;AACtB,SAAK,QAAQ,KAAK;EACpB;EAEA,iBAAiB,IAAO;AACtB,SAAK,WAAW;EAClB;EAEA,kBAAkB,IAAO;AACvB,SAAK,YAAY;EACnB;EAEA,cACE,OAAY;AAEZ,SAAK,QAAS,MAAM,OAA4B,KAAK;EACvD;EAEA,QAAK;AACH,SAAK,OAAO,cAAc,MAAK;EACjC;EAGA,kBAAe;AACb,QAAI,KAAK,UAAS,GAAI;AACpB,WAAK,MAAK;IACZ;EACF;EAEQ,QAAQ,OAAa;AAC3B,SAAK,QAAQ,OAAO,SAAS,EAAE,EAAE,KAAI;AACrC,SAAK,SAAS,KAAK,KAAK;EAC1B;;qCAnEW,iBAAc;EAAA;yEAAd,iBAAc,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,gBAAA,SAAA,8BAAA,IAAA,KAAA,UAAA;AAAA,QAAA,KAAA,GAAA;6DAiBE,+BAA6B,CAAA;;;;;;;;;;;;;;;AAjB7C,MAAA,sBAAA,WAAA,IAAA,YAAA;;wOATA;IACT;MACE,SAAS;MACT,aAAa,WAAW,MAAM,eAAc;MAC5C,OAAO;;GAEV,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,SAAA,EAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,QAAA,QAAA,GAAA,SAAA,GAAA,QAAA,UAAA,SAAA,SAAA,iBAAA,YAAA,eAAA,OAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,kBAAA,CAAA,GAAA,UAAA,SAAA,wBAAA,IAAA,KAAA;AAAA,QAAA,KAAA,GAAA;;AA9FG,MAAA,yBAAA,GAAA,OAAA,CAAA;AAEI,MAAA,8BAAA,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA;AAKA,MAAA,yBAAA,GAAA,SAAA,GAAA,CAAA;AACO,MAAA,qBAAA,QAAA,SAAA,gDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAAQ,IAAA,QAAA,IAAY,KAAK,CAAC;MAAA,CAAA,EAAC,UAAA,SAAA,kDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBACjB,IAAA,eAAA,KAAA,IAAA,KAAA,CAA0B;MAAA,CAAA,EAAC,SAAA,SAAA,iDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAC5B,IAAA,QAAA,IAAY,IAAI,CAAC;MAAA,CAAA,EAAC,SAAA,SAAA,+CAAA,QAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBAClB,IAAA,cAAA,MAAA,CAAqB;MAAA,CAAA,EAAC,iBAAA,SAAA,yDAAA;AAAA,QAAA,wBAAA,GAAA;AAAA,eAAA,sBACd,IAAA,QAAA,KAAA,IAAA,KAAA,CAAmB;MAAA,CAAA;AAL3C,MAAA,uBAAA;AAYA,MAAA,8BAAA,GAAA,uCAAA,GAAA,GAAA,OAAA,CAAA;AAKJ,MAAA,uBAAA;;;;;AAxBK,MAAA,sBAAA,YAAA,IAAA,MAAA,MAAA,UAAA;AAED,MAAA,oBAAA;AAAA,MAAA,0BAAA,UAAA,IAAA,eAAA,MAAA,OAAA,OAAA,QAAA,eAAA,IAAA,EAAA;AAWO,MAAA,oBAAA;AAAA,MAAA,qBAAA,YAAA,IAAA,QAAA,CAAA,EAAsB,eAAA,IAAA,YAAA,CAAA,EACO,SAAA,IAAA,KAAA;AAKpC,MAAA,oBAAA,CAAA;AAAA,MAAA,0BAAA,UAAA,IAAA,cAAA,MAAA,OAAA,OAAA,QAAA,eAAA,IAAA,EAAA;;;IAkEN;IACA;EAAgB,GAAA,QAAA,CAAA,m+BAAA,EAAA,CAAA;;;sEAWP,gBAAc,CAAA;UArG1B;uBACW,YAAU,YACR,MAAI,UACN;;;;;;;;;;;;;;;;;;;;;;;;;;KA0BT,SA2DQ;MACP;MACA;OACD,WACU;MACT;QACE,SAAS;QACT,aAAa,WAAW,MAAK,cAAe;QAC5C,OAAO;;OAEV,QAAA,CAAA,iiCAAA,EAAA,CAAA;kBAQmC,OAAK,CAAA;UAAxC;WAAU,SAAS,EAAC,QAAQ,KAAI,CAAC;MAoBA,cAAY,CAAA;UAA7C;WAAY,eAAe;;;;6EAzBjB,gBAAc,EAAA,WAAA,kBAAA,UAAA,kDAAA,YAAA,IAAA,CAAA;AAAA,GAAA;",
  "names": []
}
